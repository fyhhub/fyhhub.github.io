import{_ as e}from"./plugin-vueexport-helper.2444895f.js";import{o as t,c as o,a as n,b as s,d as p,e as c,r as l}from"./app.e355f398.js";const r={},i={id:"_700-\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7684\u641C\u7D22",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#_700-\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7684\u641C\u7D22","aria-hidden":"true"},"#",-1),d={href:"https://leetcode-cn.com/problems/search-in-a-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"},k=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">root</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">searchBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> root<span class="token punctuation">.</span>val <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">searchBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> val <span class="token operator">?</span> root<span class="token punctuation">.</span>right <span class="token operator">:</span> root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(m,_){const a=l("ExternalLinkIcon");return t(),o("div",null,[n("h1",i,[u,s(),n("a",d,[s("700.\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7684\u641C\u7D22"),p(a)])]),k])}const b=e(r,[["render",v],["__file","700.\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7684\u641C\u7D22.html.vue"]]);export{b as default};
