import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.3d945e71.js";const F=JSON.parse('{"title":"Pandas使用","description":"","frontmatter":{},"headers":[],"relativePath":"python/1.python基础.md","filePath":"python/1.python基础.md","lastUpdated":1730984667000}'),p={name:"python/1.python基础.md"},o=l(`<h1 id="pandas使用" tabindex="-1">Pandas使用 <a class="header-anchor" href="#pandas使用" aria-label="Permalink to &quot;Pandas使用&quot;">​</a></h1><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pip install pandas</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pip install pandas</span></span></code></pre></div><h2 id="数据读取" tabindex="-1">数据读取 <a class="header-anchor" href="#数据读取" aria-label="Permalink to &quot;数据读取&quot;">​</a></h2><h3 id="_1-读取表格" tabindex="-1">1. 读取表格 <a class="header-anchor" href="#_1-读取表格" aria-label="Permalink to &quot;1. 读取表格&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># -*- coding: utf-8 -*-</span></span>
<span class="line"><span style="color:#E1E4E8;">df </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pd.read_csv(</span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;utf-8&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">filepath_or_buffer</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;xxx&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">df </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pd.read_excel(</span><span style="color:#9ECBFF;">&#39;example.xlsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">usecols</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;A&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B&#39;</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># -*- coding: utf-8 -*-</span></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">filepath_or_buffer</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;xxx&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_excel(</span><span style="color:#032F62;">&#39;example.xlsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">usecols</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B&#39;</span><span style="color:#24292E;">])</span></span></code></pre></div><h3 id="_2-获取表头" tabindex="-1">2.获取表头 <a class="header-anchor" href="#_2-获取表头" aria-label="Permalink to &quot;2.获取表头&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df.columns</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df.columns</span></span></code></pre></div><h3 id="_3-获取某一列去重后的值" tabindex="-1">3.获取某一列去重后的值 <a class="header-anchor" href="#_3-获取某一列去重后的值" aria-label="Permalink to &quot;3.获取某一列去重后的值&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;column_name&#39;</span><span style="color:#E1E4E8;">].unique()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;column_name&#39;</span><span style="color:#24292E;">].unique()</span></span></code></pre></div><h2 id="数据操作" tabindex="-1">数据操作 <a class="header-anchor" href="#数据操作" aria-label="Permalink to &quot;数据操作&quot;">​</a></h2><h3 id="_1-填充空数据" tabindex="-1">1.填充空数据 <a class="header-anchor" href="#_1-填充空数据" aria-label="Permalink to &quot;1.填充空数据&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;pageUrl&#39;</span><span style="color:#E1E4E8;">].fillna(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;pageUrl&#39;</span><span style="color:#24292E;">].fillna(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_2-修改某列的所有数据" tabindex="-1">2.修改某列的所有数据 <a class="header-anchor" href="#_2-修改某列的所有数据" aria-label="Permalink to &quot;2.修改某列的所有数据&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;pageUrl&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> df[</span><span style="color:#9ECBFF;">&#39;pageUrl&#39;</span><span style="color:#E1E4E8;">].map(</span><span style="color:#F97583;">lambda</span><span style="color:#E1E4E8;"> x: </span><span style="color:#9ECBFF;">&#39;xxxx&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(x))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;pageUrl&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[</span><span style="color:#032F62;">&#39;pageUrl&#39;</span><span style="color:#24292E;">].map(</span><span style="color:#D73A49;">lambda</span><span style="color:#24292E;"> x: </span><span style="color:#032F62;">&#39;xxxx&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(x))</span></span></code></pre></div><h3 id="_3-新建表格" tabindex="-1">3.新建表格 <a class="header-anchor" href="#_3-新建表格" aria-label="Permalink to &quot;3.新建表格&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&#39;Alice&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Bob&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Charlie&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;David&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">23</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;salary&#39;</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">70000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">80000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">120000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">95000</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建 DataFrame</span></span>
<span class="line"><span style="color:#E1E4E8;">df </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pd.DataFrame(data)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;Alice&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Bob&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Charlie&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;David&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">23</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">45</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;salary&#39;</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">70000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">80000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">120000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">95000</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建 DataFrame</span></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.DataFrame(data)</span></span></code></pre></div><h2 id="数据筛选" tabindex="-1">数据筛选 <a class="header-anchor" href="#数据筛选" aria-label="Permalink to &quot;数据筛选&quot;">​</a></h2><h3 id="_1-筛选缺失的值" tabindex="-1">1.筛选缺失的值 <a class="header-anchor" href="#_1-筛选缺失的值" aria-label="Permalink to &quot;1.筛选缺失的值&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;年龄&#39;</span><span style="color:#E1E4E8;">].isna()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;年龄&#39;</span><span style="color:#24292E;">].isna()</span></span></code></pre></div><h3 id="_2-筛选出不包含特定值的行" tabindex="-1">2.筛选出不包含特定值的行 <a class="header-anchor" href="#_2-筛选出不包含特定值的行" aria-label="Permalink to &quot;2.筛选出不包含特定值的行&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;姓名&#39;</span><span style="color:#E1E4E8;">].isin([</span><span style="color:#9ECBFF;">&#39;张三&#39;</span><span style="color:#E1E4E8;">])]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[</span><span style="color:#D73A49;">~</span><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;姓名&#39;</span><span style="color:#24292E;">].isin([</span><span style="color:#032F62;">&#39;张三&#39;</span><span style="color:#24292E;">])]</span></span></code></pre></div><h3 id="_3-筛选日期" tabindex="-1">3.筛选日期 <a class="header-anchor" href="#_3-筛选日期" aria-label="Permalink to &quot;3.筛选日期&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> datetime</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将 &#39;timestamp&#39; 列转换为日期时间格式</span></span>
<span class="line"><span style="color:#E1E4E8;">df[</span><span style="color:#9ECBFF;">&#39;timestamp&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> df[</span><span style="color:#9ECBFF;">&#39;timestamp&#39;</span><span style="color:#E1E4E8;">].apply(</span><span style="color:#F97583;">lambda</span><span style="color:#E1E4E8;"> x: datetime.datetime.strptime(x, </span><span style="color:#9ECBFF;">&#39;%Y-%m-</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;"> %H:%M:%S&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 提取 &#39;年月日&#39; 并去重</span></span>
<span class="line"><span style="color:#E1E4E8;">unique_days </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> df[</span><span style="color:#9ECBFF;">&#39;timestamp&#39;</span><span style="color:#E1E4E8;">].dt.date.unique()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> datetime</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将 &#39;timestamp&#39; 列转换为日期时间格式</span></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;timestamp&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[</span><span style="color:#032F62;">&#39;timestamp&#39;</span><span style="color:#24292E;">].apply(</span><span style="color:#D73A49;">lambda</span><span style="color:#24292E;"> x: datetime.datetime.strptime(x, </span><span style="color:#032F62;">&#39;%Y-%m-</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> %H:%M:%S&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 提取 &#39;年月日&#39; 并去重</span></span>
<span class="line"><span style="color:#24292E;">unique_days </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[</span><span style="color:#032F62;">&#39;timestamp&#39;</span><span style="color:#24292E;">].dt.date.unique()</span></span></code></pre></div><h2 id="数据计算" tabindex="-1">数据计算 <a class="header-anchor" href="#数据计算" aria-label="Permalink to &quot;数据计算&quot;">​</a></h2><h3 id="_1-根据某种条件-对某一列求和" tabindex="-1">1.根据某种条件，对某一列求和 <a class="header-anchor" href="#_1-根据某种条件-对某一列求和" aria-label="Permalink to &quot;1.根据某种条件，对某一列求和&quot;">​</a></h3><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df[df[</span><span style="color:#9ECBFF;">&#39;关联需求类型&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;业务需求&#39;</span><span style="color:#E1E4E8;">][</span><span style="color:#9ECBFF;">&#39;实际工时&#39;</span><span style="color:#E1E4E8;">].sum()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df[df[</span><span style="color:#032F62;">&#39;关联需求类型&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;业务需求&#39;</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&#39;实际工时&#39;</span><span style="color:#24292E;">].sum()</span></span></code></pre></div>`,26),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
