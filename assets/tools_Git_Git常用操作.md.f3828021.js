import{_ as s,o as a,c as p,Q as n}from"./chunks/framework.3d945e71.js";const h=JSON.parse('{"title":"一、完整的Git Workflow","description":"","frontmatter":{},"headers":[],"relativePath":"tools/Git/Git常用操作.md","filePath":"tools/Git/Git常用操作.md","lastUpdated":1694514073000}'),l={name:"tools/Git/Git常用操作.md"},o=n(`<h1 id="一、完整的git-workflow" tabindex="-1">一、完整的Git Workflow <a class="header-anchor" href="#一、完整的git-workflow" aria-label="Permalink to &quot;一、完整的Git Workflow&quot;">​</a></h1><h2 id="_1-ssh登录设置" tabindex="-1">1. ssh登录设置 <a class="header-anchor" href="#_1-ssh登录设置" aria-label="Permalink to &quot;1. ssh登录设置&quot;">​</a></h2><p>设置用户名和邮箱</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">–global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;xxx&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">–global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.email</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;xxxx@xx.xx&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">–global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;xxx&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">–global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.email</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;xxxx@xx.xx&quot;</span></span></code></pre></div><p>生成密钥</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;xxx@xxx.cn&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;xxx@xxx.cn&quot;</span></span></code></pre></div><p>找到<code>~/.ssh/id_rsa.pub</code>并复制内容。 gitlab上创建ssh将刚才复制的内容粘贴上去，title随便取个名字。</p><h2 id="_2-git-clone" tabindex="-1">2. git clone <a class="header-anchor" href="#_2-git-clone" aria-label="Permalink to &quot;2. git clone&quot;">​</a></h2><p><strong>有如下几种克隆代码的形式：</strong></p><ol><li>全量拉取所有代码和commit</li></ol><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git clone git@xxx.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git clone git@xxx.git</span></span></code></pre></div><ol start="2"><li>我们只克隆下包含最近一次commit的一个分支，这样这个项目文件就不会很大。</li></ol><p><strong>使用场景：你只是想clone最新版本来使用或学习，而不是参与整个项目的开发工作</strong></p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git clone --depth 1 git@xxxxx.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git clone --depth 1 git@xxxxx.git</span></span></code></pre></div><ol start="3"><li>可以选择只拉取某个分支</li></ol><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git clone -b feature-xxx  git@xxxxx.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git clone -b feature-xxx  git@xxxxx.git</span></span></code></pre></div><h2 id="_3-创建并切换分支" tabindex="-1">3. 创建并切换分支 <a class="header-anchor" href="#_3-创建并切换分支" aria-label="Permalink to &quot;3. 创建并切换分支&quot;">​</a></h2><p>创建 + 切换分支</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-xxx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-xxx</span></span></code></pre></div><p>切换分支</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-xxx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-xxx</span></span></code></pre></div><p>分支命名规范</p><ul><li>新需求和特性： feature-模块名-姓名缩写</li><li>bug修复（待确定）： fix-模块名-姓名缩写</li></ul><h2 id="_4-git-add" tabindex="-1">4. git add <a class="header-anchor" href="#_4-git-add" aria-label="Permalink to &quot;4. git add&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 添加1.txt到暂存区</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 添加所有文件到暂存区</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">.txt</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 添加1.txt到暂存区</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 添加所有文件到暂存区</span></span></code></pre></div><h2 id="_5-git-commit-m-xxx" tabindex="-1">5. git commit -m &quot;xxx&quot; <a class="header-anchor" href="#_5-git-commit-m-xxx" aria-label="Permalink to &quot;5. git commit -m &quot;xxx&quot;&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;xxx&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 提交commit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;xxx&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 提交commit</span></span></code></pre></div><h2 id="_6-git-log" tabindex="-1">6. git log <a class="header-anchor" href="#_6-git-log" aria-label="Permalink to &quot;6. git log&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 查看log日志</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--stat</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 查看大致改动，可以看到修改的文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 查看log日志</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--stat</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 查看大致改动，可以看到修改的文件</span></span></code></pre></div><h2 id="_7-git-show" tabindex="-1">7. git show <a class="header-anchor" href="#_7-git-show" aria-label="Permalink to &quot;7. git show&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">70</span><span style="color:#9ECBFF;">f68aa8fcfcea1054fb790ab9879f48c2598aa4</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 查看commit详情</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">70</span><span style="color:#032F62;">f68aa8fcfcea1054fb790ab9879f48c2598aa4</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 查看commit详情</span></span></code></pre></div><h2 id="_6-git-push" tabindex="-1">6. git push <a class="header-anchor" href="#_6-git-push" aria-label="Permalink to &quot;6. git push&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 上传commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--force</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 强制上传commit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 上传commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--force</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 强制上传commit</span></span></code></pre></div><h2 id="_7-git-pull" tabindex="-1">7. git pull <a class="header-anchor" href="#_7-git-pull" aria-label="Permalink to &quot;7. git pull&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 拉取当前分支的远程代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 拉取master的远程代码</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 拉取当前分支的远程代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 拉取master的远程代码</span></span></code></pre></div><h2 id="_8-创建merge-request" tabindex="-1">8. 创建merge request <a class="header-anchor" href="#_8-创建merge-request" aria-label="Permalink to &quot;8. 创建merge request&quot;">​</a></h2><h2 id="_9-解决冲突" tabindex="-1">9. 解决冲突 <a class="header-anchor" href="#_9-解决冲突" aria-label="Permalink to &quot;9. 解决冲突&quot;">​</a></h2><p>（1）假设当前处于 <code>feature-xxx</code> 的分支, 你即将合并<code>test</code>分支 （2）创建merge request后发现有merge conflict （3）首先你需要 <code>创建并切换 或 直接切换</code>到 <code>test-conflict</code>这个解决冲突的分支</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-conflict</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果没有这个分支，就创建并切换过去</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-conflict</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-conflict</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果没有这个分支，就创建并切换过去</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-conflict</span></span></code></pre></div><p>（4）当前处于<code>test-conflict</code>分支, 你需要如下操作</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 拉取当前最新远程代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 拉取 test 的代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-xxx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 拉取你自己的代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;merge: reolve conflict&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 创建commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 拉取当前最新远程代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 拉取 test 的代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-xxx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 拉取你自己的代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;merge: reolve conflict&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 创建commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span></span></code></pre></div><p>（5）创建Merge request, 此时是从<code>test-conflict</code>合并到<code>test</code></p><p>相信到这里你已经明白如何处理了，其他环境同理。 <strong>简单理解下来，其实解决分支冲突，核心在于需要你为目标分支再切换出来一个分支，避免污染分支。</strong></p><h2 id="_10-删除分支" tabindex="-1">10. 删除分支 <a class="header-anchor" href="#_10-删除分支" aria-label="Permalink to &quot;10. 删除分支&quot;">​</a></h2><p>在开发完成后，可以考虑删除当前的分支</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xxx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 先切换到别的分支，再删除</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--delete</span><span style="color:#E1E4E8;"> [branch_name] </span><span style="color:#6A737D;"># 删除远程</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> [branch_name] </span><span style="color:#6A737D;"># 删除本地分支</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xxx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 先切换到别的分支，再删除</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--delete</span><span style="color:#24292E;"> [branch_name] </span><span style="color:#6A737D;"># 删除远程</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> [branch_name] </span><span style="color:#6A737D;"># 删除本地分支</span></span></code></pre></div><h1 id="二、危险操作" tabindex="-1">二、危险操作 <a class="header-anchor" href="#二、危险操作" aria-label="Permalink to &quot;二、危险操作&quot;">​</a></h1><h2 id="_1-拉取work、test、ut环境分支代码-❌" tabindex="-1">1. 拉取work、test、ut环境分支代码 ❌ <a class="header-anchor" href="#_1-拉取work、test、ut环境分支代码-❌" aria-label="Permalink to &quot;1. 拉取work、test、ut环境分支代码 ❌&quot;">​</a></h2><p>禁止拉取work、test、ut环境分支，如果合并到线上，可能会导致线上代码被污染出现Bug!</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 错误操作</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 错误操作</span></span></code></pre></div><h2 id="_2-回退远程代码-⚠️" tabindex="-1">2. 回退远程代码 ⚠️ <a class="header-anchor" href="#_2-回退远程代码-⚠️" aria-label="Permalink to &quot;2. 回退远程代码 ⚠️&quot;">​</a></h2><p>通常我们在网上看到的回退操作，有不少是通过<code>git reset</code>进行完成的，但是这个操作是比较危险的，经常会出现你明明修改了代码，但是你merge上去之后，什么也没更改。 <strong>所以，在回退代码方面，推荐大家使用</strong><code>git revert</code><strong>操作。</strong></p><p>回退代码的原理，其实就是把你之前的代码修改，再进行反向修改。例如你进行了如下操作：</p><ol><li>基于master切了一个分支<code>feature-test</code></li><li>删除一行代码，然后提交产生了<code>Commit(C)</code></li><li>执行git revert xx之后，代码会自动反向修改，恢复那一行代码，产生Merge Commit(D)</li></ol><p>此时的git树如下: <img src="https://cdn.nlark.com/yuque/0/2022/jpeg/22194783/1669716543616-856dd450-ac7b-441f-b70f-ce1a4be01160.jpeg" alt=""></p><p>下面来介绍回退代码的几种操作</p><h3 id="_1-回退某一个commit" tabindex="-1">（1）回退某一个commit <a class="header-anchor" href="#_1-回退某一个commit" aria-label="Permalink to &quot;（1）回退某一个commit&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">产生新commit（推荐）</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 通过日志，找到你想回退代码的commitid</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">425</span><span style="color:#9ECBFF;">e6dd10b86783</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 回退某个commit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#032F62;">产生新commit（推荐）</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 通过日志，找到你想回退代码的commitid</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">425</span><span style="color:#032F62;">e6dd10b86783</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 回退某个commit</span></span></code></pre></div><p><img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945128530041694512852094.png" alt="16945128530041694512852094.png"> 在你执行<code>git revert</code>后，会产生一个新的commitId, 并且会出现一个message编辑器, 你可以修改revert产生的commit message</p><h3 id="_2-回退多个commit" tabindex="-1">（2）回退多个commit <a class="header-anchor" href="#_2-回退多个commit" aria-label="Permalink to &quot;（2）回退多个commit&quot;">​</a></h3><p>有如下两个commitid， <code>A</code>和<code>B</code><img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945129020031694512901092.png" alt="16945129020031694512901092.png"></p><p>可通过如下命令回退多个commit</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">OLDER_COMMIT^..NEWER_COMMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 回退几个commit就产生几个新commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">OLDER_COMMIT^..NEWER_COMMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 回退的commit, 合并成一个</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#032F62;">OLDER_COMMIT^..NEWER_COMMIT</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 回退几个commit就产生几个新commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#032F62;">OLDER_COMMIT^..NEWER_COMMIT</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 回退的commit, 合并成一个</span></span></code></pre></div><p>在上面的例子中，我们执行如下命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">82</span><span style="color:#9ECBFF;">e9029759976b9bbba6d47adf68f6a2eeafea88^..64b4646ec1ff9e3d608e583563fefd834a23b062</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">82</span><span style="color:#032F62;">e9029759976b9bbba6d47adf68f6a2eeafea88^..64b4646ec1ff9e3d608e583563fefd834a23b062</span></span></code></pre></div><p>然后你还需要重新commit, 这样你就回退了</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;revert: A, B&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;revert: A, B&quot;</span></span></code></pre></div><h3 id="_3-回退merge" tabindex="-1">（3）回退merge <a class="header-anchor" href="#_3-回退merge" aria-label="Permalink to &quot;（3）回退merge&quot;">​</a></h3><p>如果你按照上面学习到的，<code>git revert xxx</code>回退一个merge, 那么一定会出现如下问题：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">83</span><span style="color:#9ECBFF;">e2776</span></span>
<span class="line"><span style="color:#B392F0;">error:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">83</span><span style="color:#9ECBFF;">e2776adb7a47617fbd181228906e52ada396ac</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">but</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">no</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">option</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">was</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">given.</span></span>
<span class="line"><span style="color:#B392F0;">fatal:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">83</span><span style="color:#032F62;">e2776</span></span>
<span class="line"><span style="color:#6F42C1;">error:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">83</span><span style="color:#032F62;">e2776adb7a47617fbd181228906e52ada396ac</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">but</span><span style="color:#24292E;"> </span><span style="color:#032F62;">no</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;"> </span><span style="color:#032F62;">was</span><span style="color:#24292E;"> </span><span style="color:#032F62;">given.</span></span>
<span class="line"><span style="color:#6F42C1;">fatal:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed</span></span></code></pre></div><p>为什么呢？因为此时git不知道要做什么。merge commit是两个分支的汇合点。本质上这两个分支地位是完全相等的。例如下面的图中，master在合并后，从<code>Commit(B)</code>移动到了<code>Commit(Merge)</code>, 此时的指针是与<code>feature-test</code>重叠的。 <img src="https://cdn.nlark.com/yuque/0/2022/jpeg/22194783/1669623030395-1eef6692-a60f-48cb-b08f-85346e7b5127.jpeg" alt=""></p><p>然后继续执行如下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">revert</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">83</span><span style="color:#9ECBFF;">e2776</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">revert</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">83</span><span style="color:#032F62;">e2776</span></span></code></pre></div><p>这里<code>-m 1</code>其实就是保留目标分支，回退<code>feature分支</code>上的代码。所以，一般来讲，我们都用<code>-m 1</code>即可。</p><h2 id="_3-回退本地代码-⚠️" tabindex="-1">3. 回退本地代码 ⚠️ <a class="header-anchor" href="#_3-回退本地代码-⚠️" aria-label="Permalink to &quot;3. 回退本地代码 ⚠️&quot;">​</a></h2><h3 id="_1-git-reset" tabindex="-1">（1）git reset <a class="header-anchor" href="#_1-git-reset" aria-label="Permalink to &quot;（1）git reset&quot;">​</a></h3><p>此处有三个<code>commit</code>, 如果我想回退掉<code>前面两个commit</code><img src="" alt="16945129970051694512996416.png"></p><p>获取最下面的<code>commitid</code>, 然后执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--soft</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">ffc7c6856e207d45ee71d4dd1fd53f215c9d008</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 先回退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--soft</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">ffc7c6856e207d45ee71d4dd1fd53f215c9d008</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 先回退</span></span></code></pre></div><p>回退完成后，你会发现你的工作区多出了被回退的代码，此时如果你想push上去，是不行的，需要强制push。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--force</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--force</span></span></code></pre></div><p>如果你后悔了刚才的回退操作, 就需要重新commit工作区的代码。</p><h3 id="_2-git-rebase-方式" tabindex="-1">（2）git rebase 方式 <a class="header-anchor" href="#_2-git-rebase-方式" aria-label="Permalink to &quot;（2）git rebase 方式&quot;">​</a></h3><p>请参考后面 <code>git rebase</code>的相关用法</p><h1 id="三、git-rebase-vs-git-merge" tabindex="-1">三、git rebase VS git merge <a class="header-anchor" href="#三、git-rebase-vs-git-merge" aria-label="Permalink to &quot;三、git rebase VS git merge&quot;">​</a></h1><p>不知怎么，<code>git rebase</code> 一直被认为初学者不应该学习它，但它实际上可以让开发团队在使用时更加轻松。我们将 <code>git rebase</code> 与 <code>git merge</code> 命令进行比较。在 Git 工作流中，说明所有可以使用 rebase 的场景</p><h2 id="_1-git-merge" tabindex="-1">1. git merge <a class="header-anchor" href="#_1-git-merge" aria-label="Permalink to &quot;1. git merge&quot;">​</a></h2><p><strong>注意：一般我们合并代码，直接使用Gitlab可视界面即可。</strong> 最简单的方式是通过以下命令将 master 分支合并到 feature 分支中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span></code></pre></div><p>或者，你可以将其浓缩为一行命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span></code></pre></div><p>这会在 feature 分支中创建一个新的 <strong>merge commit</strong>，它将两个分支的历史联系在一起，请看如下所示的分支结构：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/22194783/1669621043110-aa701cb8-3db7-45c0-8163-e3ded4706377.jpeg" alt=""></p><p>使用 merge 是很好的方式，因为它是一种 <strong>非破坏性的</strong> 操作。现有分支不会以任何方式被更改。这避免了 rebase 操作所产生的潜在缺陷（下面讨论）。 另一方面，这也意味着 feature 分支每次需要合并上游更改时，它都将产生一个额外的合并提交。如果master 提交非常活跃，这可能会严重污染你的 feature 分支历史记录。尽管可以使用高级选项 git log 缓解此问题，<strong>但它可能使其他开发人员难以理解项目的历史记录（此处仅做讨论，组内规范仍然使用merge流程）</strong></p><h2 id="_2-git-rebase" tabindex="-1">2. git rebase <a class="header-anchor" href="#_2-git-rebase" aria-label="Permalink to &quot;2. git rebase&quot;">​</a></h2><p>可以理解为“重新设置基线”（重新设置分支比较的起点commit），并将“新基线”以后的commit拷贝到指定的分支上。所有当前分支上在“新基线”以后的commit会被copy一份存储到一个临时区域，然后按顺序应用到指定分支上</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/22194783/1669621383536-13a2236e-cfdd-4826-b360-cbc956667c95.jpeg" alt=""></p><p>大家可能注意到了，<code>master</code>是落后于<code>feature</code>的，需要我们在<code>master</code> 上将<code>feature</code>分支合并过来。当然，你也可以使用Gitlab可视界面合并。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature</span></span></code></pre></div><h1 id="四、强大的git-rebase" tabindex="-1">四、强大的git rebase <a class="header-anchor" href="#四、强大的git-rebase" aria-label="Permalink to &quot;四、强大的git rebase&quot;">​</a></h1><h2 id="_1-git-rebase-注意事项-⚠️" tabindex="-1">1. git rebase 注意事项 ⚠️ <a class="header-anchor" href="#_1-git-rebase-注意事项-⚠️" aria-label="Permalink to &quot;1. git rebase 注意事项 ⚠️&quot;">​</a></h2><p>使用git rebase的注意事项，请一定遵守。</p><ol><li><strong>公共分支不rebase</strong></li><li><strong>已经push的部分不rebase</strong></li></ol><p>线上提交执行变基会导致什么结果： （1）你在本地对部分线上提交进行了变基，这部分提交我们称之为a，a在变基之后commit id 发生了变化 （2）你在本地改变的这些提交有可能存在于你的同事的开发分支中，我们称之为b，他们与a的内容相同，commit id 不同 （3）如果你把变基结果强行push 到远程仓库后，你的同事在本地执行git pull 的时候会导致a 和b 发生融合，且都出现在了历史提交中，导致你的变基行为无效</p><h2 id="_2-修改commit顺序" tabindex="-1">2. 修改commit顺序 <a class="header-anchor" href="#_2-修改commit顺序" aria-label="Permalink to &quot;2. 修改commit顺序&quot;">​</a></h2><p><img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945130650061694513064428.png" alt="16945130650061694513064428.png"></p><p>如果你想处理从 commit A 到最新的commit, 你需要获取这个范围外的第一条，也就是图上的最后一条commit</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">086</span><span style="color:#9ECBFF;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">086</span><span style="color:#032F62;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre></div><p>第一条是最老的commit记录。最后一条是最新的。 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669623730871-76064ab3-c4c3-4a78-8d3a-ec35670bddf2.png#averageHue=%232d3037&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=313&amp;id=u0ca46ff6&amp;originHeight=626&amp;originWidth=1358&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=195006&amp;status=done&amp;style=none&amp;taskId=u40096985-d534-47db-a5a5-43c53b63533&amp;title=&amp;width=679" alt="image.png"> 然后交换位置后， <code>:wq</code>保存。 <img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945131010071694513100146.png" alt="16945131010071694513100146.png"></p><p>可以看到，两条commit顺序变了。 <img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945131340081694513133790.png" alt="16945131340081694513133790.png"></p><h2 id="_3-回退commit" tabindex="-1">3. 回退commit <a class="header-anchor" href="#_3-回退commit" aria-label="Permalink to &quot;3. 回退commit&quot;">​</a></h2><p>注意：日常不推荐使用，会导致落后于master分支，你的更改将不会产生新的merge。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">086</span><span style="color:#9ECBFF;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">086</span><span style="color:#032F62;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669623817769-9f55b259-32bf-4fce-b1b1-149e6cf2d4e6.png#averageHue=%232c2f36&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=51&amp;id=u33317f87&amp;originHeight=102&amp;originWidth=578&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=16391&amp;status=done&amp;style=none&amp;taskId=ub8e6c76f-0bc2-42a9-bd64-0adbe1252c7&amp;title=&amp;width=289" alt="image.png"> 与上面的操作一样，你需要把<code>pick</code>改成<code>d</code>或者<code>drop</code>, 你也可以直接删除这一行，保存之后就会回退commit, 但是这条commit会被删除，请谨慎操作。</p><h2 id="_4-修改commit" tabindex="-1">4. 修改commit <a class="header-anchor" href="#_4-修改commit" aria-label="Permalink to &quot;4. 修改commit&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">086</span><span style="color:#9ECBFF;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">086</span><span style="color:#032F62;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624130756-dff6aba1-960c-4441-8041-82bd43d55a82.png#averageHue=%232d2f36&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=55&amp;id=u04996407&amp;originHeight=110&amp;originWidth=454&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=15782&amp;status=done&amp;style=none&amp;taskId=uc0ade963-9718-491b-934c-bfe574c8fa8&amp;title=&amp;width=227" alt="image.png"> 将<code>pick</code>改成<code>e</code>或<code>edit</code>。然后<code>:wq</code>保存和退出编辑。 控制台会打印如下内容： <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624189564-b2313c69-77bc-44df-b287-5a8774e6765c.png#averageHue=%232c2f36&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=169&amp;id=ube06709b&amp;originHeight=338&amp;originWidth=992&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=68104&amp;status=done&amp;style=none&amp;taskId=u5aa3f293-0671-4474-8317-d751bb79e68&amp;title=&amp;width=496" alt="image.png"> 此时你会进入编辑commit的状态，这时候你修改代码。 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624233336-8235afcf-7ec9-4da5-813b-78172e362490.png#averageHue=%232b2f36&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=102&amp;id=u95992ba0&amp;originHeight=204&amp;originWidth=1476&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=40685&amp;status=done&amp;style=none&amp;taskId=u6622a1c1-ba0e-44de-bc8c-a3085bcef91&amp;title=&amp;width=738" alt="image.png"> 再执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--continue</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--continue</span></span></code></pre></div><p>然后会进入编辑commit message的状态, 在这一步你可以修改commit message <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624323245-3403076c-89c6-47ee-a7f3-f1dd305bf5c4.png#averageHue=%232c2f36&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=213&amp;id=u28bb8fdd&amp;originHeight=566&amp;originWidth=1212&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=137422&amp;status=done&amp;style=none&amp;taskId=uabfe7acf-15bb-4b81-913c-17d65f8e76c&amp;title=&amp;width=456" alt="image.png"> 保存后，你的commit就被修改了。 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624356177-8f8b3668-0d24-4459-aaba-c98a9ade409b.png#averageHue=%232e3138&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=83&amp;id=u37d820a6&amp;originHeight=166&amp;originWidth=1098&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=50062&amp;status=done&amp;style=none&amp;taskId=ufa0538a7-4a4e-4a3e-b606-9d0802637b1&amp;title=&amp;width=549" alt="image.png"></p><h2 id="_5-合并commit" tabindex="-1">5. 合并commit <a class="header-anchor" href="#_5-合并commit" aria-label="Permalink to &quot;5. 合并commit&quot;">​</a></h2><p>如果你想让自己的commit好看一点，你可以把你这次需求所有的commit进行合并。有如下三个commit <img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945131890091694513188285.png" alt="16945131890091694513188285.png"></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">086</span><span style="color:#9ECBFF;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">086</span><span style="color:#032F62;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624590786-3455ae80-6d5a-4022-b5e4-2db6a40f0d87.png#averageHue=%232d3037&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=360&amp;id=u331ecff0&amp;originHeight=720&amp;originWidth=1386&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=226865&amp;status=done&amp;style=none&amp;taskId=u0474975a-480a-48b3-8bff-2c5277c6d5c&amp;title=&amp;width=693" alt="image.png"> 修改一下： <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624620094-e56fbce1-3891-4d78-a0f8-c0d7d38c048c.png#averageHue=%232d3037&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=64&amp;id=u1e610267&amp;originHeight=128&amp;originWidth=522&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22204&amp;status=done&amp;style=none&amp;taskId=u159481af-6d2d-4230-9baf-aa6c2a08f98&amp;title=&amp;width=261" alt="image.png"> 将<code>pick</code>改成<code>s</code>或<code>squash</code>, 这个意思是把commit合并到前一个commit。在上面的例子中，都被合并到了commit A git会将三个commit 的message也进行合并, 你也可以编辑commit A的 message <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669624722484-cb4b09f1-e6a7-4a88-8030-7df309b30a8b.png#averageHue=%232a2d34&amp;clientId=u2337ac98-fe9a-4&amp;from=paste&amp;height=229&amp;id=ue7ade54a&amp;originHeight=458&amp;originWidth=1190&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=61244&amp;status=done&amp;style=none&amp;taskId=uac2c4d9c-985f-4e72-9595-88f76e9afdd&amp;title=&amp;width=595" alt="image.png"> 最后只剩下一个 commit <img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945132900121694513289777.png" alt="16945132900121694513289777.png"></p><p>如果你闲麻烦，想直接合并，省略掉编辑message的过程，可以这样：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pick</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xxx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feat:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">A</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 改成</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xxx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feat:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">A</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pick</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xxx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feat:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">A</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 改成</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xxx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feat:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">A</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><h1 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-label="Permalink to &quot;&quot;">​</a></h1><h1 id="五、git-cherry-pick" tabindex="-1">五、git cherry-pick <a class="header-anchor" href="#五、git-cherry-pick" aria-label="Permalink to &quot;五、git cherry-pick&quot;">​</a></h1><p><code>git cherry-pick</code>命令的作用，就是将指定的提交（commit）应用于其他分支。 比如，你的<code>feature-A</code>分支上产生了一个commit (086cbb47628be91b3cc2407056d231fe8c75a120) 另一位同学<code>feature-B</code>也想用你的这份代码，但是其他的代码并不想要，可以这么操作</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-B</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cherry-pick</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">086</span><span style="color:#9ECBFF;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-B</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cherry-pick</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">086</span><span style="color:#032F62;">cbb47628be91b3cc2407056d231fe8c75a120</span></span></code></pre></div><p>也支持同时多个cmmit</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cherry-pick</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">B</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">C</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cherry-pick</span><span style="color:#24292E;"> </span><span style="color:#032F62;">A</span><span style="color:#24292E;"> </span><span style="color:#032F62;">B</span><span style="color:#24292E;"> </span><span style="color:#032F62;">C</span></span></code></pre></div><p>支持某个范围</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cherry-pick</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">A^..B</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># A是最老的commit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cherry-pick</span><span style="color:#24292E;"> </span><span style="color:#032F62;">A^..B</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># A是最老的commit</span></span></code></pre></div><h1 id="六、git-stash" tabindex="-1">六、git stash <a class="header-anchor" href="#六、git-stash" aria-label="Permalink to &quot;六、git stash&quot;">​</a></h1><p>你可能会遇到这样的场景：在<code>feature-A</code>分支上开发，突然来了另一个需求，但是我不想 commit提交我的代码，想直接进入<code>feature-B</code>的开发。正常来讲这肯定是不行的，但是我们可以用<code>git stash</code>临时将代码存放起来。</p><p><code>git stash</code>的用法相当简单：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 先临时存起来</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-B</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 切换到另外的分支</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 先临时存起来</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-B</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 切换到另外的分支</span></span></code></pre></div><p>开发完成后，再恢复过来:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-A</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 切换回来</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">list</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 可以查看stash 记录</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 恢复代码</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-A</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 切换回来</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 可以查看stash 记录</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 恢复代码</span></span></code></pre></div><p>当然，你也可以用可视界面操作： <img src="https://fastly.jsdelivr.net/gh/fyhhub/imgs@main/16945133630151694513362864.png" alt="16945133630151694513362864.png"></p><h1 id="七、vscode插件推荐" tabindex="-1">七、VSCode插件推荐 <a class="header-anchor" href="#七、vscode插件推荐" aria-label="Permalink to &quot;七、VSCode插件推荐&quot;">​</a></h1><h2 id="_1-gitlen" tabindex="-1">1. Gitlen <a class="header-anchor" href="#_1-gitlen" aria-label="Permalink to &quot;1. Gitlen&quot;">​</a></h2><p>非常推荐安装 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669688940052-2fedf562-f963-4798-a73e-fe00122dc2d9.png#averageHue=%23292b31&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=55&amp;id=ub9b28548&amp;originHeight=71&amp;originWidth=357&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=15852&amp;status=done&amp;style=none&amp;taskId=u87efdac4-9dc3-41a3-be99-1821dadaafa&amp;title=&amp;width=277.5" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669689000762-0bf6e471-5867-47ea-85ef-7e75bd0dfe2e.png#averageHue=%2330343d&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=105&amp;id=ucfcb7d7e&amp;originHeight=210&amp;originWidth=366&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=14027&amp;status=done&amp;style=none&amp;taskId=u8a5fd5ef-f773-4c79-b135-b00e61b8203&amp;title=&amp;width=183" alt="image.png"> 可以看到每一行，每一个文件的commit记录。鼠标放在代码上也可以看到最近谁更改了这一行 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669689045611-95708f8a-cebf-4775-a51e-2bfeeca9f189.png#averageHue=%23262930&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=37&amp;id=ue0e74643&amp;originHeight=73&amp;originWidth=435&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7956&amp;status=done&amp;style=none&amp;taskId=u473e3d10-2b91-4eb6-b6f5-9024843b84f&amp;title=&amp;width=217.5" alt="image.png"></p><h2 id="_2-gitlab-workflow" tabindex="-1">2. Gitlab Workflow <a class="header-anchor" href="#_2-gitlab-workflow" aria-label="Permalink to &quot;2. Gitlab Workflow&quot;">​</a></h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669689139715-bdfc05d6-1c6c-49fe-8c65-fb4923853d2c.png#averageHue=%23292b31&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=60&amp;id=u54da679c&amp;originHeight=75&amp;originWidth=367&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11581&amp;status=done&amp;style=none&amp;taskId=ue716a814-9e5c-4995-9636-34a4ac3ea9b&amp;title=&amp;width=293.5" alt="image.png"> 可以一键创建MR <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669689154380-d19eabc9-5c7f-4207-bf23-9d5188fdcefa.png#averageHue=%23272a30&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=67&amp;id=uf6595aaa&amp;originHeight=54&amp;originWidth=153&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3610&amp;status=done&amp;style=none&amp;taskId=ud901eb5f-3727-4e3b-83bc-9dd4528aee7&amp;title=&amp;width=190.5" alt="image.png"> 并且支持在VSCode上看MR记录 <img src="https://cdn.nlark.com/yuque/0/2022/png/22194783/1669689181142-266ba00f-664c-4f59-adc7-c8cfb2a8d619.png#averageHue=%2325272d&amp;clientId=uaf499048-96f3-4&amp;from=paste&amp;height=128&amp;id=ud208700f&amp;originHeight=256&amp;originWidth=367&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22706&amp;status=done&amp;style=none&amp;taskId=ufb1cebed-9533-4167-8121-de40aa7d95c&amp;title=&amp;width=183.5" alt="image.png"></p>`,147),e=[o];function t(c,r,i,y,d,E){return a(),p("div",null,e)}const m=s(l,[["render",t]]);export{h as __pageData,m as default};
