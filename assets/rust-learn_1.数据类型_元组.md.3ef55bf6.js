import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.3d945e71.js";const _=JSON.parse('{"title":"1.5 元组","description":"","frontmatter":{"order":5},"headers":[],"relativePath":"rust-learn/1.数据类型/元组.md","filePath":"rust-learn/1.数据类型/元组.md","lastUpdated":1694266382000}'),p={name:"rust-learn/1.数据类型/元组.md"},o=l(`<h1 id="_1-5-元组" tabindex="-1">1.5 元组 <a class="header-anchor" href="#_1-5-元组" aria-label="Permalink to &quot;1.5 元组&quot;">​</a></h1><h2 id="创建元组" tabindex="-1">创建元组 <a class="header-anchor" href="#创建元组" aria-label="Permalink to &quot;创建元组&quot;">​</a></h2><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tup</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">i32</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">f64</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">u8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6.4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 解构</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (x, y, z) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tup;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 访问</span></span>
<span class="line"><span style="color:#E1E4E8;">  tup</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">0</span><span style="color:#6A737D;"> // 500</span></span>
<span class="line"><span style="color:#E1E4E8;">  tup</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">1</span><span style="color:#6A737D;"> // 6.4</span></span>
<span class="line"><span style="color:#E1E4E8;">  tup</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">2</span><span style="color:#6A737D;"> // 1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tup</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">i32</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">f64</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">u8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6.4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 解构</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (x, y, z) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tup;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 访问</span></span>
<span class="line"><span style="color:#24292E;">  tup</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">0</span><span style="color:#6A737D;"> // 500</span></span>
<span class="line"><span style="color:#24292E;">  tup</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">1</span><span style="color:#6A737D;"> // 6.4</span></span>
<span class="line"><span style="color:#24292E;">  tup</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">2</span><span style="color:#6A737D;"> // 1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,3),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const F=s(p,[["render",t]]);export{_ as __pageData,F as default};
