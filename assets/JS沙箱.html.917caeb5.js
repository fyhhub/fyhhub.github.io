import{_ as p}from"./plugin-vueexport-helper.2444895f.js";import{o as t,c as o,e as s,d as a,r as e}from"./app.6e599b3b.js";const c="/QQ20210923-084922@2x.png",i={},l=a('<h1 id="js-\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#js-\u6C99\u7BB1" aria-hidden="true">#</a> JS \u6C99\u7BB1</h1><p>\u5728<code>qiankun</code>\u7684\u5B9E\u73B0\u4E2D\uFF0C\u5305\u542B\u4E86\u4E24\u79CD\u6C99\u7BB1\uFF0C\u5206\u522B\u4E3A<code>\u57FA\u4E8EProxy\u5B9E\u73B0\u7684\u6C99\u7BB1</code>\u548C<code>\u5FEB\u7167\u6C99\u7BB1</code>\uFF0C\u5F53\u6D4F\u89C8\u5668\u4E0D\u652F\u6301<code>Proxy</code>\u4F1A\u964D\u7EA7\u4E3A<code>\u5FEB\u7167\u6C99\u7BB1</code></p>',2),u=a(`<h2 id="proxy-\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#proxy-\u6C99\u7BB1" aria-hidden="true">#</a> Proxy \u6C99\u7BB1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ProxySandbox</span> <span class="token keyword">implements</span> <span class="token class-name">SandBox</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** window \u503C\u53D8\u66F4\u8BB0\u5F55 */</span>
  <span class="token keyword">private</span> updatedValueSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span>PropertyKey<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> SandBoxType<span class="token punctuation">;</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> WindowProxy<span class="token punctuation">;</span>
  sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token literal-property property">latestSetProp</span><span class="token operator">:</span> PropertyKey <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> updatedValueSet <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> rawWindow <span class="token operator">=</span> window<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fakeWindow<span class="token punctuation">,</span> propertiesWithGetter <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createFakeWindow</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> descriptorTargetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> SymbolTarget<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">hasOwnProperty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> PropertyKey</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fakeWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">||</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token comment">// trap in operator</span>
      <span class="token comment">// see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12</span>
      <span class="token function">has</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> symbol<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> symbol<span class="token punctuation">)</span><span class="token operator">:</span> PropertyDescriptor <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token comment">// trap to support iterator with sandbox</span>
      <span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">)</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">attributes</span><span class="token operator">:</span> PropertyDescriptor<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> symbol<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
    activeSandboxCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u5C31\u662F<code>Proxy\u6C99\u7BB1\u7684\u5927\u81F4\u5B9E\u73B0</code>\uFF0C\u4EE3\u7801\u91CF\u4E0D\u591A\uFF0C\u4F46\u662F\u4E5F\u6709\u4E00\u4E9B\u5173\u952E\u4FE1\u606F\uFF1A</p><ul><li><code>constructor</code>\u4E2D\u4F1A\u521B\u5EFA window \u5BF9\u8C61\u7684 Proxy</li><li><code>active</code>\u4F1A\u6FC0\u6D3B\u6C99\u7BB1, \u4E00\u822C\u5728<code>mount</code>\u65F6\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5</li><li><code>inactive</code>\u4F1A\u4F7F\u6C99\u7BB1\u5931\u6D3B\uFF0C\u4E00\u822C\u5728<code>unmount</code>\u9636\u6BB5\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5</li><li><code>get</code>\u548C<code>set</code>\uFF0C\u5219\u4F1A\u5BF9\u503C\u7684\u8BBE\u7F6E\u548C\u83B7\u53D6\u505A\u4E00\u4E9B\u5904\u7406\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u5F71\u54CD\u5230\u539F\u59CB\u7684 window</li></ul><h3 id="_1-\u521D\u59CB\u5316\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#_1-\u521D\u59CB\u5316\u9636\u6BB5" aria-hidden="true">#</a> 1.\u521D\u59CB\u5316\u9636\u6BB5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> updatedValueSet <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> rawWindow <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fakeWindow<span class="token punctuation">,</span> propertiesWithGetter <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createFakeWindow</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> descriptorTargetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> SymbolTarget<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">hasOwnProperty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> PropertyKey</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fakeWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">||</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
  activeSandboxCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u521D\u59CB\u5316\u7684\u9636\u6BB5\u6211\u4EEC\u5E76\u4E0D\u9700\u8981\u5173\u5FC3<code>proxy</code>\u662F\u600E\u4E48\u5B9E\u73B0\u7684\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u77E5\u9053\u5B83\u505A\u4E86\u8FD9\u4E9B\u4E8B</p><ol><li><p>\u521D\u59CB\u5316\u4E00\u4E9B<code>name</code>\uFF0C<code>type</code>\u5C5E\u6027\uFF0C\u8FD9\u4E9B\u5E76\u4E0D\u91CD\u8981\uFF0C\u662F qiankun \u5185\u90E8\u4F7F\u7528</p></li><li><p>\u521B\u5EFA\u4F2A\u9020\u7684 window \u5BF9\u8C61\uFF0CcreateFakeWindow \u505A\u7684\u4E8B\u60C5\u6BD4\u8F83\u7B80\u5355\uFF0C\u53EA\u662F\u8FD4\u56DE\u4E86<code>fakeWindow</code>\u548C<code>propertiesWithGetter</code></p><ul><li><code>fakeWindow</code> \u4F2A\u9020\u7684 window \u5BF9\u8C61</li><li><code>propertiesWithGetter</code> \u5224\u65AD\u5C5E\u6027\u662F\u5426\u6709 getter\uFF0C\u5982\u679C\u5B58\u5728\u5C06\u4E0D\u4F1A\u4F7F\u7528<code>fakeWindow</code>\u4E0A\u7684\u5C5E\u6027\u503C</li></ul><p>\u6CE8\u610F\uFF1A\u5982\u679C\u539F\u59CB\u5BF9\u8C61\u7684\u5C5E\u6027\u5B58\u5728\u5C5E\u6027\u63CF\u8FF0\u7B26\uFF0C\u5219\u4F1A\u8C03\u7528 Object.defineProperty \u590D\u7528\u5C5E\u6027\u63CF\u8FF0\u7B26</p></li><li><p>\u57FA\u4E8E<code>fakeWindow</code>\u521B\u5EFA Proxy \u5BF9\u8C61</p></li></ol><h3 id="_2-\u6FC0\u6D3B\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#_2-\u6FC0\u6D3B\u6C99\u7BB1" aria-hidden="true">#</a> 2.\u6FC0\u6D3B\u6C99\u7BB1</h3><p>\u8BBE\u7F6E\u5F53\u524D\u6C99\u7BB1\u5904\u4E8E\u8FD0\u884C\u4E2D\uFF0C\u5E76\u7EDF\u8BA1\u6FC0\u6D3B\u6C99\u7BB1\u6570\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> activeSandboxCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u89E6\u53D1-setter" tabindex="-1"><a class="header-anchor" href="#_3-\u89E6\u53D1-setter" aria-hidden="true">#</a> 3.\u89E6\u53D1 Setter</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6C99\u7BB1\u5904\u4E8E\u8FD0\u884C\u4E2D \u624D\u80FD\u8D4B\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679CfakeWindow\u4E0A\u4E0D\u5B58\u5728\u8FD9\u4E2A\u5C5E\u6027  \u539Fwindow\u5B58\u5728  \u4EE3\u8868\u8BE5\u5C5E\u6027\u88ABdelete\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u83B7\u53D6\u8BE5\u5C5E\u6027\u7684\u63CF\u8FF0\u7B26</span>
      <span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> writable<span class="token punctuation">,</span> configurable<span class="token punctuation">,</span> enumerable <span class="token punctuation">}</span> <span class="token operator">=</span> descriptor<span class="token operator">!</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u8BE5\u5C5E\u6027\u662F\u53EF\u5199\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>writable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u7684\u63CF\u8FF0\u7B26</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          configurable<span class="token punctuation">,</span>
          enumerable<span class="token punctuation">,</span>
          writable<span class="token punctuation">,</span>
          value<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5176\u4ED6\u60C5\u51B5\u90FD\u9700\u8981\u76F4\u63A5\u8D4B\u503C</span>
      <span class="token comment">// @ts-ignore</span>
      target<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5F53\u5C5E\u6027\u5728variableWhiteList\u4E2D\u65F6 \u53EF\u4EE5\u901A\u8FC7 fakeWindow \u76F4\u63A5\u4FEE\u6539 \u539Fwindow</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>variableWhiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// @ts-ignore</span>
      rawWindow<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    updatedValueSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>latestSetProp <span class="token operator">=</span> p<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Set window.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> while sandbox destroyed or inactive in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728 strict-mode \u4E0B\uFF0CProxy \u7684 handler.set \u8FD4\u56DE false \u4F1A\u629B\u51FA TypeError\uFF0C\u5728\u6C99\u7BB1\u5378\u8F7D\u7684\u60C5\u51B5\u4E0B\u5E94\u8BE5\u5FFD\u7565\u9519\u8BEF</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setter</code>\u505A\u7684\u4E8B\u60C5\u6BD4\u8F83\u7B80\u5355\uFF0C\u9996\u5148\u5904\u4E8E\u8FD0\u884C\u4E2D\u7684\u6C99\u7BB1\uFF0C\u5B83\u7684<code>fakeWindow</code>\u624D\u80FD\u88AB\u4FEE\u6539\uFF0C\u5176\u6B21\u6709\u5982\u4E0B\u7684\u6B65\u9AA4</p><ol><li>\u5224\u65AD\u5F53\u524D\u8981\u8BBE\u7F6E\u7684\u5C5E\u6027\uFF0C\u5982\u679C<code>fakeWindow</code>\u4E0D\u5B58\u5728 \u800C \u539F\u59CB\u7684<code>window</code>\u5B58\u5728\u8BE5\u5C5E\u6027\uFF0C\u4EE3\u8868\u5DF2\u7ECF\u88AB\u5220\u9664\uFF0C\u9700\u8981\u91CD\u65B0\u8BBE\u7F6E\u5C5E\u6027\u63CF\u8FF0\u7B26</li><li>\u4E0D\u6EE1\u8DB3\u4EE5\u4E0A\u6761\u4EF6\uFF0C\u76F4\u63A5\u4FEE\u6539<code>fakeWindow</code>\u5373\u53EF</li><li>\u5224\u65AD\u5F53\u524D\u5C5E\u6027\u662F\u5426\u5728\u767D\u540D\u5355\u4E2D\uFF0C\u5982\u679C\u5728\u5219\u8BE5\u5C5E\u6027\u7684\u4FEE\u6539\uFF0C\u5C06\u4F1A\u76F4\u63A5\u5F71\u54CD\u5230<code>rawWindow</code></li></ol><h3 id="_3-\u89E6\u53D1-getter" tabindex="-1"><a class="header-anchor" href="#_3-\u89E6\u53D1-getter" aria-hidden="true">#</a> 3.\u89E6\u53D1 Getter</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> Symbol<span class="token punctuation">.</span>unscopables<span class="token punctuation">)</span> <span class="token keyword">return</span> unscopables<span class="token punctuation">;</span>

  <span class="token comment">// avoid who using window.window or window.self to escape the sandbox environment to touch the really window</span>
  <span class="token comment">// see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13</span>
  <span class="token comment">// \u5F53\u4F7F\u7528window.window or window.self \u7684\u65F6\u5019\u4E0D\u5E94\u8BE5\u8FD4\u56DE\u539Fwindow \u800C\u5E94\u8BE5\u662F fakeWindow</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;window&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;self&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// hijack global accessing with globalThis keyword</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;globalThis&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    p <span class="token operator">===</span> <span class="token string">&#39;top&#39;</span> <span class="token operator">||</span>
    p <span class="token operator">===</span> <span class="token string">&#39;parent&#39;</span> <span class="token operator">||</span>
    <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;mockTop&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;mockSafariTop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// if your master app in an iframe context, allow these props escape the sandbox</span>
    <span class="token comment">// \u6B63\u5E38\u60C5\u51B5\u4E0B\u8D70\u8BE5\u5206\u652F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rawWindow <span class="token operator">===</span> rawWindow<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// proxy.hasOwnProperty would invoke getter firstly, then its value represented as rawWindow.hasOwnProperty</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;hasOwnProperty&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> hasOwnProperty<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6807\u8BB0\u5F53\u524D\u6B63\u5728\u8FD0\u884C\u7684\u6C99\u7BB1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;document&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;eval&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setCurrentRunningSandboxProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// FIXME if you have any other good ideas</span>
    <span class="token comment">// remove the mark in next tick, thus we can identify whether it in micro app or not</span>
    <span class="token comment">// this approach is just a workaround, it could not cover all complex cases, such as the micro app runs in the same task context with master in some case</span>
    <span class="token comment">// \u6B64\u65F6\u5E94\u7528\u5DF2\u7ECF\u6302\u8F7D\uFF0C\u53BB\u9664\u6807\u8BB0</span>
    <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCurrentRunningSandboxProxy</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;document&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> document<span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;eval&#39;</span><span class="token operator">:</span>
        <span class="token comment">// eslint-disable-next-line no-eval</span>
        <span class="token keyword">return</span> eval<span class="token punctuation">;</span>
      <span class="token comment">// no default</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line no-nested-ternary</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> propertiesWithGetter<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
    <span class="token operator">?</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span>
    <span class="token operator">:</span> p <span class="token keyword">in</span> target
    <span class="token operator">?</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span>
    <span class="token operator">:</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getTargetValue</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5728\u89E6\u53D1<code>Getter</code>\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u4E00\u4E9B\u6CA1\u6709\u89C1\u8FC7\u7684<code>window</code>\u5C5E\u6027\uFF0C\u4F8B\u5982<code>window.parent</code>, <code>window.top</code>, <code>window.self</code>\uFF0C\u5982\u679C\u6211\u4EEC\u53BB\u63A7\u5236\u53F0\u53BB\u6253\u5370\u4F1A\u53D1\u73B0\u8FD9\u6837\u7684\u60C5\u51B5</li></ol><p><img src="`+c+`" alt="" loading="lazy"></p><p><strong>\u8FD9\u662F\u4E3A\u4E86\u9632\u6B62\uFF0C\u6211\u4EEC\u901A\u8FC7\u8FD9\u6837\u7684\u65B9\u5F0F\u53BB\u83B7\u53D6<code>rawWindow</code>\uFF0C\u800C\u76F4\u63A5\u4FEE\u6539\u5B83\u7684\u503C\u3002</strong></p><ol start="2"><li><p>\u6807\u8BB0\u6B63\u5728\u6267\u884C\u7684\u6C99\u7BB1\uFF0C\u4E3A\u4EC0\u4E48\u8BBF\u95EE<code>document</code>\u7684\u65F6\u5019\u624D\u4F1A\u8FDB\u884C\u6807\u8BB0\u5462\uFF1F\u56E0\u4E3A\u9875\u9762\u7684\u6E32\u67D3\u4E00\u5B9A\u4F1A\u4F34\u968F\u5404\u79CD dom \u64CD\u4F5C\uFF0C\u6240\u4EE5\u5728\u8FD9\u4E2A\u65F6\u5019\u6807\u8BB0\uFF0C\u662F\u80FD\u591F\u8BB0\u5F55\u4E0B\u6B63\u5728\u6267\u884C\u7684\u6C99\u7BB1\uFF0C \u5F53\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u4EE3\u8868\u9996\u6B21\u6E32\u67D3\u5B8C\u6210\u65F6\uFF0C\u53C8\u4F1A\u628A\u6807\u8BB0\u6E05\u9664\u6389\u3002 <strong>\u4E3A\u4EC0\u4E48\u6807\u8BB0\uFF1F\u539F\u56E0\u662F\u4E3A\u4E86\u8BA9\u6211\u4EEC\u5728\u9996\u6B21\u6E32\u67D3\u8FC7\u7A0B\u4E2D\uFF0C\u80FD\u591F\u62FF\u5230\u5F53\u524D\u7684\u6C99\u7BB1\u5BF9\u8C61\uFF0C\u83B7\u53D6\u5176\u4E2D\u7684\u5C5E\u6027\u503C</strong></p></li><li><p>\u8FD4\u56DE\u5C5E\u6027\u503C</p></li></ol><h3 id="_4-\u5931\u6D3B\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#_4-\u5931\u6D3B\u6C99\u7BB1" aria-hidden="true">#</a> 4. \u5931\u6D3B\u6C99\u7BB1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>activeSandboxCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    variableWhiteList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>proxy<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// @ts-ignore</span>
        <span class="token keyword">delete</span> window<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u5C06\u4F1A\u5728<code>unmount</code>\u65F6\u8C03\u7528\uFF0C\u5982\u679C\u5F53\u524D\u5931\u6D3B\u7684\u6C99\u7BB1\u662F\u6700\u540E\u4E00\u4E2A\u6C99\u7BB1\uFF0C\u5B83\u4F1A\u5220\u9664\u6389\u767D\u540D\u5355\u4E2D<code>rawWindow</code>\u4E0A\u7684\u5C5E\u6027\uFF0C\u5E76\u8BBE\u7F6E<code>sandboxRunning = false</code></p><h2 id="legacy-\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#legacy-\u6C99\u7BB1" aria-hidden="true">#</a> Legacy \u6C99\u7BB1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u57FA\u4E8E Proxy \u5B9E\u73B0\u7684\u6C99\u7BB1
 * TODO: \u4E3A\u4E86\u517C\u5BB9\u6027 singular \u6A21\u5F0F\u4E0B\u4F9D\u65E7\u4F7F\u7528\u8BE5\u6C99\u7BB1\uFF0C\u7B49\u65B0\u6C99\u7BB1\u7A33\u5B9A\u4E4B\u540E\u518D\u5207\u6362
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">SingularProxySandbox</span> <span class="token keyword">implements</span> <span class="token class-name">SandBox</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** \u6C99\u7BB1\u671F\u95F4\u65B0\u589E\u7684\u5168\u5C40\u53D8\u91CF */</span>
  <span class="token keyword">private</span> addedPropsMapInSandbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** \u6C99\u7BB1\u671F\u95F4\u66F4\u65B0\u7684\u5168\u5C40\u53D8\u91CF */</span>
  <span class="token keyword">private</span> modifiedPropsOriginalValueMapInSandbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** \u6301\u7EED\u8BB0\u5F55\u66F4\u65B0\u7684(\u65B0\u589E\u548C\u4FEE\u6539\u7684)\u5168\u5C40\u53D8\u91CF\u7684 map\uFF0C\u7528\u4E8E\u5728\u4EFB\u610F\u65F6\u523B\u505A snapshot */</span>
  <span class="token keyword">private</span> currentUpdatedPropsValueMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> WindowProxy<span class="token punctuation">;</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> SandBoxType<span class="token punctuation">;</span>
  sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token literal-property property">latestSetProp</span><span class="token operator">:</span> PropertyKey <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>currentUpdatedPropsValueMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>addedPropsMapInSandbox<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>LegacyProxy<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> addedPropsMapInSandbox<span class="token punctuation">,</span> modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">,</span> currentUpdatedPropsValueMap <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rawWindow <span class="token operator">=</span> window<span class="token punctuation">;</span>
    <span class="token keyword">const</span> fakeWindow <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Window<span class="token punctuation">;</span>
    <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">get</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">has</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> symbol<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> PropertyDescriptor <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>LegacySandbox</code>\u53EA\u6709\u5728\u914D\u7F6E<code>sandbox.loose</code>\u624D\u4F1A\u8D77\u4F5C\u7528\uFF0C\u8BE5\u6C99\u7BB1\u867D\u7136\u4E5F\u662F\u57FA\u4E8E Proxy \u5B9E\u73B0\u7684\uFF0C\u4F46\u662F\u5B83\u4F1A\u76F4\u63A5\u4FEE\u6539\u6216\u83B7\u53D6<code>rawWindow</code>\u7684\u5C5E\u6027,\u5176\u5B9E\u73B0\u4E0E\u5FEB\u7167\u6C99\u7BB1\u6BD4\u8F83\u76F8\u4F3C\uFF0C\u5728\u6FC0\u6D3B\u548C\u5931\u6D3B\u65F6\uFF0C\u4F1A\u5BF9<code>window</code>\u8FDB\u884C\u6062\u590D\u548C\u8FD8\u539F\u3002</p><h3 id="_1-\u521D\u59CB\u5316\u9636\u6BB5-1" tabindex="-1"><a class="header-anchor" href="#_1-\u521D\u59CB\u5316\u9636\u6BB5-1" aria-hidden="true">#</a> 1. \u521D\u59CB\u5316\u9636\u6BB5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>LegacyProxy<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> addedPropsMapInSandbox<span class="token punctuation">,</span> modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">,</span> currentUpdatedPropsValueMap <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rawWindow <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token keyword">const</span> fakeWindow <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Window<span class="token punctuation">;</span>
  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">get</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">has</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> symbol<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> PropertyDescriptor <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u9636\u6BB5\u4F1A\u521D\u59CB\u5316\u4E00\u4E9B\u5BF9\u8C61\uFF0C\u5E76\u4EE3\u7406<code>fakeWindow</code>\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u70B9</p><ul><li>addedPropsMapInSandbox\uFF1A<code>inactive</code>\u65F6\u4F1A\u4F7F\u7528\uFF0C\u7528\u4E8E\u91CD\u7F6E<code>window</code>\uFF0C\u5220\u9664\u6389\u88AB\u6DFB\u52A0\u7684\u5C5E\u6027\u3002</li><li>modifiedPropsOriginalValueMapInSandbox\uFF1A<code>inactive</code>\u65F6\u4F1A\u4F7F\u7528\uFF0C\u91CD\u7F6E<code>window</code>, \u6062\u590D\u5230\u4E00\u5F00\u59CB\u7684\u72B6\u6001</li><li>currentUpdatedPropsValueMap: <code>active</code>\u65F6\u4F1A\u4F7F\u7528\uFF0C\u91CD\u65B0\u8BBE\u7F6E<code>window</code>\uFF0C\u6062\u590D\u5230\u4E0A\u6B21\u66F4\u65B0\u72B6\u6001</li></ul><h3 id="_2-\u6FC0\u6D3B\u6C99\u7BB1-1" tabindex="-1"><a class="header-anchor" href="#_2-\u6FC0\u6D3B\u6C99\u7BB1-1" aria-hidden="true">#</a> 2.\u6FC0\u6D3B\u6C99\u7BB1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>currentUpdatedPropsValueMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>currentUpdatedPropsValueMap</code>\u91CD\u65B0\u8BBE\u7F6E<code>window</code>\u5BF9\u8C61</p><h3 id="_3-\u89E6\u53D1-setter-1" tabindex="-1"><a class="header-anchor" href="#_3-\u89E6\u53D1-setter-1" aria-hidden="true">#</a> 3.\u89E6\u53D1 Setter</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      addedPropsMapInSandbox<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D window \u5BF9\u8C61\u5B58\u5728\u8BE5\u5C5E\u6027\uFF0C\u4E14 record map \u4E2D\u672A\u8BB0\u5F55\u8FC7\uFF0C\u5219\u8BB0\u5F55\u8BE5\u5C5E\u6027\u521D\u59CB\u503C</span>
      <span class="token keyword">const</span> originalValue <span class="token operator">=</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
      modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> originalValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    currentUpdatedPropsValueMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5FC5\u987B\u91CD\u65B0\u8BBE\u7F6E window \u5BF9\u8C61\u4FDD\u8BC1\u4E0B\u6B21 get \u65F6\u80FD\u62FF\u5230\u5DF2\u66F4\u65B0\u7684\u6570\u636E</span>
    <span class="token comment">// eslint-disable-next-line no-param-reassign</span>
    <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>latestSetProp <span class="token operator">=</span> p<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Set window.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> while sandbox destroyed or inactive in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728 strict-mode \u4E0B\uFF0CProxy \u7684 handler.set \u8FD4\u56DE false \u4F1A\u629B\u51FA TypeError\uFF0C\u5728\u6C99\u7BB1\u5378\u8F7D\u7684\u60C5\u51B5\u4E0B\u5E94\u8BE5\u5FFD\u7565\u9519\u8BEF</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u89E6\u53D1 Setter \u65F6\uFF0C\u4F1A\u66F4\u65B0\u4E09\u4E2A Map</p><ul><li>\u5224\u65AD\u76F8\u5BF9\u4E8E<code>rawWindow</code>\u662F\u5426\u662F\u65B0\u589E\u5C5E\u6027\uFF0C\u5982\u679C\u662F\u5219\u6DFB\u52A0\u5C5E\u6027\u548C\u503C\u5230<code>addedPropsMapInSandbox</code></li><li><code>modifiedPropsOriginalValueMapInSandbox</code>\u5982\u679C\u6CA1\u6709\u8BB0\u5F55\u8FC7\u66F4\u65B0\u7684<code>key</code>, \u5219\u8BB0\u5F55\u8BE5\u5C5E\u6027\u7684\u521D\u59CB\u503C\u7528\u4E8E\u6062\u590D\u3002</li><li><code>currentUpdatedPropsValueMap</code> \u8BB0\u5F55\u5F53\u524D\u66F4\u65B0\u7684\u5C5E\u6027\u548C\u503C</li></ul><h3 id="_4-\u89E6\u53D1-getter" tabindex="-1"><a class="header-anchor" href="#_4-\u89E6\u53D1-getter" aria-hidden="true">#</a> 4. \u89E6\u53D1 Getter</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span>_<span class="token operator">:</span> Window<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;top&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;parent&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;window&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;self&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getTargetValue</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u548C<code>Proxy\u6C99\u7BB1</code>\u7C7B\u4F3C\uFF0C\u4E5F\u4F1A\u5904\u7406<code>window.top</code>, <code>window.window</code>\u7B49\u60C5\u51B5</p><h3 id="_5-\u5931\u6D3B\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#_5-\u5931\u6D3B\u6C99\u7BB1" aria-hidden="true">#</a> 5.\u5931\u6D3B\u6C99\u7BB1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>modifiedPropsOriginalValueMapInSandbox<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>addedPropsMapInSandbox<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setWindowProp</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5931\u6D3B\u6C99\u7BB1\u7684\u5B9E\u73B0\u5C31\u4E0D\u591A\u8D58\u8FF0\u4E86\uFF0C\u61C2\u5F97\u90FD\u61C2~</p><h2 id="snapshot-\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#snapshot-\u6C99\u7BB1" aria-hidden="true">#</a> Snapshot \u6C99\u7BB1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">iter</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token keyword">typeof</span> window<span class="token punctuation">,</span> <span class="token function-variable function">callbackFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">prop</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// eslint-disable-next-line guard-for-in, no-restricted-syntax</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callbackFn</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u57FA\u4E8E diff \u65B9\u5F0F\u5B9E\u73B0\u7684\u6C99\u7BB1\uFF0C\u7528\u4E8E\u4E0D\u652F\u6301 Proxy \u7684\u4F4E\u7248\u672C\u6D4F\u89C8\u5668
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">SnapshotSandbox</span> <span class="token keyword">implements</span> <span class="token class-name">SandBox</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> WindowProxy<span class="token punctuation">;</span>

  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>

  <span class="token literal-property property">type</span><span class="token operator">:</span> SandBoxType<span class="token punctuation">;</span>

  sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token keyword">private</span> windowSnapshot<span class="token operator">!</span><span class="token operator">:</span> Window<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token literal-property property">modifyPropsMap</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> window<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>Snapshot<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u5FEB\u7167</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>windowSnapshot <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Window<span class="token punctuation">;</span>
    <span class="token function">iter</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>windowSnapshot<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> window<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6062\u590D\u4E4B\u524D\u7684\u53D8\u66F4</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>modifyPropsMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">p</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>modifyPropsMap<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>modifyPropsMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">iter</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowSnapshot<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BB0\u5F55\u53D8\u66F4\uFF0C\u6062\u590D\u73AF\u5883</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>modifyPropsMap<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> window<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        window<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowSnapshot<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun:sandbox] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> origin window restore...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>modifyPropsMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u6BD4\u57FA\u4E8E<code>Proxy</code>\u5B9E\u73B0\u7684\u6C99\u7BB1\uFF0C<code>SnapshotSandbox</code>\u5B9E\u73B0\u975E\u5E38\u7B80\u6D01\uFF0C\u53EA\u6709<code>active</code>\u548C<code>inactive</code>\u72B6\u6001\u53D8\u5316\uFF0C\u53EF\u4EE5\u7528\u4E00\u4E2A\u6D41\u7A0B\u56FE\u6765\u8868\u793A</p>`,47);function r(k,d){const n=e("Mermaid");return t(),o("div",null,[l,s(n,{id:"mermaid-6",code:"eNpLy8kvT85ILCpRCHGy5lJQSNTwCn62aebzdRs1FXR17RSSNJ7O3/VkV19AUX5F5fNZLVA5kEqwfLJGcF5iQXFGfklwYl5KUn4FSKq4NCm9KLEgQ0EPyEkCq6spzsxLL81JLHq2YuHTPf1PdnTXpGj4pKYnJlciaYSoTdUA24YknpqXwgUAjlFAnw=="}),u,s(n,{id:"mermaid-225",code:"eNpLy8kvT85ILCpR8Amy5iouTUovSizIUMjMS0wuySxL5UrReLpk47MtuzUVdHXtFFI1cvNTMtMqA4ryC4p9EwterNvwdO/Up/0zns3eosmVClaTplGemZeSXx6cl1hQnJFf8mR339P9q5+3Ln/WuOjpkl6gsrwULoRNUHsSNZ7tb4Dbk4RmBtQesDGaXElgNcloboEY/2RH17M1C+EuAlkFAONtZho="})])}const b=p(i,[["render",r],["__file","JS\u6C99\u7BB1.html.vue"]]);export{b as default};
