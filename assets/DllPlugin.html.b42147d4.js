import{_ as t}from"./plugin-vueexport-helper.2444895f.js";import{o as p,c as e,a as n,b as s,d as o,e as c,r as l}from"./app.6039c471.js";const i={},u=n("h1",{id:"dllplugin-\u5B9E\u73B0\u539F\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dllplugin-\u5B9E\u73B0\u539F\u7406","aria-hidden":"true"},"#"),s(" DllPlugin \u5B9E\u73B0\u539F\u7406")],-1),d={href:"https://github.com/fyhhub/dll-plugin",target:"_blank",rel:"noopener noreferrer"},r=c(`<h2 id="\u4EC0\u4E48\u662F-dll" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-dll" aria-hidden="true">#</a> \u4EC0\u4E48\u662F DLL</h2><ul><li>DllPlugin \u548C DllReferencePlugin \u63D0\u4F9B\u4E86\u62C6\u5206\u5305\u7684\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6781\u5927\u5730\u63D0\u9AD8\u6784\u5EFA\u65F6\u6027\u80FD\u3002\u672F\u8BED DLL \u4EE3\u8868\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u5B83\u6700\u521D\u662F\u7531 Microsoft \u5F15\u5165\u7684\u3002</li><li>.dll \u4E3A\u540E\u7F00\u7684\u6587\u4EF6\u79F0\u4E3A\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u5728\u4E00\u4E2A\u52A8\u6001\u94FE\u63A5\u5E93\u4E2D\u53EF\u4EE5\u5305\u542B\u7ED9\u5176\u4ED6\u6A21\u5757\u8C03\u7528\u7684\u51FD\u6570\u548C\u6570\u636E</li><li>\u628A\u57FA\u7840\u6A21\u5757\u72EC\u7ACB\u51FA\u6765\u6253\u5305\u5230\u5355\u72EC\u7684\u52A8\u6001\u8FDE\u63A5\u5E93\u91CC</li><li>\u5F53\u9700\u8981\u5BFC\u5165\u7684\u6A21\u5757\u5728\u52A8\u6001\u8FDE\u63A5\u5E93\u91CC\u7684\u65F6\u5019\uFF0C\u6A21\u5757\u4E0D\u80FD\u518D\u6B21\u88AB\u6253\u5305\uFF0C\u800C\u662F\u53BB\u52A8\u6001\u8FDE\u63A5\u5E93\u91CC\u83B7\u53D6</li></ul><h2 id="\u57FA\u7840\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7C7B" aria-hidden="true">#</a> \u57FA\u7840\u7C7B</h2><p><img src="http://tva1.sinaimg.cn/large/006vSZ9Ugy1gxa4nlyldjj319l0oytib.jpg" alt="WebpackClassDiagram6.jpg" loading="lazy"></p><h2 id="dllplugin" tabindex="-1"><a class="header-anchor" href="#dllplugin" aria-hidden="true">#</a> DllPlugin</h2><h3 id="\u6D41\u7A0B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u56FE" aria-hidden="true">#</a> \u6D41\u7A0B\u56FE</h3><p><img src="http://tva1.sinaimg.cn/large/006vSZ9Ugy1gxa4nw42t9j317o16fwk4.jpg" alt="InkedDllPlugin5_LI.jpg" loading="lazy"></p><h3 id="\u5B9E\u73B0\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6B65\u9AA4" aria-hidden="true">#</a> \u5B9E\u73B0\u6B65\u9AA4</h3><ol><li>\u76D1\u542C<code>entryOption</code>\u94A9\u5B50\uFF0C\u6839\u636E\u914D\u7F6E\u7684\u5165\u53E3\u6A21\u5757\uFF0C\u521B\u5EFA<code>DllEntryPlugin</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>entryOption<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&quot;DllPlugin&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">DllEntryPlugin</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> entry<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>compiler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p><code>DllEntryPlugin</code>\u63D2\u4EF6\u76D1\u542C<code>compilation</code>\u94A9\u5B50</p><ul><li>\u5F53\u51FA\u73B0<code>DllEntryDependency</code>\u4F9D\u8D56\u65F6\uFF0C\u4F7F\u7528<code>dllModuleFactory</code>\u521B\u5EFA\u6A21\u5757</li><li>\u5F53\u51FA\u73B0<code>SingleEntryDependency</code>\u4F9D\u8D56\u65F6\uFF08\u5165\u53E3\u6A21\u5757\u4F9D\u8D56\uFF09, \u4F7F\u7528<code>normalModuleFactory</code>\u521B\u5EFA\u6A21\u5757</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compilation<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;DllEntryPlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> <span class="token punctuation">{</span> normalModuleFactory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dllModuleFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DllModuleFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    compilation<span class="token punctuation">.</span>dependencyFactories<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      DllEntryDependency<span class="token punctuation">,</span>
      dllModuleFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    compilation<span class="token punctuation">.</span>dependencyFactories<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      SingleEntryDependency<span class="token punctuation">,</span>
      normalModuleFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>DllEntryPlugin</code>\u63D2\u4EF6\u76D1\u542C<code>make</code>\u94A9\u5B50\uFF0C\u589E\u52A0\u5165\u53E3\u4F9D\u8D56\uFF0C\u5E76\u4ECE\u8FD9\u91CC\u5F00\u59CB\u4F5C\u4E3A\u5165\u53E3\u7F16\u8BD1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>make<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&quot;DllEntryPlugin&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F00\u59CB\u4E00\u6B21\u65B0\u7684\u5165\u53E3\u7F16\u8BD1</span>
  compilation<span class="token punctuation">.</span><span class="token function">addEntry</span><span class="token punctuation">(</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">DllEntryDependency</span><span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>entries<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">SingleEntryDependency</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    callback
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>LibManifestPlugin</code>\u63D2\u4EF6\uFF0C\u76D1\u542C<code>emit</code>\u94A9\u5B50\uFF0C\u904D\u5386\u6BCF\u4E2A chunk, \u4E5F\u5C31\u662F\u6211\u4EEC\u914D\u7F6E\u7684\u90A3\u4E9B\u5E93\u6A21\u5757\uFF0C\u6700\u540E\u751F\u6210 manifest.json \u914D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span>
  <span class="token string">&quot;LibManifestPlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6240\u6709chunks\u6267\u884C\u8FD9\u4E2A\u51FD\u6570\uFF0C \u5F53\u6240\u6709\u4EFB\u52A1\u90FDdone  \u624D\u4F1A\u6267\u884Ccallback</span>
    <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    async<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
      compilation<span class="token punctuation">.</span>chunks<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> targetPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
        <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> module <span class="token keyword">of</span> chunk<span class="token punctuation">.</span>modulesIterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>libIdent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> ident <span class="token operator">=</span> module<span class="token punctuation">.</span><span class="token function">libIdent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">context</span><span class="token operator">:</span> compiler<span class="token punctuation">.</span>options<span class="token punctuation">.</span>context<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">[</span>ident<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">id</span><span class="token operator">:</span> module<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> manifest <span class="token operator">=</span> <span class="token punctuation">{</span>
          name<span class="token punctuation">,</span>
          content<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        compiler<span class="token punctuation">.</span>outputFileSystem<span class="token punctuation">.</span><span class="token function">mkdirp</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>targetPath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          compiler<span class="token punctuation">.</span>outputFileSystem<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>
            targetPath<span class="token punctuation">,</span>
            <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>manifest<span class="token punctuation">)</span><span class="token punctuation">,</span>
            done
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      callback
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="dllreferenceplugin" tabindex="-1"><a class="header-anchor" href="#dllreferenceplugin" aria-hidden="true">#</a> DllReferencePlugin</h2><h2 id="\u6D41\u7A0B\u56FE-1" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u56FE-1" aria-hidden="true">#</a> \u6D41\u7A0B\u56FE</h2><p><img src="http://tva1.sinaimg.cn/large/006vSZ9Ugy1gxa4o3919jj31he15k7b5.jpg" alt="InkedDllReferencePlugin5_LI.jpg" loading="lazy"></p><h2 id="\u5B9E\u73B0\u6B65\u9AA4-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6B65\u9AA4-1" aria-hidden="true">#</a> \u5B9E\u73B0\u6B65\u9AA4</h2><ol><li><p><code>DllReferencePlugin</code>\u76D1\u542C<code>compilation</code>\u548C<code>compile</code>\u94A9\u5B50</p><ul><li>\u5F53\u51FA\u73B0<code>DelegatedSourceDependency</code>\u4F9D\u8D56\u65F6\uFF0C\u4F7F\u7528<code>normalModuleFactory</code>\u521B\u5EFA\u6A21\u5757</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compilation<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;DllReferencePlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> <span class="token punctuation">{</span> normalModuleFactory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    compilation<span class="token punctuation">.</span>dependencyFactories<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      DelegatedSourceDependency<span class="token punctuation">,</span>
      normalModuleFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5728\u5373\u5C06\u5F00\u59CB\u7F16\u8BD1\u65F6\u89E6\u53D1<code>compile</code>, \u8BFB\u53D6<code>manifest.json</code>\u5185\u5BB9\uFF0C\u5C06\u6211\u4EEC\u914D\u7F6E\u7684<code>library</code>\u7684\u503C\u4F5C\u4E3A\u5916\u90E8\u4F9D\u8D56\u6A21\u5757\uFF0C\u521B\u5EFA<code>ExternalModuleFactoryPlugin</code>\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compile<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;DllReferencePlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> normalModuleFactory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> manifest <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>manifest<span class="token punctuation">;</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> manifest<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token keyword">const</span> content <span class="token operator">=</span> manifest<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
    <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">dll-reference </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> external <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    external<span class="token punctuation">[</span>source<span class="token punctuation">]</span> <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">ExternalModuleFactoryPlugin</span><span class="token punctuation">(</span><span class="token string">&quot;var&quot;</span><span class="token punctuation">,</span> external<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
      normalModuleFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">new</span> <span class="token class-name">DelegatedModuleFactoryPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      source<span class="token punctuation">,</span>
      <span class="token literal-property property">context</span><span class="token operator">:</span> compiler<span class="token punctuation">.</span>options<span class="token punctuation">.</span>context<span class="token punctuation">,</span>
      content<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>normalModuleFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u521D\u59CB\u5316<code>DelegatedModuleFactoryPlugin</code>\u63D2\u4EF6\uFF0C\u7528\u6765\u4FEE\u6539\u6211\u4EEC\u4F7F\u7528\u7684\u5E93\uFF0C\u4F8B\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> isarray <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;isarray&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ECF\u8FC7 DelegatedModuleFactoryPlugin \u5904\u7406\u540E</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token function">__webpack_require__</span><span class="token punctuation">(</span><span class="token string">&#39;dll-reference _dll_utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;./node_modules/.pnpm/isarray@2.0.5/node_modules/isarray/index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>ExternalModuleFactoryPlugin</code>\u76D1\u542C<code>normalModuleFactory</code>\u7684<code>factory</code>\u94A9\u5B50 \u5982\u679C\u53D1\u73B0 require \u7684\u662F<code>dll-reference xxx</code>\uFF0C\u5C31\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>ExternalModule</code>\u66FF\u6362\u6389\u539F\u672C\u7684<code>NormalModule</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>normalModuleFactory<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>factory<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;ExternalModuleFactoryPlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">factory</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dependency <span class="token operator">=</span> data<span class="token punctuation">.</span>dependencies<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//DelegatedSourceDependency</span>
    <span class="token keyword">let</span> request <span class="token operator">=</span> dependency<span class="token punctuation">.</span>request<span class="token punctuation">;</span> <span class="token comment">// &quot;dll-reference _dll_utils&quot;</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>externals<span class="token punctuation">[</span>request<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//_dll_utils</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5982\u679C\u662F\u4E00\u4E2A\u5916\u90E8\u6A21\u5757</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>
        <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">ExternalModule</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;var&quot;</span><span class="token punctuation">,</span> dependency<span class="token punctuation">.</span>request<span class="token punctuation">)</span> <span class="token comment">//_dll_utils</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5426\u5219 \u662F\u4E2A\u666E\u901A\u6A21\u5757 \u8D70\u8001\u7684\u666E\u901A\u6A21\u5757\u5DE5\u5382\u7684\u751F\u4EA7\u6A21\u5757\u7684\u903B\u8F91</span>
      <span class="token function">factory</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>DelegatedModuleFactoryPlugin \u63D2\u4EF6, \u76D1\u542C<code>module</code>\u94A9\u5B50\uFF0C\u5982\u679C\u8DEF\u5F84\u547D\u4E2D\u4E86 manifest \u7684 contents \u4E2D\u7684\u8DEF\u5F84\uFF0C\u5C31\u521B\u5EFA<code>DelegatedModule</code></p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>normalModuleFactory<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>module<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;DelegatedModuleFactoryPlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">module</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>libIdent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> request <span class="token operator">=</span> module<span class="token punctuation">.</span><span class="token function">libIdent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5339\u914D\u5230\u4E86manifest\u91CC\u7684content\u6587\u4EF6</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>request <span class="token operator">&amp;&amp;</span> request <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> resolved <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>content<span class="token punctuation">[</span>request<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DelegatedModule</span><span class="token punctuation">(</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>source<span class="token punctuation">,</span> <span class="token comment">//dll-reference _dll_utils</span>
          resolved<span class="token punctuation">,</span> <span class="token comment">//{&quot;id&quot;:&quot;./node_modules/_is-promise@4.0.0@is-promise/index.js&quot;}</span>
          module <span class="token comment">//\u8001\u6A21\u5757</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> module<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>DelegatedModule</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">DelegatedModule</span> <span class="token keyword">extends</span> <span class="token class-name">Module</span> <span class="token punctuation">{</span>
  <span class="token comment">// ... \u7701\u7565</span>

  <span class="token doc-comment comment">/**
   * \u76F4\u63A5\u8FD4\u56DE\u6E90\u4EE3\u7801  \u7528\u5982\u4E0B\u4EE3\u7801
   */</span>
  <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">module.exports = (__webpack_require__(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sourceRequest
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;)(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">))</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RawSource</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token doc-comment comment">/**
   * 1. \u5F53\u4EE3\u7406\u6A21\u5757\u88AB\u521B\u5EFA\u7684\u65F6
   * 2. \u4E0D\u8D70\u539F\u672C\u7684Build\u903B\u8F91\uFF0C\u4F8B\u5982ast\u89E3\u6790\uFF0C\u521B\u5EFA\u5404\u79CD\u4F9D\u8D56
   * 3. \u76F4\u63A5\u521B\u5EFA\u4F9D\u8D56\uFF0C\u540E\u9762\u4F1A\u9012\u5F52\u89E3\u6790\u8FD9\u4E2ADelegatedSourceDependency\u4F9D\u8D56
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">options</span>
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">compilation</span>
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">resolver</span>
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">fs</span>
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">callback</span>
   */</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> compilation<span class="token punctuation">,</span> resolver<span class="token punctuation">,</span> fs<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>built <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>buildMeta <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>buildInfo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0D\u8D70ast\u5206\u6790\u521B\u5EFA\u4F9D\u8D56  \u76F4\u63A5\u521B\u5EFADelegatedSourceDependency\u4F9D\u8D56</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>delegatedSourceDependency <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DelegatedSourceDependency</span><span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sourceRequest
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addDependency</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegatedSourceDependency<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function k(v,m){const a=l("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[s("DllPlugin \u624B\u5199\u5B9E\u73B0 "),n("a",d,[s("\u6E90\u7801\u5B9E\u73B0\u5730\u5740"),o(a)])]),r])}const g=t(i,[["render",k],["__file","DllPlugin.html.vue"]]);export{g as default};
