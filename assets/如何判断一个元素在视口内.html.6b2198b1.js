import{_ as n}from"./plugin-vueexport-helper.2444895f.js";import{o as s,c as a,d as e}from"./app.6296002a.js";const t={},p=e(`<h1 id="\u5982\u4F55\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u5728\u89C6\u53E3\u5185" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u5728\u89C6\u53E3\u5185" aria-hidden="true">#</a> \u5982\u4F55\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u5728\u89C6\u53E3\u5185</h1><h2 id="\u4F7F\u7528\u5143\u7D20\u4F4D\u7F6E\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5143\u7D20\u4F4D\u7F6E\u5224\u65AD" aria-hidden="true">#</a> \u4F7F\u7528\u5143\u7D20\u4F4D\u7F6E\u5224\u65AD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rect <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  <span class="token keyword">return</span> height <span class="token operator">&gt;=</span> rect<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="intersectionobserver" tabindex="-1"><a class="header-anchor" href="#intersectionobserver" aria-hidden="true">#</a> IntersectionObserver</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">entries<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5143\u7D20\u51FA\u73B0\u5728\u89C6\u53E3\u5185</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">rootMargin</span><span class="token operator">:</span> <span class="token string">&quot;0px&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u89C2\u5BDF\u5143\u7D20</span>
observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","\u5982\u4F55\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u5728\u89C6\u53E3\u5185.html.vue"]]);export{d as default};
