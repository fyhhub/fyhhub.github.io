import{_ as a,o as t,c as e,Q as l}from"./chunks/framework.3d945e71.js";const m=JSON.parse('{"title":"let、var 和 const 的区别","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/js/let、var和const的区别.md","filePath":"frontend-basic/js/let、var和const的区别.md","lastUpdated":1694359477000}'),o={name:"frontend-basic/js/let、var和const的区别.md"},r=l('<h1 id="let、var-和-const-的区别" tabindex="-1">let、var 和 const 的区别 <a class="header-anchor" href="#let、var-和-const-的区别" aria-label="Permalink to &quot;let、var 和 const 的区别&quot;">​</a></h1><h2 id="var" tabindex="-1">var <a class="header-anchor" href="#var" aria-label="Permalink to &quot;var&quot;">​</a></h2><ol><li>存在变量提升</li><li>在函数是局部变量，在作用域最外层是全局变量</li></ol><h2 id="let" tabindex="-1">let <a class="header-anchor" href="#let" aria-label="Permalink to &quot;let&quot;">​</a></h2><ol><li>具有块级作用域的特点</li><li>不能重复声明</li><li>不存在变量提升，暂时性死区</li></ol><h2 id="const" tabindex="-1">const <a class="header-anchor" href="#const" aria-label="Permalink to &quot;const&quot;">​</a></h2><ol><li>具有块级作用域的特点</li><li>不能重复声明</li><li>不存在变量提升，暂时性死区</li><li>变量不能修改，如果是对象，可以修改其属性</li></ol>',7),i=[r];function n(s,c,_,d,h,f){return t(),e("div",null,i)}const u=a(o,[["render",n]]);export{m as __pageData,u as default};
