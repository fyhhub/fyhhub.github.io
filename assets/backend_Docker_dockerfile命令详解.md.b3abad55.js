import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.3d945e71.js";const u=JSON.parse('{"title":"dockerfile命令详解","description":"","frontmatter":{},"headers":[],"relativePath":"backend/Docker/dockerfile命令详解.md","filePath":"backend/Docker/dockerfile命令详解.md","lastUpdated":1712883902000}'),p={name:"backend/Docker/dockerfile命令详解.md"},o=l(`<h1 id="dockerfile命令详解" tabindex="-1">dockerfile命令详解 <a class="header-anchor" href="#dockerfile命令详解" aria-label="Permalink to &quot;dockerfile命令详解&quot;">​</a></h1><h2 id="arg" tabindex="-1">ARG <a class="header-anchor" href="#arg" aria-label="Permalink to &quot;ARG&quot;">​</a></h2><p>可以指定变量:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ARG</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">CODE_VERSION=latest</span></span>
<span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">base:</span><span style="color:#E1E4E8;">\${CODE_VERSION}</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/code/run-app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extras:</span><span style="color:#E1E4E8;">\${CODE_VERSION}</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/code/run-extras</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ARG</span><span style="color:#24292E;">  </span><span style="color:#032F62;">CODE_VERSION=latest</span></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">base:</span><span style="color:#24292E;">\${CODE_VERSION}</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/code/run-app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extras:</span><span style="color:#24292E;">\${CODE_VERSION}</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/code/run-extras</span></span></code></pre></div><p>也可以参数传入</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--build-arg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aaa=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--build-arg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bbb=</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">arg-test</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">333</span><span style="color:#9ECBFF;">.Dockerfile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--build-arg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aaa=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--build-arg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bbb=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">arg-test</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">333</span><span style="color:#032F62;">.Dockerfile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node:18-alpine3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ARG</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aaa</span></span>
<span class="line"><span style="color:#B392F0;">ARG</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bbb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test.js</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aaa=</span><span style="color:#E1E4E8;">\${aaa} </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">bbb=</span><span style="color:#E1E4E8;">\${bbb}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;/app/test.js&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node:18-alpine3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">ARG</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aaa</span></span>
<span class="line"><span style="color:#6F42C1;">ARG</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bbb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test.js</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">ENV</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aaa=</span><span style="color:#24292E;">\${aaa} </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">bbb=</span><span style="color:#24292E;">\${bbb}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;node&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;/app/test.js&quot;]</span></span></code></pre></div><h2 id="from" tabindex="-1">FROM <a class="header-anchor" href="#from" aria-label="Permalink to &quot;FROM&quot;">​</a></h2><ul><li><p>指明当前的镜像基于哪个镜像构建</p></li><li><p>dockerfile 必须以 FROM 开头，除了 ARG 命令可以在 FROM 前面</p><pre><code>FROM [--platform=&lt;platform&gt;] &lt;image&gt; [AS &lt;name&gt;]

FROM [--platform=&lt;platform&gt;] &lt;image&gt;[:&lt;tag&gt;] [AS &lt;name&gt;]

FROM [--platform=&lt;platform&gt;] &lt;image&gt;[@&lt;digest&gt;] [AS &lt;name&gt;]
</code></pre></li><li><p>一个 dockerfile 可以有多个 FROM， 通过 as 指定阶段名称， <code>Copy</code>通过--from指定阶段</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tiangolo/uvicorn-gunicorn:python3.9</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">requirements-stage</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 通过as 指定阶段名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--from=requirements-stage</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/tmp/requirements.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/code/requirements.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># --from指定阶段</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tiangolo/uvicorn-gunicorn:python3.9</span><span style="color:#24292E;"> </span><span style="color:#032F62;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">requirements-stage</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 通过as 指定阶段名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--from=requirements-stage</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/tmp/requirements.txt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/code/requirements.txt</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># --from指定阶段</span></span></code></pre></div></li></ul><h2 id="label" tabindex="-1">LABEL <a class="header-anchor" href="#label" aria-label="Permalink to &quot;LABEL&quot;">​</a></h2><p>可以给镜像增加一些标签</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">LABEL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">com.example.label-with-value=&quot;foo&quot;</span></span>
<span class="line"><span style="color:#B392F0;">LABEL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version=&quot;1.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 换行</span></span>
<span class="line"><span style="color:#B392F0;">LABEL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">description=&quot;This text illustrates </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#9ECBFF;">that label-values can span multiple lines.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 一行添加多个 key=value</span></span>
<span class="line"><span style="color:#B392F0;">LABEL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">multi.label1=&quot;value1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">multi.label2=&quot;value2&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">other=&quot;value3&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">LABEL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">com.example.label-with-value=&quot;foo&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">LABEL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version=&quot;1.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 换行</span></span>
<span class="line"><span style="color:#6F42C1;">LABEL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">description=&quot;This text illustrates </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#032F62;">that label-values can span multiple lines.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 一行添加多个 key=value</span></span>
<span class="line"><span style="color:#6F42C1;">LABEL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">multi.label1=&quot;value1&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">multi.label2=&quot;value2&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">other=&quot;value3&quot;</span></span></code></pre></div><p>通过 docker inspect 查看添加的元数据</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">inspect</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--format=</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myimage</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">inspect</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--format=</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myimage</span></span></code></pre></div><h2 id="workdir" tabindex="-1">WORKDIR <a class="header-anchor" href="#workdir" aria-label="Permalink to &quot;WORKDIR&quot;">​</a></h2><ul><li>切换到镜像中的指定路径，设置工作目录</li><li>在 WORKDIR 中需要使用绝对路径，如果镜像中对应的路径不存在，会自动创建此目录</li><li>一般用 WORKDIR 来替代 切换目录进行操作的指令</li></ul><p>将宿主机的 test.txt 文件复制到 镜像的 /tmp/test.txt:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/tmp</span></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test.txt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/tmp</span></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test.txt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>如果提供了相对路径，它将相对于前一个 WORKDIR 指令的路径:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/a</span></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">b</span></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">c</span></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pwd</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/a</span></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">b</span></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">c</span></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pwd</span></span></code></pre></div><h2 id="run" tabindex="-1">RUN <a class="header-anchor" href="#run" aria-label="Permalink to &quot;RUN&quot;">​</a></h2><p>运行命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/bin/bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;source $HOME/.bashrc; echo $HOME&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># shell模式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;executable&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;param1&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;param2&quot;]</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># exec 模式</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/bin/bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;source $HOME/.bashrc; echo $HOME&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># shell模式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;executable&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;param1&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;param2&quot;]</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># exec 模式</span></span></code></pre></div><h2 id="cmd" tabindex="-1">CMD <a class="header-anchor" href="#cmd" aria-label="Permalink to &quot;CMD&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#  exec 形式，推荐</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;executable&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;param1&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;param2&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;可执行命令&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;参数1&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;参数2&quot;...]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 作为ENTRYPOINT的默认参数</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;param1&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;param2&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># shell</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">命令</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">param1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">param2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#  exec 形式，推荐</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;executable&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;param1&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;param2&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;可执行命令&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;参数1&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;参数2&quot;...]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 作为ENTRYPOINT的默认参数</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;param1&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;param2&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># shell</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> </span><span style="color:#032F62;">命令</span><span style="color:#24292E;"> </span><span style="color:#032F62;">param1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">param2</span></span></code></pre></div><ul><li>一个 Dockerfile 只有一个 CMD 指令，若有多个，只有最后一个 CMD 指令生效</li><li>CMD 主要目的：为容器提供默认执行的命令，这个默认值可以包含可执行文件</li><li>也可以不包含可执行文件，意味着必须指定 ENTRYPOINT 指令（第二种写法）</li></ul><p><strong>RUN 和 CMD区别：</strong></p><ul><li>RUN 可以在构建阶段运行很多个命令，而且每运行一个命令都会单独提交结果</li><li>CMD 在构建阶段不执行任何操作，而是指定镜像默认执行的命令</li></ul><h2 id="expose" tabindex="-1">EXPOSE <a class="header-anchor" href="#expose" aria-label="Permalink to &quot;EXPOSE&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">EXPOSE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">端口号</span></span>
<span class="line"><span style="color:#B392F0;">EXPOSE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">端口号/协议</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">EXPOSE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">端口号</span></span>
<span class="line"><span style="color:#6F42C1;">EXPOSE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">端口号/协议</span></span></code></pre></div><h2 id="env" tabindex="-1">ENV <a class="header-anchor" href="#env" aria-label="Permalink to &quot;ENV&quot;">​</a></h2><p>定义环境变量</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">ke</span><span style="color:#E1E4E8;">y</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">=</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">valu</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 但只能设置一个环境变量</span></span>
<span class="line"><span style="color:#B392F0;">ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MY_VAR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> \${MY_VAR}</span></span>
<span class="line"><span style="color:#6A737D;"># 或者</span></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> $MY_VAR</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">ke</span><span style="color:#24292E;">y</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">=</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">valu</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 但只能设置一个环境变量</span></span>
<span class="line"><span style="color:#6F42C1;">ENV</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MY_VAR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> \${MY_VAR}</span></span>
<span class="line"><span style="color:#6A737D;"># 或者</span></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> $MY_VAR</span></span></code></pre></div><p>通过 ENV 指令可以声明环境变量，可以在以下指令中使用环境变量</p><ul><li>ADD</li><li>COPY</li><li>ENV</li><li>EXPOSE</li><li>FROM</li><li>LABEL</li><li>STOPSIGNAL</li><li>USER</li><li>VOLUME</li><li>WORKDIR</li><li>ONBUILD</li></ul><p><strong>ARG 和 ENV 的区别</strong></p><ul><li>ARG 定义的变量只会存在于镜像构建过程，启动容器后并不保留这些变量</li><li>ENV 定义的变量在启动容器后仍然保留</li></ul><h2 id="volume" tabindex="-1">VOLUME <a class="header-anchor" href="#volume" aria-label="Permalink to &quot;VOLUME&quot;">​</a></h2><p>运行容器时可以从本地主机或其他容器挂载数据卷，一般用来存放数据库和需要保持的数据等</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">VOLUME</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;/data&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">VOLUME</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;/data&quot;</span><span style="color:#24292E;">]</span></span></code></pre></div><p>这里的 /data 目录就会在运行时自动挂载为匿名卷，任何向 /data 中写入的信息都不会记录进容器存储层，从而保证了容器存储层的无状态化</p><h2 id="copy、add" tabindex="-1">COPY、ADD <a class="header-anchor" href="#copy、add" aria-label="Permalink to &quot;COPY、ADD&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node:18-alpine3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ADD</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./aaa.tar.gz</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/aaa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./aaa.tar.gz</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/bbb</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node:18-alpine3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">ADD</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./aaa.tar.gz</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/aaa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./aaa.tar.gz</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/bbb</span></span></code></pre></div><p>ADD、COPY 都可以用于把目录下的文件复制到容器内的目录下。但是 ADD 还可以解压 tar.gz 文件。</p><h2 id="打包镜像" tabindex="-1">打包镜像 <a class="header-anchor" href="#打包镜像" aria-label="Permalink to &quot;打包镜像&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aaa:ccc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aaa:ccc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>aaa 是镜像名，ccc 是镜像的标签</p><h2 id="常见示例" tabindex="-1">常见示例 <a class="header-anchor" href="#常见示例" aria-label="Permalink to &quot;常见示例&quot;">​</a></h2><h3 id="node静态服务镜像" tabindex="-1">Node静态服务镜像 <a class="header-anchor" href="#node静态服务镜像" aria-label="Permalink to &quot;Node静态服务镜像&quot;">​</a></h3><pre><code>dir
  - dockerfile
  - index.html
</code></pre><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://registry.npmmirror.com/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-g</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http-server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">EXPOSE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;http-server&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-p&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;8080&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://registry.npmmirror.com/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-g</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http-server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">EXPOSE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8080</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;http-server&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-p&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;8080&quot;]</span></span></code></pre></div><p>将<code>index.html</code>拷贝到容器的<code>/app</code>目录下，并且在工作目录下执行<code>http-server</code>命令</p><h3 id="nest镜像" tabindex="-1">Nest镜像 <a class="header-anchor" href="#nest镜像" aria-label="Permalink to &quot;Nest镜像&quot;">​</a></h3><ul><li>新建个项目：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nest</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dockerfile-test</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nest</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dockerfile-test</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span></span></code></pre></div><ul><li>编写 .dockerignore：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">.md</span></span>
<span class="line"><span style="color:#B392F0;">node_modules/</span></span>
<span class="line"><span style="color:#B392F0;">.git/</span></span>
<span class="line"><span style="color:#B392F0;">.DS_Store</span></span>
<span class="line"><span style="color:#B392F0;">.vscode/</span></span>
<span class="line"><span style="color:#B392F0;">.dockerignore</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">.md</span></span>
<span class="line"><span style="color:#6F42C1;">node_modules/</span></span>
<span class="line"><span style="color:#6F42C1;">.git/</span></span>
<span class="line"><span style="color:#6F42C1;">.DS_Store</span></span>
<span class="line"><span style="color:#6F42C1;">.vscode/</span></span>
<span class="line"><span style="color:#6F42C1;">.dockerignore</span></span></code></pre></div><ul><li>编写 Dockerfile：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node:18.0-alpine3.14</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build-stage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">package.json</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># production stage</span></span>
<span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node:18.0-alpine3.14</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">production-stage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--from=build-stage</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app/dist</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app</span></span>
<span class="line"><span style="color:#B392F0;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--from=build-stage</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app/package.json</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app/package.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">WORKDIR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--production</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">EXPOSE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;/app/main.js&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node:18.0-alpine3.14</span><span style="color:#24292E;"> </span><span style="color:#032F62;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build-stage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">package.json</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># production stage</span></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node:18.0-alpine3.14</span><span style="color:#24292E;"> </span><span style="color:#032F62;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">production-stage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--from=build-stage</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app/dist</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app</span></span>
<span class="line"><span style="color:#6F42C1;">COPY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--from=build-stage</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app/package.json</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app/package.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">WORKDIR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--production</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">EXPOSE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;node&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;/app/main.js&quot;]</span></span></code></pre></div><ul><li>执行 docker build, 镜像名为 nest、标签为 first，构建上下文是当前目录</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nest:first</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nest:first</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>如果你 build 的时候报这个错误, 那需要加一行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ln</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/sbin/runc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/runc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ln</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/sbin/runc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/runc</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://cloud.tencent.com/developer/user/7440717/articles" target="_blank" rel="noreferrer">小菠萝测试笔记</a></p><p>感谢该作者，本文基本复制的，做了汇总</p>`,66),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const C=s(p,[["render",t]]);export{u as __pageData,C as default};
