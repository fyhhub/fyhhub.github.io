import{_ as a}from"./plugin-vueexport-helper.2444895f.js";import{o as t,c as p,a as n,b as e,d as o,e as c,r as i}from"./app.78aaa0ee.js";const l={},u=c(`<h1 id="vue-loader-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#vue-loader-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> vue-loader \u6E90\u7801\u89E3\u6790</h1><h2 id="vueplugin" tabindex="-1"><a class="header-anchor" href="#vueplugin" aria-hidden="true">#</a> VuePlugin</h2><ol><li>\u901A\u8FC7<code>compilation.hooks.normalModuleLoader</code>\u94A9\u5B50\u83B7\u53D6\u5230<code>loaderContext</code>\uFF0C\u5E76\u5728<code>loaderContext</code>\u8BBE\u7F6E<code>vue-loder</code>\u4E3A true</li><li>\u83B7\u53D6\u5DF2\u5B58\u5728\u7684<code>module.rules</code>\u89C4\u5219</li><li>\u627E\u5230\u80FD\u5904\u7406<code>.vue</code>\u6587\u4EF6\u7684<code>rule</code>, \u4EE5\u53CA<code>\u5176\u4ED6rule</code></li><li>\u6CE8\u5165<code>pitcher loader</code>\u5230<code>compiler.options.module.rules</code>\u4E2D</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>compiler<span class="token punctuation">.</span>options<span class="token punctuation">.</span>module<span class="token punctuation">.</span>rules <span class="token operator">=</span> <span class="token punctuation">[</span>pitcher<span class="token punctuation">,</span> <span class="token operator">...</span>clonedRules<span class="token punctuation">,</span> <span class="token operator">...</span>rules<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vue-loader" tabindex="-1"><a class="header-anchor" href="#vue-loader" aria-hidden="true">#</a> vue-loader</h2><ol><li>\u8C03\u7528<code>@vue/component-compiler-utils</code>\u4E2D\u7684<code>parse</code>\u65B9\u6CD5\u89E3\u6790<code>vue</code>\u6587\u4EF6, \u5E76\u83B7\u53D6<code>descriptor</code><ul><li>descriptor \u5305\u542B script, style, template \u7684\u5185\u5BB9\u548C\u4E0A\u9762\u7684\u5C5E\u6027\u7B49\u4FE1\u606F</li></ul></li><li>\u5982\u679C\u5B58\u5728<code>template</code>, \u751F\u6210\u4E00\u6BB5\u4EE3\u7801\u5982\u4E0B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./App.vue?vue&amp;type=template&amp;id=adv23123aad&amp;scoped=true&amp;xxx&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5982\u679C\u5B58\u5728<code>script</code>, \u751F\u6210\u4E00\u6BB5\u4EE3\u7801\u5982\u4E0B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> script <span class="token keyword">from</span> <span class="token string">&quot;./App.vue?vue&amp;type=script&amp;lang=js&amp;\u5176\u4ED6\u53C2\u6570=xxx&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&quot;./App.vue?vue&amp;type=script&amp;lang=js&amp;\u5176\u4ED6\u53C2\u6570=xxx&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u5982\u679C\u5B58\u5728<code>style</code>, \u751F\u6210\u4E00\u6BB5\u4EE3\u7801\u5982\u4E0B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> style0 <span class="token keyword">from</span> <span class="token string">&quot;./app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;scoped=true&amp;lang=scss&amp;&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.\u6700\u540E\u4F1A\u62FC\u63A5\u4E00\u4E9B\u5176\u4ED6\u4EE3\u7801\uFF0C\u751F\u6210\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> script <span class="token keyword">from</span> <span class="token string">&quot;./app.vue?vue&amp;type=script&amp;lang=ts&amp;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&quot;./app.vue?vue&amp;type=script&amp;lang=ts&amp;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> style0 <span class="token keyword">from</span> <span class="token string">&quot;./app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;scoped=true&amp;lang=scss&amp;&quot;</span><span class="token punctuation">;</span>

<span class="token comment">/* normalize component */</span>
<span class="token keyword">import</span> normalizer <span class="token keyword">from</span> <span class="token string">&quot;!../node_modules/vue-loader/lib/runtime/componentNormalizer.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> component <span class="token operator">=</span> <span class="token function">normalizer</span><span class="token punctuation">(</span>
  script<span class="token punctuation">,</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* hot reload */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> api <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;/Users/ocj1/doc/h5/study/webpack/webpack-vue-demo/node_modules/vue-hot-reload-api/dist/index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  api<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>compatible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>api<span class="token punctuation">.</span><span class="token function">isRecorded</span><span class="token punctuation">(</span><span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      api<span class="token punctuation">.</span><span class="token function">createRecord</span><span class="token punctuation">(</span><span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">,</span> component<span class="token punctuation">.</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      api<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">,</span> component<span class="token punctuation">.</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>
      <span class="token string">&quot;./app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp;&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        api<span class="token punctuation">.</span><span class="token function">rerender</span><span class="token punctuation">(</span><span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">render</span><span class="token operator">:</span> render<span class="token punctuation">,</span>
          <span class="token literal-property property">staticRenderFns</span><span class="token operator">:</span> staticRenderFns<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
component<span class="token punctuation">.</span>options<span class="token punctuation">.</span>__file <span class="token operator">=</span> <span class="token string">&quot;src/app.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> component<span class="token punctuation">.</span>exports<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="componentnormalizer" tabindex="-1"><a class="header-anchor" href="#componentnormalizer" aria-hidden="true">#</a> componentNormalizer</h2><p>\u5728\u4E0A\u9762\u751F\u6210\u7684\u4EE3\u7801\u4E2D\u6709\u8FD9\u6837\u4E00\u6BB5\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u89C4\u8303\u7EC4\u4EF6\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* normalize component */</span>
<span class="token keyword">import</span> normalizer <span class="token keyword">from</span> <span class="token string">&quot;!../node_modules/vue-loader/lib/runtime/componentNormalizer.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> component <span class="token operator">=</span> <span class="token function">normalizer</span><span class="token punctuation">(</span>
  script<span class="token punctuation">,</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token string">&quot;5ef48958&quot;</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5B9E\u73B0\u5982\u4E0B</strong></p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u6E90\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* globals __VUE_SSR_CONTEXT__ */</span>

<span class="token comment">// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).</span>
<span class="token comment">// This module is a runtime utility for cleaner component module output and will</span>
<span class="token comment">// be included in the final webpack user bundle.</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">normalizeComponent</span><span class="token punctuation">(</span>
  scriptExports<span class="token punctuation">,</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
  functionalTemplate<span class="token punctuation">,</span>
  injectStyles<span class="token punctuation">,</span>
  scopeId<span class="token punctuation">,</span>
  moduleIdentifier <span class="token comment">/* server only */</span><span class="token punctuation">,</span>
  shadowMode <span class="token comment">/* vue-cli only */</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Vue.extend constructor export interop</span>
  <span class="token keyword">var</span> options <span class="token operator">=</span>
    <span class="token keyword">typeof</span> scriptExports <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> scriptExports<span class="token punctuation">.</span>options <span class="token operator">:</span> scriptExports<span class="token punctuation">;</span>

  <span class="token comment">// render functions</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>render <span class="token operator">=</span> render<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> staticRenderFns<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>_compiled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// functional template</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>functionalTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>functional <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// scopedId</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopeId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>_scopeId <span class="token operator">=</span> <span class="token string">&quot;data-v-&quot;</span> <span class="token operator">+</span> scopeId<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> hook<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>moduleIdentifier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// server build</span>
    <span class="token function-variable function">hook</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2.3 injection</span>
      context <span class="token operator">=</span>
        context <span class="token operator">||</span> <span class="token comment">// cached call</span>
        <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>ssrContext<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token comment">// stateful</span>
        <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>ssrContext<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// functional</span>
      <span class="token comment">// 2.2 with runInNewContext: true</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> __VUE_SSR_CONTEXT__ <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context <span class="token operator">=</span> __VUE_SSR_CONTEXT__<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// inject component styles</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>injectStyles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">injectStyles</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// register component module identifier for async chunk inferrence</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>context <span class="token operator">&amp;&amp;</span> context<span class="token punctuation">.</span>_registeredComponents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span>_registeredComponents<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>moduleIdentifier<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// used by ssr in case component is cached and beforeCreate</span>
    <span class="token comment">// never gets called</span>
    options<span class="token punctuation">.</span>_ssrRegister <span class="token operator">=</span> hook<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>injectStyles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hook <span class="token operator">=</span> shadowMode
      <span class="token operator">?</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">injectStyles</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
            <span class="token keyword">this</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>options<span class="token punctuation">.</span>functional <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$root<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>shadowRoot
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> injectStyles<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>hook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>functional<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// for template-only hot-reload because in that case the render fn doesn&#39;t</span>
      <span class="token comment">// go through the normalizer</span>
      options<span class="token punctuation">.</span>_injectStyles <span class="token operator">=</span> hook<span class="token punctuation">;</span>
      <span class="token comment">// register for functional component in vue file</span>
      <span class="token keyword">var</span> originalRender <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
      options<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">renderWithStyleInjection</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">hook</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">originalRender</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// inject component registration as beforeCreate hook</span>
      <span class="token keyword">var</span> existing <span class="token operator">=</span> options<span class="token punctuation">.</span>beforeCreate<span class="token punctuation">;</span>
      options<span class="token punctuation">.</span>beforeCreate <span class="token operator">=</span> existing <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>existing<span class="token punctuation">,</span> hook<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span>hook<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">exports</span><span class="token operator">:</span> scriptExports<span class="token punctuation">,</span>
    <span class="token literal-property property">options</span><span class="token operator">:</span> options<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u5176\u5B9E\u6700\u7EC8\u53EA\u662F\u628A<code>template</code>, <code>script</code>, <code>style</code>\u8FDB\u884C\u89C4\u8303\u5316\uFF0C\u5E76\u6700\u7EC8\u8FD4\u56DE\u6211\u4EEC\u80FD\u4F7F\u7528\u7684\u7EC4\u4EF6\uFF0C\u7ECF\u5386\u4E86\u5982\u4E0B\u8FC7\u7A0B</p><ol><li>\u8BBE\u7F6E\u7EC4\u4EF6\u7684\u6E32\u67D3\u51FD\u6570</li><li>\u8BBE\u7F6E\u7EC4\u4EF6<code>functional</code></li><li>\u8BBE\u7F6E\u7EC4\u4EF6<code>_scopeId</code>, \u540E\u7EED\u4F1A\u4E3A\u6BCF\u4E2A\u6A21\u677F\u8282\u70B9\uFF0C\u6DFB\u52A0<code>data-v-_scopeId</code></li><li>\u6700\u540E\u5BFC\u51FA\u7EC4\u4EF6\u5BF9\u8C61</li></ol><h2 id="pitcher" tabindex="-1"><a class="header-anchor" href="#pitcher" aria-hidden="true">#</a> pitcher</h2><p>\u524D\u9762\u63D0\u5230\u8FC7\uFF0C<code>pitcher loader</code>\u88AB\u6CE8\u5165\u5230\u6700\u524D\u9762\uFF0C\u5E76\u4E14<code>pitcher</code>\u4F1A\u6BD4 loader \u5148\u6267\u884C</p><p>\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u6709\u8FD9\u6837\u4E00\u884C\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  render<span class="token punctuation">,</span>
  staticRenderFns<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./App.vue?vue&amp;type=template&amp;id=adv23123aad&amp;scoped=true&amp;xxx&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ECF\u8FC7<code>pitcher</code>\u5904\u7406\u8FC7\u540E\u4F1A\u662F\u4EC0\u4E48\u6837\u5462</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&quot;-!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp;&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E00\u6B65\u53C8\u662F\u76F4\u63A5\u5BFC\u51FA<code>app.vue</code>\uFF0C\u4F1A\u7EE7\u7EED\u53BB\u52A0\u8F7D<code>app.vue</code>\uFF0C\u4F46\u662F\u8981\u6CE8\u610F\u8FD9\u91CC\u662F<code>pitcher</code>, \u4E5F\u5C31\u662F\u8BF4\u5B83\u4E0D\u4F1A\u7ECF\u8FC7\u5176\u4ED6\u4EFB\u4F55 loader\uFF0C\u6240\u4EE5\u9700\u8981\u62FC\u63A5\u5728\u524D\u9762\u6307\u5B9A\u5B83\u9700\u8981\u54EA\u4E9B loader \u5904\u7406</p><ol><li>\u2026/node_modules/vue-loader/lib/index.js</li><li>\u2026/node_modules/vue-loader/lib/loaders/templateLoader.js</li></ol><p>\u4F1A\u5148\u540E\u7ECF\u8FC7\u8FD9\u4E9B loader \u5904\u7406\uFF0C\u8FD9\u91CC\u53C8\u8981\u8BF4\u4E00\u4E0B webpack loader \u7684\u76F8\u5173\u77E5\u8BC6\u70B9<code>inline loader</code></p><p>\u53EF\u4EE5\u5728 import \u8BED\u53E5\u6216\u4EFB\u4F55 \u4E0E &quot;import&quot; \u65B9\u6CD5\u540C\u7B49\u7684\u5F15\u7528\u65B9\u5F0F \u4E2D\u6307\u5B9A loader\u3002\u4F7F\u7528 ! \u5C06\u8D44\u6E90\u4E2D\u7684 loader \u5206\u5F00\u3002\u6BCF\u4E2A\u90E8\u5206\u90FD\u4F1A\u76F8\u5BF9\u4E8E\u5F53\u524D\u76EE\u5F55\u89E3\u6790\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Styles <span class="token keyword">from</span> <span class="token string">&quot;style-loader!css-loader?modules!./styles.css&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E3A\u5185\u8054 import \u8BED\u53E5\u6DFB\u52A0\u524D\u7F00\uFF0C\u53EF\u4EE5\u8986\u76D6 \u914D\u7F6E \u4E2D\u7684\u6240\u6709 loader, preLoader \u548C postLoader\uFF1A</p><ul><li>\u4F7F\u7528 ! \u524D\u7F00\uFF0C\u5C06\u7981\u7528\u6240\u6709\u5DF2\u914D\u7F6E\u7684 normal loader(\u666E\u901A loader)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Styles <span class="token keyword">from</span> <span class="token string">&quot;!style-loader!css-loader?modules!./styles.css&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528 !! \u524D\u7F00\uFF0C\u5C06\u7981\u7528\u6240\u6709\u5DF2\u914D\u7F6E\u7684 loader\uFF08preLoader, loader, postLoader\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Styles <span class="token keyword">from</span> <span class="token string">&quot;!!style-loader!css-loader?modules!./styles.css&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528 -! \u524D\u7F00\uFF0C\u5C06\u7981\u7528\u6240\u6709\u5DF2\u914D\u7F6E\u7684 preLoader \u548C loader\uFF0C\u4F46\u662F\u4E0D\u7981\u7528 postLoaders</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Styles <span class="token keyword">from</span> <span class="token string">&quot;-!style-loader!css-loader?modules!./styles.css&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9009\u9879\u53EF\u4EE5\u4F20\u9012\u67E5\u8BE2\u53C2\u6570\uFF0C\u4F8B\u5982 ?key=value&amp;foo=bar\uFF0C\u6216\u8005\u4E00\u4E2A JSON \u5BF9\u8C61\uFF0C\u4F8B\u5982 ?{&quot;key&quot;:&quot;value&quot;,&quot;foo&quot;:&quot;bar&quot;}\u3002</p><p><strong>\u8FD9\u6B21\u6211\u4EEC\u770B\u4E00\u4E0B vue-loader \u4F1A\u628A\u6211\u4EEC\u7684 app.vue \u8F6C\u6210\u4EC0\u4E48\u6837\u5B50\u5462</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// node_modules/vue-loader/lib/index.js</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>incomingQuery<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">selectBlock</span><span class="token punctuation">(</span>
    descriptor<span class="token punctuation">,</span>
    loaderContext<span class="token punctuation">,</span>
    incomingQuery<span class="token punctuation">,</span>
    <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>appendExtension
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u4E00\u6B21\u6211\u4EEC\u7684 loader \u662F\u5E26\u6709 type=template \u53C2\u6570\u7684\uFF0C\u6240\u4EE5\u8FDB\u4E86 vue-loader \u7684 selectBlock \u65B9\u6CD5</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u6E90\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// node_modules/vue-loader/lib/select.js</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">selectBlock</span><span class="token punctuation">(</span>
  <span class="token parameter">descriptor<span class="token punctuation">,</span>
  loaderContext<span class="token punctuation">,</span>
  query<span class="token punctuation">,</span>
  appendExtension</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// template</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">template</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>appendExtension<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      loaderContext<span class="token punctuation">.</span>resourcePath <span class="token operator">+=</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>template<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    loaderContext<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span>
      <span class="token keyword">null</span><span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>template<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>template<span class="token punctuation">.</span>map
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// script</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">script</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>appendExtension<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      loaderContext<span class="token punctuation">.</span>resourcePath <span class="token operator">+=</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>script<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    loaderContext<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span>
      <span class="token keyword">null</span><span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>script<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>script<span class="token punctuation">.</span>map
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// styles</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">style</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">&amp;&amp;</span> query<span class="token punctuation">.</span>index <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>query<span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>appendExtension<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      loaderContext<span class="token punctuation">.</span>resourcePath <span class="token operator">+=</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>style<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    loaderContext<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> style<span class="token punctuation">.</span>content<span class="token punctuation">,</span> style<span class="token punctuation">.</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// custom</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&quot;custom&quot;</span> <span class="token operator">&amp;&amp;</span> query<span class="token punctuation">.</span>index <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> block <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>customBlocks<span class="token punctuation">[</span>query<span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    loaderContext<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span>content<span class="token punctuation">,</span> block<span class="token punctuation">.</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u7ECF\u8FC7\u4E0A\u9762\u7684\u5904\u7406\uFF0C\u6700\u540E loader \u4F1A\u8FD4\u56DE</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="templateloader" tabindex="-1"><a class="header-anchor" href="#templateloader" aria-hidden="true">#</a> templateLoader</h2><p>\u7ECF\u8FC7<code>vue-loader</code>\u518D\u6B21\u5904\u7406\u540E\uFF0C\u5C31\u9700\u8981\u4EA4\u7ED9<code>templateLoader</code>\u8FDB\u884C\u7F16\u8BD1\u4E86</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u6E90\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loaderContext <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceQuery<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// although this is not the main vue-loader, we can get access to the same</span>
  <span class="token comment">// vue-loader options because we&#39;ve set an ident in the plugin and used that</span>
  <span class="token comment">// ident to create the request for this loader in the pitcher.</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> loaderUtils<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span>loaderContext<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> query<span class="token punctuation">;</span>
  <span class="token keyword">const</span> isServer <span class="token operator">=</span> loaderContext<span class="token punctuation">.</span>target <span class="token operator">===</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isProduction <span class="token operator">=</span>
    options<span class="token punctuation">.</span>productionMode <span class="token operator">||</span>
    loaderContext<span class="token punctuation">.</span>minimize <span class="token operator">||</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isFunctional <span class="token operator">=</span> query<span class="token punctuation">.</span>functional<span class="token punctuation">;</span>

  <span class="token comment">// allow using custom compiler via options</span>
  <span class="token keyword">const</span> compiler <span class="token operator">=</span> options<span class="token punctuation">.</span>compiler <span class="token operator">||</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;vue-template-compiler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> compilerOptions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">outputSourceRange</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    options<span class="token punctuation">.</span>compilerOptions<span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">scopeId</span><span class="token operator">:</span> query<span class="token punctuation">.</span>scoped <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">comments</span><span class="token operator">:</span> query<span class="token punctuation">.</span>comments<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// for vue-component-compiler</span>
  <span class="token keyword">const</span> finalOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
    source<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourcePath<span class="token punctuation">,</span>
    compiler<span class="token punctuation">,</span>
    compilerOptions<span class="token punctuation">,</span>
    <span class="token comment">// allow customizing behavior of vue-template-es2015-compiler</span>
    <span class="token literal-property property">transpileOptions</span><span class="token operator">:</span> options<span class="token punctuation">.</span>transpileOptions<span class="token punctuation">,</span>
    <span class="token literal-property property">transformAssetUrls</span><span class="token operator">:</span> options<span class="token punctuation">.</span>transformAssetUrls <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    isProduction<span class="token punctuation">,</span>
    isFunctional<span class="token punctuation">,</span>
    <span class="token literal-property property">optimizeSSR</span><span class="token operator">:</span> isServer <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>optimizeSSR <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">prettify</span><span class="token operator">:</span> options<span class="token punctuation">.</span>prettify<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> compiled <span class="token operator">=</span> <span class="token function">compileTemplate</span><span class="token punctuation">(</span>finalOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// tips</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>tips <span class="token operator">&amp;&amp;</span> compiled<span class="token punctuation">.</span>tips<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    compiled<span class="token punctuation">.</span>tips<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tip</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      loaderContext<span class="token punctuation">.</span><span class="token function">emitWarning</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> tip <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">?</span> tip<span class="token punctuation">.</span>msg <span class="token operator">:</span> tip<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// errors</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>errors <span class="token operator">&amp;&amp;</span> compiled<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2.6 compiler outputs errors as objects with range</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      compiler<span class="token punctuation">.</span>generateCodeFrame <span class="token operator">&amp;&amp;</span>
      finalOptions<span class="token punctuation">.</span>compilerOptions<span class="token punctuation">.</span>outputSourceRange
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// TODO account for line offset in case template isn&#39;t placed at top</span>
      <span class="token comment">// of the file</span>
      loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n\\n  Errors compiling template:\\n\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          compiled<span class="token punctuation">.</span>errors
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> msg<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> frame <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">generateCodeFrame</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">pad</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">+</span>
          <span class="token string">&quot;\\n&quot;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n  Error compiling template:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">pad</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>source<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          compiled<span class="token punctuation">.</span>errors<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">  - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
          <span class="token string">&quot;\\n&quot;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> compiled<span class="token punctuation">;</span>

  <span class="token comment">// finish with ESM exports</span>
  <span class="token keyword">return</span> code <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nexport { render, staticRenderFns }</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u6700\u540E\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> _h <span class="token operator">=</span> _vm<span class="token punctuation">.</span>$createElement<span class="token punctuation">;</span>
  <span class="token keyword">var</span> _c <span class="token operator">=</span> _vm<span class="token punctuation">.</span>_self<span class="token punctuation">.</span>_c <span class="token operator">||</span> _h<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">staticClass</span><span class="token operator">:</span> <span class="token string">&quot;app-container&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>_vm<span class="token punctuation">.</span><span class="token function">_v</span><span class="token punctuation">(</span>_vm<span class="token punctuation">.</span><span class="token function">_s</span><span class="token punctuation">(</span>_vm<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> staticRenderFns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
render<span class="token punctuation">.</span>_withStripped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> staticRenderFns <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,51),r={href:"https://blog.csdn.net/vv_bug/article/details/107722103",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const s=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",r,[e("\u624B\u628A\u624B\u5E26\u4F60\u64B8\u4E00\u904D vue-loader \u6E90\u7801"),o(s)])])])}const y=a(l,[["render",d],["__file","vue-loader\u6E90\u7801\u89E3\u6790.html.vue"]]);export{y as default};
