import{_ as n}from"./plugin-vueexport-helper.2444895f.js";import{o as s,c as a,e as t}from"./app.50c83b03.js";const e={},p=t(`<h1 id="_3-\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_3-\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 3. \u5F02\u5E38\u5904\u7406</h1><h2 id="panic" tabindex="-1"><a class="header-anchor" href="#panic" aria-hidden="true">#</a> panic</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;crash and burn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Rust \u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86 panic! \u5B8F\uFF0C\u5F53\u8C03\u7528\u6267\u884C\u8BE5\u5B8F\u65F6\uFF0C\u7A0B\u5E8F\u4F1A\u6253\u5370\u51FA\u4E00\u4E2A\u9519\u8BEF\u4FE1\u606F\uFF0C\u5C55\u5F00\u62A5\u9519\u70B9\u5F80\u524D\u7684\u51FD\u6570\u8C03\u7528\u5806\u6808\uFF0C\u6700\u540E\u9000\u51FA\u7A0B\u5E8F\u3002</strong></p><h2 id="match" tabindex="-1"><a class="header-anchor" href="#match" aria-hidden="true">#</a> match</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">match</span> f <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;Problem opening the file: {:?}&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>match</code>\u5BF9Err\u7684\u60C5\u51B5\u5904\u7406</p><h2 id="unwrap" tabindex="-1"><a class="header-anchor" href="#unwrap" aria-hidden="true">#</a> unwrap</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>net<span class="token punctuation">::</span></span><span class="token class-name">IpAddr</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> home<span class="token punctuation">:</span> <span class="token class-name">IpAddr</span> <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u8FD4\u56DE\u4E00\u4E2A <code>Result&lt;IpAddr, E&gt;</code> \u7C7B\u578B\uFF0C\u5982\u679C\u89E3\u6790\u6210\u529F\uFF0C\u5219\u628A <code>Ok(IpAddr)</code> \u4E2D\u7684\u503C\u8D4B\u7ED9 home\uFF0C\u5982\u679C\u5931\u8D25\uFF0C\u5219\u4E0D\u5904\u7406 <code>Err(E)</code>\uFF0C\u800C\u662F\u76F4\u63A5 <code>panic</code>\u3002</p><h2 id="expect" tabindex="-1"><a class="header-anchor" href="#expect" aria-hidden="true">#</a> expect</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to open hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>expect</code> \u76F8\u6BD4 unwrap \u80FD\u63D0\u4F9B\u66F4\u7CBE\u786E\u7684\u9519\u8BEF\u4FE1\u606F</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> ?</h2><h4 id="\u7528\u4E8Eresult" tabindex="-1"><a class="header-anchor" href="#\u7528\u4E8Eresult" aria-hidden="true">#</a> \u7528\u4E8EResult</h4><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>io<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Read</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">read_username_from_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> f <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  f<span class="token punctuation">.</span><span class="token function">read_to_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>read_to_string</code>\u8FD4\u56DE\u7684\u662F<code>Result:Err</code>, \u76F8\u5F53\u4E8E\u76F4\u63A5 return \u4E86Err, \u4E0D\u4F1A\u8FDB\u884C\u540E\u9762\u7684\u4EE3\u7801\u3002</p><h4 id="\u7528\u4E8Eoption" tabindex="-1"><a class="header-anchor" href="#\u7528\u4E8Eoption" aria-hidden="true">#</a> \u7528\u4E8EOption</h4><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">first</span><span class="token punctuation">(</span>arr<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> v <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
   <span class="token class-name">Some</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>arr.get</code> \u8FD4\u56DE\u7684\u662F<code>None</code>\uFF0C \u4E5F\u4F1A\u76F4\u63A5 <code>return None</code></p><p><strong>\u5207\u8BB0\uFF1A? \u64CD\u4F5C\u7B26\u9700\u8981\u4E00\u4E2A\u53D8\u91CF\u6765\u627F\u8F7D\u6B63\u786E\u7684\u503C</strong></p>`,21),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","3.\u5F02\u5E38\u5904\u7406.html.vue"]]);export{d as default};
