import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.3d945e71.js";const E=JSON.parse('{"title":"vue-property-decorator 提示 props 被修改错误","description":"","frontmatter":{},"headers":[],"relativePath":"informal/踩坑记录/vue-property-decorator提示props被修改错误.md","filePath":"informal/踩坑记录/vue-property-decorator提示props被修改错误.md","lastUpdated":1713452072000}'),p={name:"informal/踩坑记录/vue-property-decorator提示props被修改错误.md"},n=o(`<h1 id="vue-property-decorator-提示-props-被修改错误" tabindex="-1">vue-property-decorator 提示 props 被修改错误 <a class="header-anchor" href="#vue-property-decorator-提示-props-被修改错误" aria-label="Permalink to &quot;vue-property-decorator 提示 props 被修改错误&quot;">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>@Prop 使用正确，使用 default 指定的默认值，但是还是报错误</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">renders.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">renders.</span></span></code></pre></div><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>tsconfig.json 增加以下参数</p><p><code>useDefineForClassFields</code> 是 <code>TypeScript 3.7.0</code> 中新增的一个编译选项，启用后的作用是将 class 声明中的字段语义从 [[Set]] 变更到 [[Define]]。</p><p><a href="https://github.com/kaorun343/vue-property-decorator/issues/393" target="_blank" rel="noreferrer">issues 地址</a></p><p><a href="https://zhuanlan.zhihu.com/p/258906525" target="_blank" rel="noreferrer">useDefineForClassFields</a></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;compilerOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;useDefineForClassFields&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;useDefineForClassFields&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,10),r=[n];function t(l,c,i,d,u,h){return e(),a("div",null,r)}const _=s(p,[["render",t]]);export{E as __pageData,_ as default};
