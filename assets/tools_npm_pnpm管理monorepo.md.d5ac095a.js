import{_ as o,o as e,c as p,Q as a}from"./chunks/framework.968e3df4.js";const f=JSON.parse('{"title":"pnpm管理monorepo","description":"","frontmatter":{},"headers":[],"relativePath":"tools/npm/pnpm管理monorepo.md","filePath":"tools/npm/pnpm管理monorepo.md","lastUpdated":1693923568000}'),n={name:"tools/npm/pnpm管理monorepo.md"},t=a(`<h1 id="pnpm管理monorepo" tabindex="-1">pnpm管理monorepo <a class="header-anchor" href="#pnpm管理monorepo" aria-label="Permalink to &quot;pnpm管理monorepo&quot;">​</a></h1><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><pre><code># pnpm-workspace.yaml
packages:
  # 所有在 packages/  子目录下的 package
  - &#39;packages/**&#39;
  # 不包括在 test 文件夹下的 package
  - &#39;!**/test/**&#39;
</code></pre><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><ul><li><code>pnpm i typescript -w</code> 在根目录安装依赖</li><li><code>pnpm i typescript -w -D</code> 在根目录安装开发依赖</li><li><code>pnpm add express --filter @monorepo/http</code> 给某个包单独安装依赖</li><li><code>pnpm add @monorepo/http@* --filter @monorepo/web</code> 项目包互相依赖，@monorepo/web 安装依赖 <code>@monorepo/http</code></li><li><code>pnpm why -r</code> 能够列出这个包的源码位置，被monorepo内部哪些项目引用了</li><li><code>pnpm remove axios --filter @monorepo/http</code> 删除某个包的依赖</li><li><code>pnpm link --global &lt;pkg&gt;</code> 本地link包</li><li><code>pnpm add lodash-test@npm:lodash@1.1</code> 给包取别名</li></ul>`,5),r=[t];function l(c,d,m,i,s,_){return e(),p("div",null,r)}const k=o(n,[["render",l]]);export{f as __pageData,k as default};
