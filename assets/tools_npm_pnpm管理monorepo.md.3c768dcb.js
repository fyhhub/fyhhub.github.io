import{_ as a,o as s,c as p,Q as o}from"./chunks/framework.3d945e71.js";const _=JSON.parse('{"title":"pnpm管理monorepo","description":"","frontmatter":{},"headers":[],"relativePath":"tools/npm/pnpm管理monorepo.md","filePath":"tools/npm/pnpm管理monorepo.md","lastUpdated":1702176089000}'),e={name:"tools/npm/pnpm管理monorepo.md"},n=o(`<h1 id="pnpm管理monorepo" tabindex="-1">pnpm管理monorepo <a class="header-anchor" href="#pnpm管理monorepo" aria-label="Permalink to &quot;pnpm管理monorepo&quot;">​</a></h1><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># pnpm-workspace.yaml</span></span>
<span class="line"><span style="color:#85E89D;">packages</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 所有在 packages/  子目录下的 package</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">&#39;packages/**&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 不包括在 test 文件夹下的 package</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">&#39;!**/test/**&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># pnpm-workspace.yaml</span></span>
<span class="line"><span style="color:#22863A;">packages</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 所有在 packages/  子目录下的 package</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;packages/**&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 不包括在 test 文件夹下的 package</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;!**/test/**&#39;</span></span></code></pre></div><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><ul><li><code>pnpm i typescript -w</code> 在根目录安装依赖</li><li><code>pnpm i typescript -w -D</code> 在根目录安装开发依赖</li><li><code>pnpm add express --filter @monorepo/http</code> 给某个包单独安装依赖</li><li><code>pnpm add @monorepo/http@* --filter @monorepo/web</code> 项目包互相依赖，@monorepo/web 安装依赖 <code>@monorepo/http</code></li><li><code>pnpm why -r</code> 能够列出这个包的源码位置，被monorepo内部哪些项目引用了</li><li><code>pnpm remove axios --filter @monorepo/http</code> 删除某个包的依赖</li><li><code>pnpm link --global &lt;pkg&gt;</code> 本地link包</li><li><code>pnpm add lodash-test@npm:lodash@1.1</code> 给包取别名</li><li><code>pnpm -r run build</code> 可以一次性执行所有包的<code>build</code>命令</li></ul>`,5),l=[n];function t(c,r,i,d,m,h){return s(),p("div",null,l)}const E=a(e,[["render",t]]);export{_ as __pageData,E as default};
