import{_ as e,o as a,c as t,Q as r}from"./chunks/framework.3d945e71.js";const m=JSON.parse('{"title":"Fiber 架构","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-advanced/React/React原理/Fiber架构.md","filePath":"frontend-advanced/React/React原理/Fiber架构.md","lastUpdated":1700985994000}'),i={name:"frontend-advanced/React/React原理/Fiber架构.md"},c=r('<h1 id="fiber-架构" tabindex="-1">Fiber 架构 <a class="header-anchor" href="#fiber-架构" aria-label="Permalink to &quot;Fiber 架构&quot;">​</a></h1><h2 id="fiber-是什么" tabindex="-1">Fiber 是什么？ <a class="header-anchor" href="#fiber-是什么" aria-label="Permalink to &quot;Fiber 是什么？&quot;">​</a></h2><ul><li>作为静态的数据结构来说，每个<code>Fiber</code>节点对应一个<code>React element</code>，保存了该组件的类型（函数组件/类组件/原生组件...）、对应的 DOM 节点等信息。</li><li>作为动态的工作单元来说，每个<code>Fiber</code>节点保存了本次更新中该组件改变的状态、要执行的工作（需要被删除/被插入页面中/被更新...）</li></ul>',3),o=[c];function d(n,_,s,l,b,f){return a(),t("div",null,o)}const p=e(i,[["render",d]]);export{m as __pageData,p as default};
