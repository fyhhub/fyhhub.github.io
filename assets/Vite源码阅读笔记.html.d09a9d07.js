import{_ as n}from"./plugin-vueexport-helper.2444895f.js";import{o as s,c as a,e as p}from"./app.88f885e0.js";const t={},e=p(`<h1 id="vite-\u6E90\u7801\u9605\u8BFB\u7B14\u8BB0" tabindex="-1"><a class="header-anchor" href="#vite-\u6E90\u7801\u9605\u8BFB\u7B14\u8BB0" aria-hidden="true">#</a> Vite \u6E90\u7801\u9605\u8BFB\u7B14\u8BB0</h1><h2 id="\u4E00\u3001-\u6846\u67B6\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001-\u6846\u67B6\u8BBE\u8BA1" aria-hidden="true">#</a> \u4E00\u3001 \u6846\u67B6\u8BBE\u8BA1</h2><h3 id="_1-1\u3001-\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#_1-1\u3001-\u65E5\u5FD7" aria-hidden="true">#</a> 1.1\u3001 \u65E5\u5FD7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    root<span class="token punctuation">,</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> options<span class="token punctuation">.</span>base<span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> options<span class="token punctuation">.</span>mode<span class="token punctuation">,</span>
    <span class="token literal-property property">configFile</span><span class="token operator">:</span> options<span class="token punctuation">.</span>config<span class="token punctuation">,</span>
    <span class="token literal-property property">logLevel</span><span class="token operator">:</span> options<span class="token punctuation">.</span>logLevel<span class="token punctuation">,</span>
    <span class="token literal-property property">clearScreen</span><span class="token operator">:</span> options<span class="token punctuation">.</span>clearScreen<span class="token punctuation">,</span>
    <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token function">cleanOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token keyword">as</span> ServerOptions
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createLogger</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>logLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
    chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">error when starting dev server:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>stack<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u901A\u8FC7 logLevel \u63A7\u5236\u65E5\u5FD7\u5C55\u793A\u54EA\u4E9B\u4FE1\u606F</li><li>\u5728\u5165\u53E3\u5904<code>try catch</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">createLogger</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>logLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
  chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">error when starting dev server:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>stack<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-1\u3001-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-1-1\u3001-\u5B9E\u73B0" aria-hidden="true">#</a> 1.1.1\u3001 \u5B9E\u73B0</h4><details class="custom-container details"><summary>\u65E5\u5FD7\u7CFB\u7EDF\u5B9E\u73B0</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">&#39;chalk&#39;</span>
<span class="token keyword">import</span> readline <span class="token keyword">from</span> <span class="token string">&#39;readline&#39;</span>
<span class="token keyword">import</span> os <span class="token keyword">from</span> <span class="token string">&#39;os&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hostname <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>

<span class="token keyword">export</span> type LogType <span class="token operator">=</span> <span class="token string">&#39;error&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;info&#39;</span>
<span class="token keyword">export</span> type LogLevel <span class="token operator">=</span> LogType <span class="token operator">|</span> <span class="token string">&#39;silent&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Logger</span> <span class="token punctuation">{</span>
  <span class="token function">info</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> LogOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">warn</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> LogOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">warnOnce</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> LogOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> LogOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">clearScreen</span><span class="token punctuation">(</span>type<span class="token operator">:</span> LogType<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token literal-property property">hasWarned</span><span class="token operator">:</span> boolean
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">LogOptions</span> <span class="token punctuation">{</span>
  clear<span class="token operator">?</span><span class="token operator">:</span> boolean
  timestamp<span class="token operator">?</span><span class="token operator">:</span> boolean
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">LogLevels</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>LogLevel<span class="token punctuation">,</span> number<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">silent</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">warn</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">lastType</span><span class="token operator">:</span> LogType <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token keyword">let</span> <span class="token literal-property property">lastMsg</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token keyword">let</span> sameCount <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">function</span> <span class="token function">clearScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> repeatCount <span class="token operator">=</span> process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">2</span>
  <span class="token keyword">const</span> blank <span class="token operator">=</span> repeatCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>repeatCount<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>blank<span class="token punctuation">)</span>
  readline<span class="token punctuation">.</span><span class="token function">cursorTo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  readline<span class="token punctuation">.</span><span class="token function">clearScreenDown</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">LoggerOptions</span> <span class="token punctuation">{</span>
  prefix<span class="token operator">?</span><span class="token operator">:</span> string
  allowClearScreen<span class="token operator">?</span><span class="token operator">:</span> boolean
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createLogger</span><span class="token punctuation">(</span>
  <span class="token literal-property property">level</span><span class="token operator">:</span> LogLevel <span class="token operator">=</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> LoggerOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Logger <span class="token punctuation">{</span>
  <span class="token comment">// \u65E5\u5FD7\u524D\u7F00</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> prefix <span class="token operator">=</span> <span class="token string">&#39;[vite]&#39;</span><span class="token punctuation">,</span> allowClearScreen <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> options

  <span class="token comment">// \u83B7\u53D6logLevel\u5BF9\u5E94\u7684\u6570\u503C</span>
  <span class="token keyword">const</span> thresh <span class="token operator">=</span> LogLevels<span class="token punctuation">[</span>level<span class="token punctuation">]</span>

  <span class="token comment">// \u6E05\u5C4F\u51FD\u6570</span>
  <span class="token keyword">const</span> clear <span class="token operator">=</span>
    allowClearScreen <span class="token operator">&amp;&amp;</span> process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>isTTY <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CI</span>
      <span class="token operator">?</span> <span class="token function-variable function">clearScreen</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">output</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">type</span><span class="token operator">:</span> LogType<span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> LogOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thresh <span class="token operator">&gt;=</span> LogLevels<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> method <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;info&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;log&#39;</span> <span class="token operator">:</span> type
      <span class="token keyword">const</span> <span class="token function-variable function">format</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> tag <span class="token operator">=</span>
            type <span class="token operator">===</span> <span class="token string">&#39;info&#39;</span>
              <span class="token operator">?</span> chalk<span class="token punctuation">.</span>cyan<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span>
              <span class="token operator">:</span> type <span class="token operator">===</span> <span class="token string">&#39;warn&#39;</span>
              <span class="token operator">?</span> chalk<span class="token punctuation">.</span>yellow<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span>
              <span class="token operator">:</span> chalk<span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span>
          <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">dim</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> msg
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> lastType <span class="token operator">&amp;&amp;</span> msg <span class="token operator">===</span> lastMsg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sameCount<span class="token operator">++</span>
        <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        console<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sameCount <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        sameCount <span class="token operator">=</span> <span class="token number">0</span>
        lastMsg <span class="token operator">=</span> msg
        lastType <span class="token operator">=</span> type
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>clear<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8B66\u544A\u4FE1\u606F</span>
  <span class="token keyword">const</span> warnedMessages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// \u8FD4\u56DElogger</span>
  <span class="token keyword">const</span> <span class="token literal-property property">logger</span><span class="token operator">:</span> Logger <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">hasWarned</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token function">info</span><span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">output</span><span class="token punctuation">(</span><span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">warn</span><span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span>hasWarned <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">output</span><span class="token punctuation">(</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">warnOnce</span><span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>warnedMessages<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      logger<span class="token punctuation">.</span>hasWarned <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">output</span><span class="token punctuation">(</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
      warnedMessages<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">error</span><span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span>hasWarned <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">output</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">clearScreen</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>thresh <span class="token operator">&gt;=</span> LogLevels<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> logger
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_1-2\u3001debug" tabindex="-1"><a class="header-anchor" href="#_1-2\u3001debug" aria-hidden="true">#</a> 1.2\u3001debug</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> debug <span class="token keyword">from</span> <span class="token string">&quot;debug&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">DebuggerOptions</span> <span class="token punctuation">{</span>
  onlyWhenFocused<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> filter <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_DEBUG_FILTER</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createDebugger</span><span class="token punctuation">(</span>
  ns<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  options<span class="token operator">:</span> DebuggerOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token operator">:</span> debug<span class="token punctuation">.</span>Debugger<span class="token punctuation">[</span><span class="token string">&quot;log&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> log <span class="token operator">=</span> <span class="token function">debug</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> onlyWhenFocused <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  <span class="token keyword">const</span> focus <span class="token operator">=</span> <span class="token keyword">typeof</span> onlyWhenFocused <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">?</span> onlyWhenFocused <span class="token operator">:</span> ns<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>msg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>filter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>msg<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyWhenFocused <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token constant">DEBUG</span><span class="token operator">?.</span><span class="token function">includes</span><span class="token punctuation">(</span>focus<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> debugResolve <span class="token operator">=</span> <span class="token function">createDebugger</span><span class="token punctuation">(</span><span class="token string">&quot;vite:resolve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">debugResolve</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">timeFrom</span><span class="token punctuation">(</span>resolveStart<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span>rawId<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">dim</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3\u3001\u5982\u4F55\u5B9E\u73B0\u57FA\u4E8E-rollup-\u7684\u63D2\u4EF6\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#_1-3\u3001\u5982\u4F55\u5B9E\u73B0\u57FA\u4E8E-rollup-\u7684\u63D2\u4EF6\u7CFB\u7EDF" aria-hidden="true">#</a> 1.3\u3001\u5982\u4F55\u5B9E\u73B0\u57FA\u4E8E rollup \u7684\u63D2\u4EF6\u7CFB\u7EDF</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  PluginContext <span class="token keyword">as</span> RollupPluginContext<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rollup&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u5E95\u5C42\u57FA\u4E8Erollup</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createPluginContainer</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> plugins<span class="token punctuation">,</span> logger<span class="token punctuation">,</span> root<span class="token punctuation">,</span> build<span class="token operator">:</span> <span class="token punctuation">{</span> rollupOptions <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token operator">:</span> ResolvedConfig<span class="token punctuation">,</span>
  watcher<span class="token operator">?</span><span class="token operator">:</span> FSWatcher
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PluginContainer<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8986\u76D6\u548C\u589E\u52A0\u4E00\u4E9B \u63D2\u4EF6\u4E0A\u4E0B\u6587\u65B9\u6CD5</span>
  <span class="token keyword">class</span> <span class="token class-name">Context</span> <span class="token keyword">implements</span> <span class="token class-name">PluginContext</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u8986\u76D6\u548C\u589E\u52A0\u4E00\u4E9B \u63D2\u4EF6\u4E0A\u4E0B\u6587\u65B9\u6CD5</span>
  <span class="token keyword">class</span> <span class="token class-name">TransformContext</span> <span class="token keyword">extends</span> <span class="token class-name">Context</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u8986\u76D6\u548C\u589E\u52A0\u4E00\u4E9B \u63D2\u4EF6\u65B9\u6CD5</span>
  <span class="token keyword">const</span> container<span class="token operator">:</span> PluginContainer <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E3B\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E3B\u6D41\u7A0B" aria-hidden="true">#</a> \u4E3B\u6D41\u7A0B</h2><h3 id="\u521D\u59CB\u5316\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u9636\u6BB5" aria-hidden="true">#</a> \u521D\u59CB\u5316\u9636\u6BB5</h3><ol><li><code>resolveConfig</code>\u89E3\u6790\u914D\u7F6E\u6587\u4EF6\u4E0E\u9ED8\u8BA4\u914D\u7F6E\u5408\u5E76</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><code>resolveHttpsConfig</code>\u89E3\u6790<code>https</code>\u914D\u7F6E</li><li>\u4F7F\u7528<code>http</code>\u6A21\u5757\u521B\u5EFA Server\uFF0C\u5E76\u521D\u59CB\u5316\u4E00\u4E9B<code>middlewares</code></li><li><code>createWebSocketServer</code>\u521B\u5EFA WebSocket\uFF0C\u4E3B\u8981\u7528\u4E8E hmr</li><li><code>createPluginContainer</code> \u521B\u5EFA\u63D2\u4EF6\u5BB9\u5668\uFF0C\u7528\u4E8E\u8986\u76D6 rollup \u7684\u63D2\u4EF6 hook \u5B9E\u73B0</li><li>\u751F\u6210 server \u914D\u7F6E</li><li>\u76D1\u542C\u6587\u4EF6\u53D8\u5316\uFF0C\u4F8B\u5982\u6587\u4EF6\u5220\u9664\uFF0C\u4FEE\u6539\uFF0C\u589E\u52A0\u7B49</li></ol><h2 id="hook-\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#hook-\u6267\u884C" aria-hidden="true">#</a> Hook \u6267\u884C</h2><h3 id="_1-configureserver" tabindex="-1"><a class="header-anchor" href="#_1-configureserver" aria-hidden="true">#</a> 1. configureServer</h3><p>\u6267\u884C\u63D2\u4EF6\uFF1A</p><ul><li><p>cssPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">configureServer</span><span class="token punctuation">(</span><span class="token parameter">_server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server <span class="token operator">=</span> _server
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>esbuildPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">configureServer</span><span class="token punctuation">(</span><span class="token parameter">_server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server <span class="token operator">=</span> _server
  server<span class="token punctuation">.</span>watcher
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> reloadOnTsconfigChange<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> reloadOnTsconfigChange<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;unlink&#39;</span><span class="token punctuation">,</span> reloadOnTsconfigChange<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>importAnalysisPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">configureServer</span><span class="token punctuation">(</span><span class="token parameter">_server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server <span class="token operator">=</span> _server
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>preAliasPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">configureServer</span><span class="token punctuation">(</span><span class="token parameter">_server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server <span class="token operator">=</span> _server
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>resolvePlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">configureServer</span><span class="token punctuation">(</span><span class="token parameter">_server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server <span class="token operator">=</span> _server
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-buildstart" tabindex="-1"><a class="header-anchor" href="#_2-buildstart" aria-hidden="true">#</a> 2. buildStart</h3><p>\u6267\u884C\u63D2\u4EF6\uFF1A</p><ul><li><p>assetPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  assetCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  emittedHashMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>cssPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Ensure a new cache for every build (i.e. rebuilding in watch mode)</span>
  moduleCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>string<span class="token punctuation">,</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  cssModulesCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> moduleCache<span class="token punctuation">)</span>

  removedPureCssFilesCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>string<span class="token punctuation">,</span> RenderedChunk<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>dataURIPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  resolved <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>htmlInlineScriptProxyPlugin</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  htmlProxyMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u4F18\u5316\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4F9D\u8D56" aria-hidden="true">#</a> \u4F18\u5316\u4F9D\u8D56</h2>`,26),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","Vite\u6E90\u7801\u9605\u8BFB\u7B14\u8BB0.html.vue"]]);export{k as default};
