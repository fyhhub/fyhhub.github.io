import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.3d945e71.js";const d=JSON.parse('{"title":"注入this用来获取js运行时设置的属性","description":"","frontmatter":{},"headers":[],"relativePath":"rust-learn/napi-rs/4.注入this用来获取js运行时设置的属性.md","filePath":"rust-learn/napi-rs/4.注入this用来获取js运行时设置的属性.md","lastUpdated":1712241822000}'),l={name:"rust-learn/napi-rs/4.注入this用来获取js运行时设置的属性.md"},o=p(`<h1 id="注入this用来获取js运行时设置的属性" tabindex="-1">注入this用来获取js运行时设置的属性 <a class="header-anchor" href="#注入this用来获取js运行时设置的属性" aria-label="Permalink to &quot;注入this用来获取js运行时设置的属性&quot;">​</a></h1><h2 id="在类中使用" tabindex="-1">在类中使用 <a class="header-anchor" href="#在类中使用" aria-label="Permalink to &quot;在类中使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { QueryEngine } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./index.js&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">qe</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">QueryEngine</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">qe.refCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(qe.</span><span style="color:#B392F0;">getRefCount</span><span style="color:#E1E4E8;">()) </span><span style="color:#6A737D;">// 3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { QueryEngine } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./index.js&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">qe</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">QueryEngine</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">qe.refCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(qe.</span><span style="color:#6F42C1;">getRefCount</span><span style="color:#24292E;">()) </span><span style="color:#6A737D;">// 3</span></span></code></pre></div><p>在上面的例子中， QueryEngine 并没有声明和初始化 refCount， 但是js动态设置了，rust要怎么做才能获取到这个属性呢？</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#[napi]</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">napi</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">bindgen_prelude</span><span style="color:#F97583;">::*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">napi_derive</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">napi;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">QueryEngine</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">#[napi]</span></span>
<span class="line"><span style="color:#F97583;">impl</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">QueryEngine</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  #[napi(constructor)]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Self</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Self</span><span style="color:#E1E4E8;"> {})</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  #[napi]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_ref_count</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">, this</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">This</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Option</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">i32</span><span style="color:#E1E4E8;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    this</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">get</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">i32</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#9ECBFF;">&quot;refCount&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#[napi]</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">napi</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">bindgen_prelude</span><span style="color:#D73A49;">::*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">napi_derive</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">napi;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">QueryEngine</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">#[napi]</span></span>
<span class="line"><span style="color:#D73A49;">impl</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">QueryEngine</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  #[napi(constructor)]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Result</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Self</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ok</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Self</span><span style="color:#24292E;"> {})</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  #[napi]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_ref_count</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">&amp;</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">, this</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">This</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Result</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Option</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">i32</span><span style="color:#24292E;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    this</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">get</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">i32</span><span style="color:#24292E;">&gt;(</span><span style="color:#032F62;">&quot;refCount&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="在函数中使用" tabindex="-1">在函数中使用 <a class="header-anchor" href="#在函数中使用" aria-label="Permalink to &quot;在函数中使用&quot;">​</a></h2><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">import { </span><span style="color:#B392F0;">Width</span><span style="color:#E1E4E8;">, plusOne } from </span><span style="color:#9ECBFF;">&#39;./index.js&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> new </span><span style="color:#B392F0;">Width</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">console</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">plusOne</span><span style="color:#E1E4E8;">(width))</span><span style="color:#6A737D;"> // 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">import { </span><span style="color:#6F42C1;">Width</span><span style="color:#24292E;">, plusOne } from </span><span style="color:#032F62;">&#39;./index.js&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> new </span><span style="color:#6F42C1;">Width</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">plusOne</span><span style="color:#24292E;">(width))</span><span style="color:#6A737D;"> // 2</span></span></code></pre></div><p>在上面的例子中，plusOne可能有自己的this上下文</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">napi</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">bindgen_prelude</span><span style="color:#F97583;">::*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">napi_derive</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">napi;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">#[napi(constructor)]</span></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Width</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">i32</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">#[napi]</span></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">plus_one</span><span style="color:#E1E4E8;">(this</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">This</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">Width</span><span style="color:#E1E4E8;">&gt;) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">i32</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  this</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">value </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">napi</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">bindgen_prelude</span><span style="color:#D73A49;">::*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">napi_derive</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">napi;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">#[napi(constructor)]</span></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Width</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">i32</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">#[napi]</span></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plus_one</span><span style="color:#24292E;">(this</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">This</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">Width</span><span style="color:#24292E;">&gt;) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">i32</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  this</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">value </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,9),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{d as __pageData,h as default};
