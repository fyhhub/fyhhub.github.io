import{_ as t}from"./plugin-vueexport-helper.2444895f.js";import{o as e,c as p,a as n,b as o,e as c,d as s,r as i}from"./app.6296002a.js";const l="/QQ20211009-105624@2x.png",u={},r=s('<h1 id="\u56FE\u7247\u61D2\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u56FE\u7247\u61D2\u52A0\u8F7D" aria-hidden="true">#</a> \u56FE\u7247\u61D2\u52A0\u8F7D</h1><p><code>lazy-load</code>\u662F\u6211\u4EEC\u5E38\u89C1\u7684\u4F18\u5316\u65B9\u5F0F\uFF0C\u51CF\u5C11\u6211\u4EEC\u9996\u5C4F\u56FE\u7247\u8BF7\u6C42\u4E2A\u6570\uFF0C\u8282\u7701\u7F51\u7EDC\u5E26\u5BBD\u3002\u4E0B\u9762\u6709\u51E0\u79CD\u5B9E\u73B0\u65B9\u5F0F \u5176\u5B9E\u73B0\u539F\u7406\u5982\u4E0B\u56FE</p><p><img src="'+l+`" alt="\u61D2\u52A0\u8F7D\u539F\u7406" loading="lazy"></p><h2 id="\u57FA\u7840\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u7840\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u83B7\u53D6\u6240\u6709\u7684\u56FE\u7247\u6807\u7B7E</span>
<span class="token keyword">const</span> imgs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u83B7\u53D6\u53EF\u89C6\u533A\u57DF\u7684\u9AD8\u5EA6</span>
<span class="token keyword">const</span> viewHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
<span class="token comment">// num\u7528\u4E8E\u7EDF\u8BA1\u5F53\u524D\u663E\u793A\u5230\u4E86\u54EA\u4E00\u5F20\u56FE\u7247\uFF0C\u907F\u514D\u6BCF\u6B21\u90FD\u4ECE\u7B2C\u4E00\u5F20\u56FE\u7247\u5F00\u59CB\u68C0\u67E5\u662F\u5426\u9732\u51FA</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">lazyload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> num<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u53EF\u89C6\u533A\u57DF\u9AD8\u5EA6\u51CF\u53BB\u5143\u7D20\u9876\u90E8\u8DDD\u79BB\u53EF\u89C6\u533A\u57DF\u9876\u90E8\u7684\u9AD8\u5EA6</span>
    <span class="token keyword">let</span> distance <span class="token operator">=</span> viewHeight <span class="token operator">-</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u53EF\u89C6\u533A\u57DF\u9AD8\u5EA6\u5927\u4E8E\u7B49\u4E8E\u5143\u7D20\u9876\u90E8\u8DDD\u79BB\u53EF\u89C6\u533A\u57DF\u9876\u90E8\u7684\u9AD8\u5EA6\uFF0C\u8BF4\u660E\u5143\u7D20\u9732\u51FA</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7ED9\u5143\u7D20\u5199\u5165\u771F\u5B9E\u7684src\uFF0C\u5C55\u793A\u56FE\u7247</span>
      imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u524Di\u5F20\u56FE\u7247\u5DF2\u7ECF\u52A0\u8F7D\u5B8C\u6BD5\uFF0C\u4E0B\u6B21\u4ECE\u7B2Ci+1\u5F20\u5F00\u59CB\u68C0\u67E5\u662F\u5426\u9732\u51FA</span>
      num <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u76D1\u542CScroll\u4E8B\u4EF6</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span> lazyload<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="intersectionobserver-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#intersectionobserver-\u5B9E\u73B0" aria-hidden="true">#</a> IntersectionObserver \u5B9E\u73B0</h2>`,6),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver",target:"_blank",rel:"noopener noreferrer"},d=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> imgs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;img[data-src]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">rootMargin</span><span class="token operator">:</span> <span class="token string">&quot;0px&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entries<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5143\u7D20\u51FA\u73B0\u5728\u89C6\u53E3\u5185</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> img <span class="token operator">=</span> entry<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
      <span class="token keyword">let</span> src <span class="token operator">=</span> img<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src<span class="token punctuation">;</span>
      <span class="token comment">// \u76EE\u6807\u5143\u7D20\u5B58\u5728data-src</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u66FF\u6362src</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u89E3\u9664\u89C2\u5BDF</span>
      self<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>

imgs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">image</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-lazy-\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#v-lazy-\u6307\u4EE4" aria-hidden="true">#</a> v-lazy \u6307\u4EE4</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> lazyLoad <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>IntersectionObserver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76EE\u6807\u56FE\u7247</span>
      <span class="token keyword">let</span> targetSrc <span class="token operator">=</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55img\u539F\u672C\u8981\u52A0\u8F7D\u7684\u56FE\u7247\u5730\u5740</span>

      <span class="token comment">// \u5360\u4F4D\u56FE</span>
      el<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">;</span>

      <span class="token keyword">let</span> lazyImageObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5F53\u524D\u5143\u7D20\u5728\u89C6\u7A97\u5185\u53EF\u89C1</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>intersectionRatio <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u66FF\u6362\u5F53\u524D\u5143\u7D20\u7684src\u4E3A\u76EE\u6807\u56FE\u7247\u5730\u5740</span>
            el<span class="token punctuation">.</span>src <span class="token operator">=</span> targetSrc<span class="token punctuation">;</span>

            <span class="token comment">// \u4F7FIntersectionObserver\u505C\u6B62\u76D1\u542C\u7279\u5B9A\u76EE\u6807\u5143\u7D20\u3002\u91CA\u653E\u8D44\u6E90</span>
            lazyImageObserver<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u4F7FIntersectionObserver\u5F00\u59CB\u76D1\u542C\u4E00\u4E2A\u76EE\u6807\u5143\u7D20\u3002</span>
      lazyImageObserver<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u76EE\u6807\u56FE\u7247<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function v(m,b){const a=i("ExternalLinkIcon");return e(),p("div",null,[r,n("p",null,[n("a",k,[o("IntersectionObserver MDN \u6587\u6863"),c(a)])]),d])}const y=t(u,[["render",v],["__file","\u56FE\u7247\u61D2\u52A0\u8F7D.html.vue"]]);export{y as default};
