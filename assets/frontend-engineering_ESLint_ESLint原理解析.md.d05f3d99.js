import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.3d945e71.js";const F=JSON.parse('{"title":"通关前端工程化（一）ESLint 全方位解析，让你不再面向搜索引擎配置","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-engineering/ESLint/ESLint原理解析.md","filePath":"frontend-engineering/ESLint/ESLint原理解析.md","lastUpdated":1713452072000}'),l={name:"frontend-engineering/ESLint/ESLint原理解析.md"},o=p(`<h1 id="通关前端工程化-一-eslint-全方位解析-让你不再面向搜索引擎配置" tabindex="-1">通关前端工程化（一）ESLint 全方位解析，让你不再面向搜索引擎配置 <a class="header-anchor" href="#通关前端工程化-一-eslint-全方位解析-让你不再面向搜索引擎配置" aria-label="Permalink to &quot;通关前端工程化（一）ESLint 全方位解析，让你不再面向搜索引擎配置&quot;">​</a></h1><h2 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h2><p>在前端工程化的工具链中，<code>eslint</code>在其中扮演了非常重要的角色，包含代码规范的检查和错误提示，还有代码的自动<code>fix</code>，让我们不再担心代码的基本质量。但是如果让你从头配置<code>eslint</code>，你可能会去百度或google查询。还有面对<code>plugins</code>，<code>extends</code>的时候，可能会疑惑他俩到底有啥区别？为什么要这么配置？</p><p>下面带着疑问，我们一起来解开<code>eslint</code>神秘面纱，让你彻底掌握eslint的各种配置以及它的原理。</p><h2 id="二、eslint的基本工作原理概览" tabindex="-1">二、ESlint的基本工作原理概览 <a class="header-anchor" href="#二、eslint的基本工作原理概览" aria-label="Permalink to &quot;二、ESlint的基本工作原理概览&quot;">​</a></h2><p>在详细讲解ESlint之前，我们先了解一下它的基本工作原理。可以先看看下面这张图</p><img width="100%" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/303b789dc5164e2a9146dae398a5aa98~tplv-k3u1fbpfcp-watermark.image?"><p>大致分为几个步骤：</p><ol><li>使用<code>解析器</code>将代码转为<code>AST(抽象语法树)</code></li><li>获取所有插件或用户定义的中的规则，<code>遍历AST并执行规则</code></li><li>在遍历完成后, <code>将收集到的错误抛出</code> 以及 <code>自动fix</code></li></ol><p>说到底, 还是对AST的操作。我们知道，既然要操作AST，那必然少不了对代码的<code>词法分析</code>和<code>语法分析</code>。</p><p>列举一下常见的编译器，如<code>acron</code>, <code>@babel/parser</code>, <code>babylon</code>, <code>espree</code>等等。。</p><p>下面来具体聊聊eslint的解析器吧~</p><h2 id="三、eslint的解析器" tabindex="-1">三、ESlint的解析器 <a class="header-anchor" href="#三、eslint的解析器" aria-label="Permalink to &quot;三、ESlint的解析器&quot;">​</a></h2><p><code>eslint</code>内部默认使用的是<code>espree</code>解析器。我们可以来简单试一下：<a href="https://astexplorer.net/" target="_blank" rel="noreferrer">astexplorer.net</a></p><img width="100%" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b6c9910fda054c3bbcd664350698bbaf~tplv-k3u1fbpfcp-watermark.image?"><p>当你使用<code>espree</code>的时候，就必须遵循它的AST结构，比如<code>@babel/parser</code>对于数字<code>1</code>, 它的节点类型是<code>NumericLiteral</code>, 而<code>espree</code>的节点类型是<code>Literal</code>。</p><blockquote><p>不同解析器编译出来的AST节点类型是不同的</p></blockquote><h3 id="espree、esprima、acron-之间到底是什么关系" tabindex="-1">espree、esprima、acron 之间到底是什么关系？ <a class="header-anchor" href="#espree、esprima、acron-之间到底是什么关系" aria-label="Permalink to &quot;espree、esprima、acron 之间到底是什么关系？&quot;">​</a></h3><p>我们在学习<code>AST</code>的时候，经常会看到<code>esprima</code>, <code>espree</code>等等<code>parser</code>。傻傻分不清，下面我们看下它们到底有何区别。</p><img width="100%" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb07419b77334c1ea5b535926894330a~tplv-k3u1fbpfcp-watermark.image?"><p>此图摘自 <a href="https://juejin.cn/book/6946117847848321055" target="_blank" rel="noreferrer">Babel 插件通关秘籍</a></p><p>其实<code>espree</code>是基于<code>acorn</code>实现的。这一点我们从源码中也可以看出来：</p><img width="100%" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/554a8e9487cc4581b1c582cb16ca422a~tplv-k3u1fbpfcp-watermark.image?"><p>下面我们来看看如何配置<code>eslint</code>的<code>parser</code>。</p><p>在下面的代码中我们可以设置<code>espree</code>的一些<code>parserOptions</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parser</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;espree&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parserOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ecmaVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 一般支持最新就可以了</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sourceType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定模块类型</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ecmaFeatures</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">jsx</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 让eslint支持jsx语法</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">impliedStrict</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 启动严格模式</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// ...其他参数</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parser</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;espree&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parserOptions</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ecmaVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 一般支持最新就可以了</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sourceType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定模块类型</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ecmaFeatures</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">jsx</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 让eslint支持jsx语法</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">impliedStrict</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 启动严格模式</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// ...其他参数</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>parserOptions</code>的类型定义：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ParserOptions</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">ecmaVersion</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2015</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2016</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2017</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2018</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2019</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2021</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2022</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">sourceType</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">ecmaFeatures</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">globalReturn</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">impliedStrict</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">jsx</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">experimentalObjectRestSpread</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ParserOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">ecmaVersion</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2015</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2016</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2017</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2018</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2019</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2021</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2022</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">sourceType</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">ecmaFeatures</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">globalReturn</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">impliedStrict</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">jsx</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">experimentalObjectRestSpread</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>一般来说，react的项目想要支持<code>jsx</code>的语法，就需要开启<code>ecmaFeatures.jsx</code>, 其他情况其实只用配置<code>sourceType</code>, <code>ecmaVersion</code>即可。</p><h3 id="支持ts文件解析的插件-typescript-eslint-parser" tabindex="-1">支持ts文件解析的插件（@typescript/eslint-parser） <a class="header-anchor" href="#支持ts文件解析的插件-typescript-eslint-parser" aria-label="Permalink to &quot;支持ts文件解析的插件（@typescript/eslint-parser）&quot;">​</a></h3><p>那如果我们想支持<code>typescript</code>语法解析，那该怎么做呢。我们可以在配置文件中声明：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">parser</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;@typescript-eslint/parser&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">parser</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;@babel/eslint-parser&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 需要配置babelrc中的 @babel/preset-typescript</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">parser</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;@typescript-eslint/parser&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">parser</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;@babel/eslint-parser&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 需要配置babelrc中的 @babel/preset-typescript</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="支持vue文件解析的插件-vue-eslint-parser" tabindex="-1">支持vue文件解析的插件（vue-eslint-parser） <a class="header-anchor" href="#支持vue文件解析的插件-vue-eslint-parser" aria-label="Permalink to &quot;支持vue文件解析的插件（vue-eslint-parser）&quot;">​</a></h3><p>如果我们想支持<code>vue</code>文件的解析，又要支持<code>ts</code>，又该怎么配置呢</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parser</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue-eslint-parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parserOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ecmaVersion&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;parser&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;sourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parser</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue-eslint-parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parserOptions</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ecmaVersion&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;parser&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>parserOptions</code>是传给<code>vue-eslint-parser</code>的参数，由于我们配置了<code>parser</code>，所有文件的解析都会经过<code>vue-eslint-parser</code>, 如果遇到了<code>ts</code>文件，就会切换到<code>parserOptions.parser</code>来编译解析。</p><p>其实<code>vue-eslint-parser</code>内部实现了<code>parseForESLint</code>方法，这个方法在<a href="https://cn.eslint.org/docs/developer-guide/working-with-custom-parsers" target="_blank" rel="noreferrer">中文文档</a>中，也有所介绍。</p><img width="100%" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f65926f2c8204689aed2c0a6ee2466f1~tplv-k3u1fbpfcp-watermark.image?"><h3 id="parser的最佳实践" tabindex="-1">parser的最佳实践 <a class="header-anchor" href="#parser的最佳实践" aria-label="Permalink to &quot;parser的最佳实践&quot;">​</a></h3><p><code>Vue项目</code>中的配置（仅展示解析器配置）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  parser: </span><span style="color:#9ECBFF;">&quot;vue-eslint-parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  parserOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ecmaVersion&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;parser&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;sourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 其他配置。。。</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  parser: </span><span style="color:#032F62;">&quot;vue-eslint-parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  parserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ecmaVersion&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;parser&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 其他配置。。。</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>你还可以这么配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;parser&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue-eslint-parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;parserOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;ecmaVersion&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;parser&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;">// js文件使用espree</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;js&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;espree&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;">// ts使用@typescript-eslint/parser</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;">// 模板中的脚本使用espree</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;&lt;template&gt;&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;espree&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;parser&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue-eslint-parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;parserOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;ecmaVersion&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;parser&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6A737D;">// js文件使用espree</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;js&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;espree&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6A737D;">// ts使用@typescript-eslint/parser</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6A737D;">// 模板中的脚本使用espree</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;&lt;template&gt;&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;espree&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>React项目</code>中的配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parser</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;@typescript-eslint/parser&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">parserOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ecmaFeatures</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">jsx</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ecmaVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;latest&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sourceType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;module&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parser</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;@typescript-eslint/parser&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">parserOptions</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ecmaFeatures</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">jsx</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ecmaVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;latest&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sourceType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;module&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="tslint为什么会被淘汰" tabindex="-1">tslint为什么会被淘汰 <a class="header-anchor" href="#tslint为什么会被淘汰" aria-label="Permalink to &quot;tslint为什么会被淘汰&quot;">​</a></h3><p>我们知道<code>eslint</code>是规范<code>js</code>代码的，而<code>tslint</code>是规范<code>ts</code>代码的。 既然功能差不多，就可以将两者合并。</p><p>前者使用的是<code>espree</code>, 后者使用了<code>typescript</code>编译，并且<code>tslint</code>还实现了自己的一些<code>rule</code>。</p><p>后来<code>tslint</code>的解析器就独立出来，成了<code>@typescript-eslint/parser</code>, 而它的规则一块合并到了<code>eslint</code>中，现在只需要指定一下代码的解析器，就可以实现<code>js</code>和<code>ts</code>的兼容。</p><p>我们来具体看下两者有何区别，对于这么一行代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1&#39;</span></span></code></pre></div><p>解析后的AST是有很大不同的：</p><table><thead><tr><th>解析器</th><th>AST</th></tr></thead><tbody><tr><td>espree</td><td><img width="80%" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b3e0de447aa743e4940f6acd0a8a453d~tplv-k3u1fbpfcp-watermark.image?"></td></tr><tr><td>typescript</td><td><img width="80%" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0eba17e1144e4adea82998c1d96c43c4~tplv-k3u1fbpfcp-watermark.image?"></td></tr></tbody></table><p>在<code>@typescript-eslint/parser</code>中，其实是通过将节点进行转换，并做一些映射来实现兼容<code>espree</code>的ast节点的。大家可以参考光神这篇文章：<a href="https://juejin.cn/post/7009657813890760741" target="_blank" rel="noreferrer">TSLint 和 ESLint 是怎么融合在一起的</a></p><h2 id="四、eslint注释" tabindex="-1">四、ESlint注释 <a class="header-anchor" href="#四、eslint注释" aria-label="Permalink to &quot;四、ESlint注释&quot;">​</a></h2><p>在平时的开发中，有时候我们想禁掉某些地方的eslint检查。但又不想修改配置文件，该怎么做呢。</p><p>eslint提供了注释的能力来控制检查。例如有如下代码：</p><img width="100%" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d741eb92a924842948277d8b47ff6ae~tplv-k3u1fbpfcp-watermark.image?"><p>在它上面加上一段注释，eslint就不会报错了</p><p>同样的类似的功能还有很多。一一列举一下</p><ul><li><p>禁止当前行的检查</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// eslint-disable-line</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// eslint-disable-line</span></span></code></pre></div></li><li><p>禁止下一行的检查</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// eslint-disable-next-line</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// eslint-disable-next-line</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div></li><li><p>禁用整个文件的检查</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* eslint-disable */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* eslint-disable */</span></span></code></pre></div></li><li><p>禁止文件中某些规则</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* eslint-disable no-alert */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* eslint-disable no-alert */</span></span></code></pre></div></li><li><p>指定当前文件的环境</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;xxx&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 可以使用require语法了</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;xxx&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 可以使用require语法了</span></span></code></pre></div></li><li><p>指定全局变量</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* global var1 */</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(var1) </span><span style="color:#6A737D;">// 全局变量只读，如果没有上面的注释，会报找不到该全局变量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* global var1:writable */</span></span>
<span class="line"><span style="color:#E1E4E8;">var1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 全局变量可读可写</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* global var1 */</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(var1) </span><span style="color:#6A737D;">// 全局变量只读，如果没有上面的注释，会报找不到该全局变量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* global var1:writable */</span></span>
<span class="line"><span style="color:#24292E;">var1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 全局变量可读可写</span></span></code></pre></div></li><li><p>配置规则</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* eslint eqeqeq: &quot;off&quot;, curly: &quot;error&quot; */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* eslint eqeqeq: &quot;off&quot;, curly: &quot;error&quot; */</span></span></code></pre></div></li></ul><h3 id="eslint注释的实现原理" tabindex="-1">eslint注释的实现原理 <a class="header-anchor" href="#eslint注释的实现原理" aria-label="Permalink to &quot;eslint注释的实现原理&quot;">​</a></h3><p>上面简单介绍了一下<code>eslint注释</code>的功能。那么它是如何实现的呢，难道是根据<code>AST</code>来判断的？</p><p>其实...并不是，而是用了最常见的正则匹配。下面我们来探究下原理。</p><p>先来了解下eslint格式化代码的大致过程：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">verify</span><span style="color:#E1E4E8;">(text) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// parse 源码</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ast</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(text);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 获取到lint后的问题</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lintingProblems</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">runRules</span><span style="color:#E1E4E8;">(ast);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 获取注释配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">commentDirectives</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDirectiveComments</span><span style="color:#E1E4E8;">(ast);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 根据注释配置和配置文件 获取最终的问题集合</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">applyDisableDirectives</span><span style="color:#E1E4E8;">(lintingProblems, commentDirectives);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">verify</span><span style="color:#24292E;">(text) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// parse 源码</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ast</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(text);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 获取到lint后的问题</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lintingProblems</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">runRules</span><span style="color:#24292E;">(ast);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 获取注释配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">commentDirectives</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDirectiveComments</span><span style="color:#24292E;">(ast);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 根据注释配置和配置文件 获取最终的问题集合</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">applyDisableDirectives</span><span style="color:#24292E;">(lintingProblems, commentDirectives);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>整体流程如下：</p><ol><li>parse 源码</li><li>获取到lint后的问题</li><li>获取注释配置</li><li>根据注释配置和配置文件 获取最终的问题集合</li></ol><p>一起来看下源码实现：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDirectiveComments</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ast</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">ruleMapper</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">warnInlineConfig</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    ast.comments.</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">token</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> token.type </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Shebang&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">comment</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">directivePart</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">justificationPart</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">extractDirectiveComment</span><span style="color:#E1E4E8;">(comment.value);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">match</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">(eslint(?:-env</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">-enable</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">-disable(?:(?:-next)</span><span style="color:#F97583;">?</span><span style="color:#DBEDFF;">-line)</span><span style="color:#F97583;">?</span><span style="color:#DBEDFF;">)</span><span style="color:#F97583;">?|</span><span style="color:#DBEDFF;">exported</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">globals</span><span style="color:#F97583;">?</span><span style="color:#DBEDFF;">)(?:</span><span style="color:#79B8FF;">\\s</span><span style="color:#F97583;">|$</span><span style="color:#DBEDFF;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">u</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(directivePart);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">match) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">directiveText</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> match[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lineCommentSupported</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">eslint-disable-(next-)</span><span style="color:#F97583;">?</span><span style="color:#DBEDFF;">line</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">u</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(directiveText);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">directiveValue</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> directivePart.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(match.index </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> directiveText.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (directiveText) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;eslint-disable&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;eslint-enable&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;eslint-disable-next-line&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;eslint-disable-line&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;exported&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;globals&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;global&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;eslint&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        configuredRules,</span></span>
<span class="line"><span style="color:#E1E4E8;">        enabledGlobals,</span></span>
<span class="line"><span style="color:#E1E4E8;">        exportedVariables,</span></span>
<span class="line"><span style="color:#E1E4E8;">        problems,</span></span>
<span class="line"><span style="color:#E1E4E8;">        disableDirectives</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDirectiveComments</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ast</span><span style="color:#24292E;">, </span><span style="color:#E36209;">ruleMapper</span><span style="color:#24292E;">, </span><span style="color:#E36209;">warnInlineConfig</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    ast.comments.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">token</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> token.type </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Shebang&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">comment</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">directivePart</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">justificationPart</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">extractDirectiveComment</span><span style="color:#24292E;">(comment.value);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">match</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(eslint(?:-env</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">-enable</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">-disable(?:(?:-next)</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">-line)</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">?|</span><span style="color:#032F62;">exported</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">globals</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">)(?:</span><span style="color:#005CC5;">\\s</span><span style="color:#D73A49;">|$</span><span style="color:#032F62;">)/</span><span style="color:#D73A49;">u</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(directivePart);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">match) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">directiveText</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> match[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lineCommentSupported</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">eslint-disable-(next-)</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">line</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">u</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(directiveText);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">directiveValue</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> directivePart.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(match.index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> directiveText.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (directiveText) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;eslint-disable&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;eslint-enable&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;eslint-disable-next-line&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;eslint-disable-line&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;exported&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;globals&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;global&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;eslint&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        configuredRules,</span></span>
<span class="line"><span style="color:#24292E;">        enabledGlobals,</span></span>
<span class="line"><span style="color:#24292E;">        exportedVariables,</span></span>
<span class="line"><span style="color:#24292E;">        problems,</span></span>
<span class="line"><span style="color:#24292E;">        disableDirectives</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>可以看到，其实就通过正则<code>match</code>匹配到<code>行内配置</code>, 然后对问题进行过滤。感兴趣可以直接看源码<a href="https://github.com/eslint/eslint/blob/7b43ea14a8af5fc3dbac38fa9d5bc71741328c16/lib/linter/linter.js#L366" target="_blank" rel="noreferrer">linter.js#L366</a></p><p>好了，相信大家对<code>eslint注释</code>已经非常清楚，这在有些特定情况还是可以使用的。当然~还是推荐大家遵循各自的开发规范，尽量少用。</p><h2 id="五、eslint核心配置详解" tabindex="-1">五、ESlint核心配置详解 <a class="header-anchor" href="#五、eslint核心配置详解" aria-label="Permalink to &quot;五、ESlint核心配置详解&quot;">​</a></h2><h3 id="parser、parseroptions" tabindex="-1">parser、parserOptions <a class="header-anchor" href="#parser、parseroptions" aria-label="Permalink to &quot;parser、parserOptions&quot;">​</a></h3><p>参见上文</p><h3 id="rules" tabindex="-1">rules <a class="header-anchor" href="#rules" aria-label="Permalink to &quot;rules&quot;">​</a></h3><p>在<code>eslint</code>中，rules有多种写法:</p><ul><li>&quot;off&quot;或0 -关闭规则</li><li>&quot;warn&quot; 或1 - 开启规则, 使用警告 程序不会退出</li><li>&quot;error&quot;或2 - 开启规则, 使用错误 程序退出</li></ul><p>下面这两种写法是完全一样的。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;no-debugger&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;no-debugger&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;off&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;no-debugger&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;no-debugger&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>你还可以给规则传递参数，例如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 空行最多不能超过2行, 否则会警告</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;no-multiple-empty-lines&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, {</span><span style="color:#9ECBFF;">&quot;max&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 空行最多不能超过2行, 否则会警告</span></span>
<span class="line"><span style="color:#032F62;">&quot;no-multiple-empty-lines&quot;</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, {</span><span style="color:#032F62;">&quot;max&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}]</span></span></code></pre></div><p>第一个参数是规则问题信息的级别。第二个参数是传递给rule的参数</p><h3 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;plugins&quot;">​</a></h3><p>什么是eslint插件？简单一句话：<strong>提供了代码检查和修复的能力</strong>。 我们先看下<code>plugins</code>的几种写法。</p><p>先来安装一下<code>eslint-plugin-vue</code></p><pre><code>npm i eslint-plugin-vue -D
</code></pre><p>那么插件该如何配置呢：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">plugins</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;vue&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;vue&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果像<code>@typescript-eslint/eslint-plugin</code>这种怎么配置？</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">plugins</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;@typescript-eslint&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@typescript-eslint&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>还有一种情况，<code>@jquery/eslint-plugin-jquery</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">plugins</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;@jquery/jquery&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@jquery/jquery&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 省略了eslint-plugin</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>简单记住插件名是如何转变的：<strong>会替换掉eslint-plugin</strong>。</p><p><strong>但需要注意的是，<code>plugins</code>只是提供了检查和修复能力，但并没有将这些规则给应用上，这一点很重要！！</strong></p><p>我们可以用一个例子看一下：</p><img width="100%" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e024c1fcabaf4ea4b8c06bc615f61d0b~tplv-k3u1fbpfcp-watermark.image?"><p>在没有配置<code>extends</code>的情况下，我们的代码没有任何报错，但是一旦配置上后。eslint就会继承<code>eslint-plugin-vue</code>下面的<code>推荐规则配置</code>。</p><p>下面我们来详细看下<code>extends</code>是如何配置的。</p><h3 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h3><p>首先，在<code>eslint</code>中其实是有一套<code>默认的规则配置</code>, 可以这样:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&#39;eslint:recommended&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;eslint:recommended&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>extends</code>有三种来源</p><ul><li><code>eslint-plugin-xxx</code>中的规则配置<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;plugin:xxx/recommended&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;plugin:xxx/recommended&quot;</span><span style="color:#24292E;">]</span></span></code></pre></div></li><li><code>eslint-config-xxx</code>中的规则配置, 例如我们常见的<code>eslint-config-standard</code><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;standard&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;standard&quot;</span><span style="color:#24292E;">]</span></span></code></pre></div></li><li><code>eslint</code>内置规则配置<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;eslint:all&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// 全量规则启动</span></span>
<span class="line"><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;eslint:recommended&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// 推荐规则</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;eslint:all&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// 全量规则启动</span></span>
<span class="line"><span style="color:#6A737D;">// or</span></span>
<span class="line"><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;eslint:recommended&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// 推荐规则</span></span></code></pre></div></li></ul><p><strong>所以，如果我们不配置任何<code>extends</code>, 代码将没有任何检查和修复能力</strong></p><p>说了这么多，<code>plugin:xxx/recommended</code>规则是从哪里来的呢？</p><p>以<code>plugin:vue/recommended</code>为例，我们打开<code>eslint-plugin-vue</code>的源码：</p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f51007b112240b8a50100bd1150797e~tplv-k3u1fbpfcp-watermark.image?" alt="" width="100%"><p>可以看到插件的<code>configs</code>中有一行<code>recommended</code>的配置。其实它还支持其他的推荐配置例如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;plugin:vue/vue3-recommended&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;plugin:vue/vue3-recommended&quot;</span></span></code></pre></div><p>加上上面这一行，就可以在vue3项目中开启一些推荐规则了。</p><h3 id="env" tabindex="-1">env <a class="header-anchor" href="#env" aria-label="Permalink to &quot;env&quot;">​</a></h3><p>这个配置就比较好理解了，其实就是设置当前环境，如果环境不匹配，就会报错。</p><p>常见配置如下</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Env</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#FFAB70;">browser</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#FFAB70;">esxx</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Env</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#E36209;">browser</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#E36209;">node</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#E36209;">esxx</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>简单看下效果：</p><img width="100%" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c5f655ca18541d68af1dc4aedddca3b~tplv-k3u1fbpfcp-watermark.image?"><p>在上面的配置中，只是使用了<code>node</code>和<code>browser</code>，另外还支持<code>es20xx</code>的写法，可切换不同的ecma版本。</p><h3 id="globals" tabindex="-1">globals <a class="header-anchor" href="#globals" aria-label="Permalink to &quot;globals&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">globals</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    [name: string]: boolean </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;readonly&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;readable&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;writable&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;writeable&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">globals</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    [name: string]: boolean </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;readonly&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;readable&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;writable&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;writeable&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>这个属性是用来配置全局变量的，例如我们设置了<code>readable</code>，那么它是只读的，修改就会报错。同理<code>writable</code>和<code>writeable</code>是可读可写。</p><img width="60%" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e598d9735764c2787655ce7f6d5799f~tplv-k3u1fbpfcp-watermark.image?"><p>如果没有配置全局变量，会提示未声明该变量，一般可以搭配<code>webpack</code>的<code>ProvidePlugin</code>使用。</p><img width="100%" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b853f103e0641dfb3ad57ce90833677~tplv-k3u1fbpfcp-watermark.image?"><h3 id="root" tabindex="-1">root <a class="header-anchor" href="#root" aria-label="Permalink to &quot;root&quot;">​</a></h3><p>该配置可以设置配置文件的目录</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>ESLint 搜索配置文件步骤：</p><ol><li>在要检测的文件同一目录里寻找 .eslintrc.* 和 package.json；</li><li>紧接着在父级目录里寻找，一直到文件系统的根目录；</li><li>如果在前两步发现有 root：true 的配置，停止在父级目录中寻找 .eslintrc；</li><li>如果以上步骤都没有找到，则回退到用户主目录 ~/.eslintrc 中自定义的默认配置</li></ol><h2 id="六、如何自定义eslint的错误信息" tabindex="-1">六、如何自定义ESLint的错误信息 <a class="header-anchor" href="#六、如何自定义eslint的错误信息" aria-label="Permalink to &quot;六、如何自定义ESLint的错误信息&quot;">​</a></h2><p>在eslint中，我们可以通过<code>-f</code>指定格式化方法</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">eslint index.vue </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">f .</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">formatter.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">eslint index.vue </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">f .</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">formatter.js</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// formatter.js</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">results</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(results, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// formatter.js</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">results</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(results, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>它接收一个<code>results</code>参数, 结构如下:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;filePath&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/eslint-learn/index.vue&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;messages&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;ruleId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue/multi-word-component-names&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;severity&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Component name </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">index</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> should always be multi-word.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;line&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;nodeType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;messageId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;unexpected&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;ruleId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue/no-multiple-template-root&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;severity&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;The template root requires exactly one element.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;line&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;nodeType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;VElement&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;endLine&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;endColumn&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;suppressedMessages&quot;</span><span style="color:#E1E4E8;">: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;errorCount&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;fatalErrorCount&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;warningCount&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;fixableErrorCount&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;fixableWarningCount&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;source&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;&lt;template&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">  &lt;div /&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">  &lt;div /&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&lt;/template&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&lt;script&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">export default {</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">  a () {</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">  }</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">}</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&lt;/script&gt;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;usedDeprecatedRules&quot;</span><span style="color:#E1E4E8;">: []</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;filePath&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/eslint-learn/index.vue&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;messages&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;ruleId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue/multi-word-component-names&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;severity&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Component name </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">index</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> should always be multi-word.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;line&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;nodeType&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;messageId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;unexpected&quot;</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;ruleId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue/no-multiple-template-root&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;severity&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;The template root requires exactly one element.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;line&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;nodeType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;VElement&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;endLine&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;endColumn&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;suppressedMessages&quot;</span><span style="color:#24292E;">: [],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;errorCount&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;fatalErrorCount&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;warningCount&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;fixableErrorCount&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;fixableWarningCount&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;source&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&lt;template&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">  &lt;div /&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">  &lt;div /&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&lt;/template&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&lt;script&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">export default {</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">  a () {</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">  }</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">}</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&lt;/script&gt;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;usedDeprecatedRules&quot;</span><span style="color:#24292E;">: []</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>其中<code>messages</code>包含了报错信息，我们拿到这些信息，就可以将其格式化我们想要的样子</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">results</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 记录错误数量 和 警告数量</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> summary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> results.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">seq</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">current</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            seq.errors </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> current.errorCount;</span></span>
<span class="line"><span style="color:#E1E4E8;">            seq.warnings </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> current.warningCount;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> seq;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        { errors: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, warnings: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (summary.errors </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> summary.warnings </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;Errors: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">            summary.errors </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;, Warnings: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">            summary.warnings </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">results</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 记录错误数量 和 警告数量</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> summary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> results.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">seq</span><span style="color:#24292E;">, </span><span style="color:#E36209;">current</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            seq.errors </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> current.errorCount;</span></span>
<span class="line"><span style="color:#24292E;">            seq.warnings </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> current.warningCount;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> seq;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        { errors: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, warnings: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (summary.errors </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> summary.warnings </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;Errors: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">            summary.errors </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;, Warnings: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">            summary.warnings </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">        );</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>执行后，错误结果就变成了这样：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d8157c8d13e419dbfff25005eb5c104~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>详细用法，大家可以参考文档~</p><h2 id="七、自定义解析器" tabindex="-1">七、自定义解析器 <a class="header-anchor" href="#七、自定义解析器" aria-label="Permalink to &quot;七、自定义解析器&quot;">​</a></h2><p>前面我们知道，通过配置<code>parser</code>就能设置我们当前eslint解析代码的工具。以<code>eslint-plugin-vue</code>为例，它是如何实现<code>vue</code>文件的解析呢？</p><p>在学习之前，我们来自己实现一下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;parser&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./path/to/awesome-custom-parser.js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;parser&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;./path/to/awesome-custom-parser.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> espree </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;espree&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parseForESLint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ast: espree.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(code, options)</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> espree </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;espree&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parseForESLint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">code</span><span style="color:#24292E;">, </span><span style="color:#E36209;">options</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        ast: espree.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(code, options)</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>在上面的例子中，我们实现了一个eslint解析器，不过还是使用了<code>espree</code>来解析的。</p><p>可以看到我们导出了一个<code>parseForESLint</code>方法。接收两个参数</p><ul><li><code>code</code>: 我们要解析的源代码</li><li><code>options</code>: 其实就是<code>parserOptions</code></li></ul><p>最后返回了AST。</p><p>有了这些配置，就很容易基于其他编译工具来实现代码的解析。</p><p>下面我们来直接看下<code>vue</code>是如何处理的，打开<code>vue-eslint-parser</code>源码, 找到<code>parseForESLint</code>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseForESLint</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">parserOptions</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        comment: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        loc: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        range: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        tokens: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, parserOptions </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {});</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> document;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> locationCalculator;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 如果非vue文件， 就是用parserOtions中指定的解析器</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">isVueFile</span><span style="color:#E1E4E8;">(code, options)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAsScript</span><span style="color:#E1E4E8;">(code, options);</span></span>
<span class="line"><span style="color:#E1E4E8;">        document </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        locationCalculator </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// vue文件使用sfc编译</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ({ result, document, locationCalculator } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAsSFC</span><span style="color:#E1E4E8;">(code, options));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    result.services </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(result.services </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {}, </span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(code, result.ast, document, locationCalculator, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        parserOptions: options,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseForESLint</span><span style="color:#24292E;">(</span><span style="color:#E36209;">code</span><span style="color:#24292E;">, </span><span style="color:#E36209;">parserOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        comment: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        loc: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        range: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        tokens: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }, parserOptions </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> {});</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> document;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> locationCalculator;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果非vue文件， 就是用parserOtions中指定的解析器</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">isVueFile</span><span style="color:#24292E;">(code, options)) {</span></span>
<span class="line"><span style="color:#24292E;">        result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAsScript</span><span style="color:#24292E;">(code, options);</span></span>
<span class="line"><span style="color:#24292E;">        document </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        locationCalculator </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// vue文件使用sfc编译</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        ({ result, document, locationCalculator } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAsSFC</span><span style="color:#24292E;">(code, options));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    result.services </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">(result.services </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> {}, </span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(code, result.ast, document, locationCalculator, {</span></span>
<span class="line"><span style="color:#24292E;">        parserOptions: options,</span></span>
<span class="line"><span style="color:#24292E;">    }));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>上面的逻辑也很好理解</p><ul><li>如果非vue文件， 就是用parserOtions中指定的解析器（关于如何配置，前面也有说过）</li><li>vue文件使用sfc编译, 会将代码分成三部分<code>template</code>, <code>script</code>, <code>style</code>, 其中<code>script</code>会根据你的配置，使用如<code>espree</code>或<code>@typescript-eslint/parser</code>来编译。</li></ul><h2 id="八、eslint插件开发" tabindex="-1">八、ESlint插件开发 <a class="header-anchor" href="#八、eslint插件开发" aria-label="Permalink to &quot;八、ESlint插件开发&quot;">​</a></h2><p>在了解规则如何开发插件之前，我们先想明白几件事，<code>plugin</code>到底提供了什么功能？</p><ul><li>自定义规则</li><li>processor</li><li>自定义配置</li></ul><p>主要分为上面三部分，下面我们来详细看看</p><h3 id="eslint插件的基本结构" tabindex="-1">eslint插件的基本结构 <a class="header-anchor" href="#eslint插件的基本结构" aria-label="Permalink to &quot;eslint插件的基本结构&quot;">​</a></h3><p>直接以<code>eslint-plugin-vue</code>为例，可以看到它的配置如下</p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f2c818d8154241ebbfc1d882c34279d4~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><h4 id="rules-1" tabindex="-1">rules <a class="header-anchor" href="#rules-1" aria-label="Permalink to &quot;rules&quot;">​</a></h4><p>先看下<code>rules</code>中有什么</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rules</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;array-bracket-newline&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/array-bracket-newline&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;array-bracket-spacing&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/array-bracket-spacing&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;arrow-spacing&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/arrow-spacing&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;attribute-hyphenation&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/attribute-hyphenation&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;attributes-order&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/attributes-order&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;block-lang&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/block-lang&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;block-spacing&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/block-spacing&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;block-tag-newline&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/block-tag-newline&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;brace-style&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./rules/brace-style&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rules</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;array-bracket-newline&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/array-bracket-newline&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;array-bracket-spacing&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/array-bracket-spacing&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;arrow-spacing&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/arrow-spacing&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;attribute-hyphenation&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/attribute-hyphenation&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;attributes-order&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/attributes-order&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;block-lang&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/block-lang&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;block-spacing&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/block-spacing&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;block-tag-newline&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/block-tag-newline&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;brace-style&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./rules/brace-style&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>其中配置了很多<code>vue</code>自己定义的<code>rules</code>, 这里我们暂且不看它里面如何实现。</p><h4 id="configs" tabindex="-1">configs <a class="header-anchor" href="#configs" aria-label="Permalink to &quot;configs&quot;">​</a></h4><p>接着是<code>configs</code>。</p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d0a5d043021f4cc79709b595bdfd54e2~tplv-k3u1fbpfcp-watermark.image?" alt="" width="100%"><p>相信大家都看到了一个熟悉的名字<code>recommended</code>, 也就是说这里的<code>recommended</code>其实就是我们配置的<code>extends: &quot;plugin:vue/recommended&quot;</code>。</p><p>另外<code>recommended</code>配置中接着继承了<code>strongly-recommended</code>。这里大家要注意一下，并不知只有<code>extends</code>功能。还可以指定其他配置，如<code>env</code>, <code>plugins</code>等等，跟<code>eslintrc</code>完全一样的配置。</p><p>可以看到上面还有其他的推荐配置，如果你的项目是vue3，你还可以这么写：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;extends&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;plugin:vue/vue3-recommended&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;extends&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;plugin:vue/vue3-recommended&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="processors" tabindex="-1">processors <a class="header-anchor" href="#processors" aria-label="Permalink to &quot;processors&quot;">​</a></h4><p>再接下来就是processor了。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">processors</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;.vue&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./processor&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">processors</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;.vue&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./processor&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>什么是<code>processor</code>呢？通过前面的学习我们知道<code>eslint</code>是使用<code>espree</code>解析<code>js</code>文件的，但是它本身对于<code>vue</code>文件是无能为力的，那么就需要特殊的<code>processor</code>去处理<code>vue</code>文件。</p><p>例如像上面的代码中，指定了<code>.vue</code>文件交给<code>./processor</code>中的方法去处理。</p><p>后面会详细讲解一下<code>processor</code>。</p><h4 id="environments" tabindex="-1">environments <a class="header-anchor" href="#environments" aria-label="Permalink to &quot;environments&quot;">​</a></h4><p>插件可以暴露额外的环境以在 ESLint 中使用。为此，插件必须输出一个 <code>environments</code> 对象。<code>environments</code> 对象的 key 是不同环境提供的名字，值是不同环境的设置。</p><p>例如下面的配置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">environments</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TODO Remove in the next major version</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@deprecated</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;setup-compiler-macros&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      globals: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        defineProps: </span><span style="color:#9ECBFF;">&#39;readonly&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        defineEmits: </span><span style="color:#9ECBFF;">&#39;readonly&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        defineExpose: </span><span style="color:#9ECBFF;">&#39;readonly&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        withDefaults: </span><span style="color:#9ECBFF;">&#39;readonly&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">environments</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// TODO Remove in the next major version</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@deprecated</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;setup-compiler-macros&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      globals: {</span></span>
<span class="line"><span style="color:#24292E;">        defineProps: </span><span style="color:#032F62;">&#39;readonly&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        defineEmits: </span><span style="color:#032F62;">&#39;readonly&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        defineExpose: </span><span style="color:#032F62;">&#39;readonly&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        withDefaults: </span><span style="color:#032F62;">&#39;readonly&#39;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div><p>在vue3的<code>script + setup</code>中的代码，如果不声明导入，直接使用<code>defineProps</code>肯定是会报错的。 需要这么配置来解决：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">env</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;vue/setup-compiler-macros&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">env</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;vue/setup-compiler-macros&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这样就可以开启全局变量的配置~ 好了，下面我们正式进入eslint插件的开发。</p><h3 id="插件的开发环境" tabindex="-1">插件的开发环境 <a class="header-anchor" href="#插件的开发环境" aria-label="Permalink to &quot;插件的开发环境&quot;">​</a></h3><p>工欲善其事必先利其器，先来安装一下插件脚手架</p><pre><code>npm i -g yo generator-eslint
</code></pre><p>创建规则目录</p><pre><code>mkdir eslint-plugin-demo
cd eslint-plugin-demo
</code></pre><p>初始化插件模板</p><pre><code>yo eslint:plugin
</code></pre><p>经过一系列交互初始化, 插件名(ID: demo)为<code>eslint-plugin-demo</code></p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/809fb31276d945e4a92e9e6dbcfb8283~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><h3 id="实现no-var规则" tabindex="-1">实现no-var规则 <a class="header-anchor" href="#实现no-var规则" aria-label="Permalink to &quot;实现no-var规则&quot;">​</a></h3><p>进入到插件根目录下，初始化一个规则</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yo </span><span style="color:#B392F0;">eslint</span><span style="color:#E1E4E8;">:rule</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yo </span><span style="color:#6F42C1;">eslint</span><span style="color:#24292E;">:rule</span></span></code></pre></div><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e7b8f8ec1f0412eb2ddf802d197c4d9~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><p>修改一下插件配置<code>eslint-plugin-demo/index.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">requireIndex</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;requireindex&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  rules: </span><span style="color:#B392F0;">requireIndex</span><span style="color:#E1E4E8;">(__dirname </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/rules&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">  configs: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    recommended: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;demo/no-var&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;error&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">requireIndex</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;requireindex&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  rules: </span><span style="color:#6F42C1;">requireIndex</span><span style="color:#24292E;">(__dirname </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/rules&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  configs: {</span></span>
<span class="line"><span style="color:#24292E;">    recommended: {</span></span>
<span class="line"><span style="color:#24292E;">      rules: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;demo/no-var&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;error&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>然后执行<code>npm link</code>将当前插件Link到全局, 再在项目中<code>link</code>引入。</p><pre><code>// 插件项目中执行
npm link

// 测试项目中执行
npm link eslint-plugin-demo
</code></pre><p>在测试项目中，配置上<code>plugins</code>和<code>extends</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;env&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;browser&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;es2021&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;parserOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ecmaVersion&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;sourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;plugins&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;demo&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;extends&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;plugin:demo/recommended&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;env&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;browser&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;es2021&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;parserOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ecmaVersion&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;plugins&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;demo&quot;</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;extends&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;plugin:demo/recommended&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在测试项目中创建一个<code>test.js</code>文件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div><p>回到插件代码, 我们看下如何实现一个<code>no-var</code>规则</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// eslint-plugin-demo\\lib\\rules\\no-var.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;eslint&#39;).Rule.RuleModule}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    type: </span><span style="color:#9ECBFF;">&#39;problem&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// \`problem\`, \`suggestion\`, or \`layout\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    docs: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      description: </span><span style="color:#9ECBFF;">&quot;不允许有var&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 简短的描述</span></span>
<span class="line"><span style="color:#E1E4E8;">      recommended: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// eslint:recommended 时开启</span></span>
<span class="line"><span style="color:#E1E4E8;">      url: </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 文档地址</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    fixable: </span><span style="color:#9ECBFF;">&#39;code&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Or \`code\` or \`whitespace\` 是否执行fix</span></span>
<span class="line"><span style="color:#E1E4E8;">    messages: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      noVar: </span><span style="color:#9ECBFF;">&#39;不能有 {{ type }}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sourceCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.</span><span style="color:#B392F0;">getSourceCode</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">VariableDeclaration</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (node.kind </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;var&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          context.</span><span style="color:#B392F0;">report</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            node,</span></span>
<span class="line"><span style="color:#E1E4E8;">            data: { type: </span><span style="color:#9ECBFF;">&#39;var&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">            messageId: </span><span style="color:#9ECBFF;">&#39;noVar&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">fix</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fixer</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 遍历tokens, 找到var</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">varToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sourceCode.</span><span style="color:#B392F0;">getFirstToken</span><span style="color:#E1E4E8;">(node, { </span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> t.value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;var&#39;</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 替换var为let</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> fixer.</span><span style="color:#B392F0;">replaceText</span><span style="color:#E1E4E8;">(varToken, </span><span style="color:#9ECBFF;">&#39;let&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// eslint-plugin-demo\\lib\\rules\\no-var.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@type</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{import(&#39;eslint&#39;).Rule.RuleModule}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  meta: {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;problem&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// \`problem\`, \`suggestion\`, or \`layout\`</span></span>
<span class="line"><span style="color:#24292E;">    docs: {</span></span>
<span class="line"><span style="color:#24292E;">      description: </span><span style="color:#032F62;">&quot;不允许有var&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 简短的描述</span></span>
<span class="line"><span style="color:#24292E;">      recommended: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// eslint:recommended 时开启</span></span>
<span class="line"><span style="color:#24292E;">      url: </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 文档地址</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    fixable: </span><span style="color:#032F62;">&#39;code&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Or \`code\` or \`whitespace\` 是否执行fix</span></span>
<span class="line"><span style="color:#24292E;">    messages: {</span></span>
<span class="line"><span style="color:#24292E;">      noVar: </span><span style="color:#032F62;">&#39;不能有 {{ type }}&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#E36209;">context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sourceCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.</span><span style="color:#6F42C1;">getSourceCode</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">VariableDeclaration</span><span style="color:#24292E;">(</span><span style="color:#E36209;">node</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (node.kind </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;var&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          context.</span><span style="color:#6F42C1;">report</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            node,</span></span>
<span class="line"><span style="color:#24292E;">            data: { type: </span><span style="color:#032F62;">&#39;var&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">            messageId: </span><span style="color:#032F62;">&#39;noVar&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">fix</span><span style="color:#24292E;">(</span><span style="color:#E36209;">fixer</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 遍历tokens, 找到var</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">varToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sourceCode.</span><span style="color:#6F42C1;">getFirstToken</span><span style="color:#24292E;">(node, { </span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">: </span><span style="color:#E36209;">t</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> t.value </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;var&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 替换var为let</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fixer.</span><span style="color:#6F42C1;">replaceText</span><span style="color:#24292E;">(varToken, </span><span style="color:#032F62;">&#39;let&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          })</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>代码实现很简单, 解释一下，主要分为两个功能</p><ol><li>错误提示：在<code>create</code>方法中，当遍历到<code>VariableDeclaration</code>节点时，<code>report</code>一个错误信息，<code>messageId</code>对应了上面<code>messages</code>的key, <code>data</code>中可以传递一些插槽。</li><li>代码修复：通过<code>getFirstToken</code>筛选到token等于<code>var</code>的，然后<code>replaceText</code>替换成<code>let</code></li></ol><p>在上面的代码中，我们可以发现其中涉及了三个对象：</p><ul><li>context</li><li>fixer</li><li>sourceCode</li></ul><p>它上面有哪些方法呢？这里我推荐直接看下<a href="https://cn.eslint.org/docs/developer-guide/working-with-rules" target="_blank" rel="noreferrer">中文文档</a>，不过我还是先列举几个，方便大家查看：</p><p><code>fixer</code>对象</p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc340b3e5e0e4b74839789a92fd34e37~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><p><code>SourceCode</code>对象</p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d77082c6580c47a5acdc923b9b8e90b4~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><p>接着我们测试下效果</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">.</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">node_modules</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">.bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">eslint .</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">test.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">.</span><span style="color:#032F62;">/node_modules/</span><span style="color:#24292E;">.bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">eslint .</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">test.js</span></span></code></pre></div><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/919c1a02fae544e3ba7d8431c15c7cf4~tplv-k3u1fbpfcp-watermark.image?" alt="" width="70%"><p>再来执行以下<code>--fix</code>，可以发现<code>var</code>被修改成了<code>let</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">.</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">node_modules</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">.bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">eslint .</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">test.js </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">fix</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">.</span><span style="color:#032F62;">/node_modules/</span><span style="color:#24292E;">.bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">eslint .</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">test.js </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">fix</span></span></code></pre></div><h3 id="processor是什么" tabindex="-1">processor是什么? <a class="header-anchor" href="#processor是什么" aria-label="Permalink to &quot;processor是什么?&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">processor</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">preprocess</span><span style="color:#E1E4E8;">(code){</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> [code]</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">postprocess</span><span style="color:#E1E4E8;">(messages) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 处理message</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> messages</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">supportsAutofix</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 设置为true，才能支持--fix自动修复</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">processor</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">preprocess</span><span style="color:#24292E;">(code){</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [code]</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">postprocess</span><span style="color:#24292E;">(messages) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 处理message</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> messages</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">supportsAutofix</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 设置为true，才能支持--fix自动修复</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>processor</code>的作用其实很简单，<strong>就是在校验的前/后，分别对<code>code</code>和<code>messages</code>做一些处理</strong></p><p>例如<code>eslint-plugin-vue</code>的<code>processor</code>实现就非常简单, code不需要处理，交给<code>vue-eslint-parser</code>去解析，而<code>postprocess</code>去单独处理了一下错误信息。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">code</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">preprocess</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> [code]</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{LintMessage[][]}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">messages</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{LintMessage[]}</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">postprocess</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">messages</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">state</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{GroupState}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">      block: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        disableAllKeys: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Set</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        disableRuleKeys: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{GroupState}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">      line: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        disableAllKeys: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Set</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        disableRuleKeys: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...其他逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> filteredMessages</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  supportsAutofix: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 设置为true，才能支持--fix自动修复</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">code</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">preprocess</span><span style="color:#24292E;">(</span><span style="color:#E36209;">code</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [code]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{LintMessage[][]}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">messages</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{LintMessage[]}</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">postprocess</span><span style="color:#24292E;">(</span><span style="color:#E36209;">messages</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">state</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@type</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{GroupState}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">      block: {</span></span>
<span class="line"><span style="color:#24292E;">        disableAllKeys: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        disableRuleKeys: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@type</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{GroupState}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">      line: {</span></span>
<span class="line"><span style="color:#24292E;">        disableAllKeys: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        disableRuleKeys: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...其他逻辑</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> filteredMessages</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  supportsAutofix: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 设置为true，才能支持--fix自动修复</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="九、eslint源码" tabindex="-1">九、ESLint源码 <a class="header-anchor" href="#九、eslint源码" aria-label="Permalink to &quot;九、ESLint源码&quot;">​</a></h2><p>简单画了一下源码的流程图</p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e14b2377f6b46e8934f8b2dd656de4f~tplv-k3u1fbpfcp-watermark.image?" alt="" width="100%"><p>大致列一下流程：</p><ol><li><p>创建<code>ESLint</code>和<code>CLIEngine</code>类</p></li><li><p>提取配置文件，从当前目录搜索。</p></li><li><p>是否存在processor，存在就调用<code>preprocess</code></p></li><li><p>根据传入的parser配置编译代码，生成AST</p></li><li><p>执行规则</p><ul><li>遍历AST，平铺所有节点到<code>nodeQueue</code></li><li>遍历rules, 注册节点事件(如 <code>Literal -&gt; 上报错误、修复代码逻辑</code>..)</li><li>遍历平铺后的<code>nodeQueue</code></li><li>触发节点事件，收集<code>问题和代码修复回调</code></li></ul></li><li><p>调用<code>postprocess</code></p></li><li><p>执行代码修复</p></li><li><p>输出文件</p></li></ol><h2 id="十、eslint-与-prettier-的强强联合" tabindex="-1">十、ESLint 与 Prettier 的强强联合 <a class="header-anchor" href="#十、eslint-与-prettier-的强强联合" aria-label="Permalink to &quot;十、ESLint 与 Prettier 的强强联合&quot;">​</a></h2><p>ESLint作为规范你开发的工具，它在代码的静态分析方面是非常全面的。能给你非常良好的错误提示，但是在代码的自动格式化方面稍显不足，不够顺滑。</p><p>所以搭配上<code>Prettier</code>这个代码自动格式化工具，开发起来将会非常舒适。</p><p>下面讲解一下详细的配置。</p><p>首先你需要安装一下两个插件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i eslint</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">config</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">prettier eslint</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">plugin</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">prettier </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i eslint</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">config</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">prettier eslint</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">plugin</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">prettier </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">D</span></span></code></pre></div><p>然后在你的配置中<code>加入prettier</code>配置，注意不是替换你的配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">extends</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:prettier/recommended&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 一行代码即可</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">extends</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:prettier/recommended&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 一行代码即可</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="eslint-plugin-prettier源码" tabindex="-1">eslint-plugin-prettier源码 <a class="header-anchor" href="#eslint-plugin-prettier源码" aria-label="Permalink to &quot;eslint-plugin-prettier源码&quot;">​</a></h3><p>通过前面的学习，相信大家对<code>eslint插件</code>已经非常了解了，我们随便来看看<code>eslint-plugin-prettier</code>是怎么实现的。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  configs: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    recommended: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      extends: [</span><span style="color:#9ECBFF;">&#39;prettier&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      plugins: [</span><span style="color:#9ECBFF;">&#39;prettier&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;prettier/prettier&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;arrow-body-style&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;off&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;prefer-arrow-callback&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;off&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    prettier: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        docs: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          url: </span><span style="color:#9ECBFF;">&#39;https://github.com/prettier/eslint-plugin-prettier#options&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        type: </span><span style="color:#9ECBFF;">&#39;layout&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        fixable: </span><span style="color:#9ECBFF;">&#39;code&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        schema: [</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            type: </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            properties: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">            additionalProperties: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            type: </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            properties: {</span></span>
<span class="line"><span style="color:#E1E4E8;">              usePrettierrc: { type: </span><span style="color:#9ECBFF;">&#39;boolean&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">              fileInfoOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                type: </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                properties: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">                additionalProperties: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              },</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            additionalProperties: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        messages: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#79B8FF;">INSERT</span><span style="color:#E1E4E8;">]: </span><span style="color:#9ECBFF;">&#39;Insert \`{{ insertText }}\`&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#79B8FF;">DELETE</span><span style="color:#E1E4E8;">]: </span><span style="color:#9ECBFF;">&#39;Delete \`{{ deleteText }}\`&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#79B8FF;">REPLACE</span><span style="color:#E1E4E8;">]: </span><span style="color:#9ECBFF;">&#39;Replace \`{{ deleteText }}\` with \`{{ insertText }}\`&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sourceCode.text;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">Program</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">prettier) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              prettier </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;prettier&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// ...其他逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              prettierSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> prettier.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(source, prettierOptions);</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(err </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SyntaxError</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> err;</span></span>
<span class="line"><span style="color:#E1E4E8;">              }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// ... 其他逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  configs: {</span></span>
<span class="line"><span style="color:#24292E;">    recommended: {</span></span>
<span class="line"><span style="color:#24292E;">      extends: [</span><span style="color:#032F62;">&#39;prettier&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      plugins: [</span><span style="color:#032F62;">&#39;prettier&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      rules: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;prettier/prettier&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;arrow-body-style&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;prefer-arrow-callback&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  rules: {</span></span>
<span class="line"><span style="color:#24292E;">    prettier: {</span></span>
<span class="line"><span style="color:#24292E;">      meta: {</span></span>
<span class="line"><span style="color:#24292E;">        docs: {</span></span>
<span class="line"><span style="color:#24292E;">          url: </span><span style="color:#032F62;">&#39;https://github.com/prettier/eslint-plugin-prettier#options&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        type: </span><span style="color:#032F62;">&#39;layout&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        fixable: </span><span style="color:#032F62;">&#39;code&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        schema: [</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            type: </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            properties: {},</span></span>
<span class="line"><span style="color:#24292E;">            additionalProperties: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            type: </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            properties: {</span></span>
<span class="line"><span style="color:#24292E;">              usePrettierrc: { type: </span><span style="color:#032F62;">&#39;boolean&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">              fileInfoOptions: {</span></span>
<span class="line"><span style="color:#24292E;">                type: </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                properties: {},</span></span>
<span class="line"><span style="color:#24292E;">                additionalProperties: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              },</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            additionalProperties: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">        messages: {</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#005CC5;">INSERT</span><span style="color:#24292E;">]: </span><span style="color:#032F62;">&#39;Insert \`{{ insertText }}\`&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#005CC5;">DELETE</span><span style="color:#24292E;">]: </span><span style="color:#032F62;">&#39;Delete \`{{ deleteText }}\`&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#005CC5;">REPLACE</span><span style="color:#24292E;">]: </span><span style="color:#032F62;">&#39;Replace \`{{ deleteText }}\` with \`{{ insertText }}\`&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#E36209;">context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ...其他</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sourceCode.text;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">Program</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">prettier) {</span></span>
<span class="line"><span style="color:#24292E;">              prettier </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;prettier&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// ...其他逻辑</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              prettierSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> prettier.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(source, prettierOptions);</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(err </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SyntaxError</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> err;</span></span>
<span class="line"><span style="color:#24292E;">              }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// ... 其他逻辑</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>我们可以看到，有两块代码，非常核心</p><ol><li>实现了一个规则<code>prettier/prettier</code>, 并且它的<code>fixable</code>, 代表它是可以修复代码的。在<code>create</code>方法中，调用了<code>prettier.format</code>修复代码~</li><li>暴露出了<code>configs.recommended</code>推荐配置，默认开启<code>prettier/prettier: &quot;error&quot;</code>配置， 帮助引入了<code>eslint-plugin-prettier</code>插件。</li></ol><p>那<code>eslint-config-prettier</code>中又有什么呢？</p><h3 id="eslint-config-prettier是配置什么的" tabindex="-1">eslint-config-prettier是配置什么的？ <a class="header-anchor" href="#eslint-config-prettier是配置什么的" aria-label="Permalink to &quot;eslint-config-prettier是配置什么的？&quot;">​</a></h3><p>可以看到配置了一大堆的默认规则。 <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f199023073f4a9b8eb26544268a09db~tplv-k3u1fbpfcp-watermark.image?" alt="" width="100%"></p><p>大家可以想象为什么要单独配置一份，然后把部分规则关闭了，其实原因很简单。</p><p><strong>可能会与其他格式化能力冲突，例如<code>quotes</code>这个规则，<code>prettier</code>强制将它关闭了，格式化的功能交给<code>prettier</code>来做</strong>。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/book/6946117847848321055" target="_blank" rel="noreferrer">Babel 插件通关秘籍</a></li><li><a href="https://juejin.cn/post/7009657813890760741" target="_blank" rel="noreferrer">TSLint 和 ESLint 是怎么融合在一起的</a></li><li><a href="https://juejin.cn/post/7010354638012547103" target="_blank" rel="noreferrer">Eslint 的 disable、enable 的注释配置是怎么实现的</a></li></ul>`,252),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
