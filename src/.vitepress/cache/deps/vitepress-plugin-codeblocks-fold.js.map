{
  "version": 3,
  "sources": ["../../../../node_modules/vitepress-plugin-codeblocks-fold/lib/index.js"],
  "sourcesContent": ["import { nextTick, onMounted, watch } from 'vue';\nlet themeChangeObserve = null;\n/**\n * 设置代码块折叠功能\n * @param frontmatter 前言\n * @param defaultAllFold 默认全部折叠\n * @param height 高度\n */\nconst cbf = (frontmatter, defaultAllFold, height) => {\n    // 获取前言值\n    let fm = true;\n    if (frontmatter.value && frontmatter.value.cbf !== undefined) {\n        fm = frontmatter.value.cbf;\n    }\n    // 获取文章里的所有代码块\n    const codeblocks = document.querySelectorAll('.vp-doc [class*=\"language-\"]');\n    // console.log(codeblocks);\n    // 遍历给代码块添加折叠\n    codeblocks.forEach((el, index) => {\n        const element = el;\n        if (element.offsetHeight !== 0 && element.offsetHeight <= height) {\n            return;\n        }\n        if (Array.isArray(fm)) { // 如果是数组\n            if (defaultAllFold) {\n                if (fm.indexOf(index + 1) === -1) {\n                    judge(element, height);\n                }\n            }\n            else {\n                if (fm.indexOf(index + 1) !== -1) {\n                    judge(element, height);\n                }\n            }\n        }\n        else { // 如果是布尔值\n            if (defaultAllFold && fm) {\n                judge(element, height);\n            }\n        }\n    });\n    !themeChangeObserve && themeChangeObserver();\n};\n/**\n * 兼容代码块组\n * @param el 元素\n * @param defaultAllFold 默认全部折叠\n * @param height 限制高度\n */\nconst observer = (el, height) => {\n    new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            const _el = mutation.target;\n            if (mutation.attributeName === 'class' && _el.classList.contains('active') && _el.offsetHeight > height) {\n                fold(el, height);\n            }\n        });\n    }).observe(el, {\n        attributeFilter: ['class']\n    });\n};\n/**\n * 判断是否是代码块组中未显示的代码块\n * @param el 元素\n * @param height 高度\n */\nconst judge = (el, height) => {\n    const displayStatus = window.getComputedStyle(el, null).getPropertyValue('display');\n    const isDetailBlock = el.parentElement.classList.contains('details');\n    if (displayStatus === 'none' || isDetailBlock) {\n        observer(el, height);\n    }\n    else {\n        fold(el, height);\n    }\n};\n/**\n * 折叠与展开\n * @param el 代码块元素\n * @param height 限制高度\n */\nconst fold = (el, height) => {\n    if (el.classList.contains('fold')) {\n        return;\n    }\n    el.classList.add('fold');\n    const pres = el.querySelectorAll('pre');\n    pres.forEach(pre => {\n        pre.style.height = height + 'px';\n        pre.style.overflow = 'hidden';\n    });\n    el.style.marginBottom = '48px';\n    el.style.borderRadius = '8px 8px 0 0';\n    const foldBtn = document.createElement('div');\n    const mask = document.createElement('div');\n    mask.style.backgroundImage = 'linear-gradient(-180deg, rgba(0, 0, 0, 0) 0%, var(--vp-code-block-bg) 100%)';\n    mask.className = 'codeblocks-mask';\n    foldBtn.style.backgroundColor = 'var(--vp-code-block-bg)';\n    foldBtn.className = 'fold-btn';\n    foldBtn.insertAdjacentHTML('afterbegin', `<svg t=\"1680893932803\" class=\"fold-btn-icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1473\" width=\"16\" height=\"16\" style=\"fill: var(--vp-code-block-bg); filter: invert(100%)\"><path d=\"M553.1392 778.88512l451.61472-451.61472c22.64576-22.64576 22.64576-59.4176 0-82.14016-22.64576-22.64576-59.4176-22.64576-82.14016 0l-410.5472 410.61888-410.61888-410.624c-22.64576-22.64576-59.4176-22.64576-82.14016 0-22.64576 22.64576-22.64576 59.4176 0 82.14016l451.69152 451.69152a58.08128 58.08128 0 0 0 82.14016-0.07168z\" p-id=\"1474\"></path></svg>`);\n    el.appendChild(mask);\n    el.appendChild(foldBtn);\n    // 添加折叠事件\n    foldBtn.onclick = () => {\n        const maskElement = el.querySelector('.codeblocks-mask');\n        const iconElement = el.querySelector('.fold-btn-icon');\n        pres.forEach(pre => {\n            foldBtnEvent({ pre, foldBtn, iconElement, maskElement }, height);\n        });\n    };\n};\n/**\n * 折叠事件\n * @param els 元素对象\n * @param height 高度\n */\nconst foldBtnEvent = (els, height) => {\n    const { pre, foldBtn, iconElement, maskElement } = els;\n    if (pre.classList.contains('expand')) { // 折叠\n        const oldPos = foldBtn.getBoundingClientRect().top;\n        pre.style.height = height + 'px';\n        pre.style.overflow = 'hidden';\n        pre.scrollTo(0, 0);\n        pre.classList.remove('expand');\n        maskElement.style.height = '48px';\n        iconElement.classList.remove('turn');\n        // 保持按钮位置并滚动页面\n        window.scrollTo(0, foldBtn.getBoundingClientRect().top + window.scrollY - oldPos);\n    }\n    else { // 展开\n        pre.style.height = 'auto';\n        pre.style.overflow = 'auto';\n        pre.classList.add('expand');\n        maskElement.style.height = '0';\n        iconElement.classList.add('turn');\n    }\n};\nconst rebindListener = (height) => {\n    // console.log('重新绑定监听...')\n    const codeblocks = document.querySelectorAll('.vp-doc [class*=\"language-\"]');\n    codeblocks.forEach(el => {\n        const foldBtn = el.querySelector('.fold-btn');\n        // console.log(`--->`, foldBtn?.onclick)\n        if (foldBtn && !foldBtn.onclick) {\n            foldBtn.onclick = () => {\n                const pre = el.querySelector('pre');\n                const maskElement = el.querySelector('.codeblocks-mask');\n                const iconElement = el.querySelector('.fold-btn-icon');\n                foldBtnEvent({ pre, foldBtn, iconElement, maskElement }, height);\n            };\n        }\n    });\n};\nfunction isRGBA(value) {\n    // 使用正则表达式匹配 RGBA 值的模式\n    const rgbaPattern = /^rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*(0(\\.\\d+)?|1(\\.0+)?)\\s*\\)$/i;\n    // 使用 test 方法检查值是否符合模式\n    return rgbaPattern.test(value);\n}\nconst themeChangeObserver = () => {\n    hideMask();\n    themeChangeObserve = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            if (mutation.attributeName === 'class') {\n                // console.log(`hideMask---${new Date()}`)\n                hideMask();\n            }\n        });\n    });\n    themeChangeObserve.observe(document.querySelector('html'), {\n        attributeFilter: ['class']\n    });\n};\nconst hideMask = () => {\n    if (document.querySelector('.vp-doc [class*=\"language-\"]')) {\n        let _isRGBA = isRGBA(window.getComputedStyle(document.querySelector('.vp-doc [class*=\"language-\"]'), null).getPropertyValue('background-color'));\n        // console.log(`isRGBA`, _isRGBA)\n        if (_isRGBA) {\n            nextTick(() => {\n                document.querySelectorAll('.codeblocks-mask').forEach(item => {\n                    // console.log(`display`);\n                    item.style.display = 'none';\n                });\n            }).then();\n        }\n        else {\n            nextTick(() => {\n                document.querySelectorAll('.codeblocks-mask').forEach(item => {\n                    item.style.display = '';\n                });\n            }).then();\n        }\n    }\n};\n/**\n * Set codeblocks folding.  设置代码块折叠\n * @param vitepressObj route and frontmatter.  路由与前言\n * @param defaultAllFold Collapse all by default?  默认全部折叠？\n * @param height The height of the folded codeblocks（default 400px）.  折叠后的代码块高度（默认 400px）\n */\nconst codeblocksFold = (vitepressObj, defaultAllFold = true, height = 400) => {\n    // console.log(`初始化`)\n    const { frontmatter, route } = vitepressObj;\n    onMounted(() => {\n        // console.log('onMounted...')\n        cbf(frontmatter, defaultAllFold, height);\n        rebindListener(height);\n    });\n    watch(() => route.path, () => {\n        // console.log('watch route...')\n        nextTick(() => {\n            cbf(vitepressObj.frontmatter, defaultAllFold, height);\n            rebindListener(height);\n        }).then();\n    });\n};\nexport default codeblocksFold;\n"],
  "mappings": "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",
  "names": []
}
